%PDF-1.5%‚„œ”
1 0 obj<</Pages 2 0 R/Outlines 6 0 R/Type/Catalog/Names 8 0 R/AcroForm 16 0 R/StructTreeRoot 11 0 R/Metadata 641 0 R/SpiderInfo 627 0 R>>endobj2 0 obj<</Count 89/Kids[258 0 R 257 0 R 371 0 R]/Type/Pages>>endobj3 0 obj<</ModDate(D:20050728164426-07'00')/CreationDate(D:20050728164414Z)/Title(Appendix : Common Software Errors)/Producer(Acrobat Web Capture 6.0)>>endobj5 0 obj nullendobj6 0 obj<</Count 2/Type/Outlines/First 639 0 R/Last 639 0 R>>endobj7 0 obj<</ID 633 0 R/Annots 20 0 R/Contents 449 0 R/Type/Page/Parent 55 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 57 0 R/T1_2 58 0 R/T1_3 59 0 R>>/ProcSet[/PDF/Text]>>/StructParents 0>>endobj8 0 obj<</Dests 9 0 R/IDS 637 0 R/URLS 638 0 R>>endobj9 0 obj<</Names[(NPnSc~qC€æZßËë÷2)84 0 R(NPnSc~qC€æZßËë÷3)85 0 R(NPnSc~qC€æZßËë÷4)86 0 R(NPnSc~qC€æZßËë÷5)87 0 R(NPnSc~qC€æZßËë÷6)88 0 R(NPnSc~qC€æZßËë÷7)93 0 R(NPnSc~qC€æZßËë÷8)94 0 R(NPnSc~qC€æZßËë÷9)95 0 R(NPnSc~qC€æZßËë÷a)96 0 R(NPnSc~qC€æZßËë÷b)97 0 R(NPnSc~qC€æZßËë÷bou)210 0 R(NPnSc~qC€æZßËë÷cal)223 0 R(NPnSc~qC€æZßËë÷con)255 0 R(NPnSc~qC€æZßËë÷err)196 0 R(NPnSc~qC€æZßËë÷gui)79 0 R(NPnSc~qC€æZßËë÷hard)375 0 R(NPnSc~qC€æZßËë÷ini)237 0 R(NPnSc~qC€æZßËë÷interp)310 0 R(NPnSc~qC€æZßËë÷load)356 0 R(NPnSc~qC€æZßËë÷race)338 0 R(NPnSc~qC€æZßËë÷source)397 0 R(NPnSc~qC€æZßËë÷test)406 0 R(NPnSc~qC€æZßËë÷top)10 0 R]>>endobj10 0 obj[7 0 R/XYZ 0 753.975586 null]endobj11 0 obj<</Type/StructTreeRoot/K 13 0 R/ClassMap 12 0 R/ParentTree 21 0 R/ParentTreeNextKey 89>>endobj12 0 obj<</SpdrArt<</O/WebCapture>>>>endobj13 0 obj<</K 14 0 R/P 11 0 R/S/Document>>endobj14 0 obj<</K[0<</Type/MCR/MCID 0/Pg 23 0 R>><</Type/MCR/MCID 0/Pg 25 0 R>><</Type/MCR/MCID 0/Pg 29 0 R>><</Type/MCR/MCID 0/Pg 31 0 R>><</Type/MCR/MCID 0/Pg 33 0 R>><</Type/MCR/MCID 0/Pg 35 0 R>><</Type/MCR/MCID 0/Pg 40 0 R>><</Type/MCR/MCID 0/Pg 45 0 R>><</Type/MCR/MCID 0/Pg 49 0 R>><</Type/MCR/MCID 0/Pg 53 0 R>><</Type/MCR/MCID 0/Pg 66 0 R>><</Type/MCR/MCID 0/Pg 74 0 R>><</Type/MCR/MCID 0/Pg 80 0 R>><</Type/MCR/MCID 0/Pg 89 0 R>><</Type/MCR/MCID 0/Pg 98 0 R>><</Type/MCR/MCID 0/Pg 103 0 R>><</Type/MCR/MCID 0/Pg 107 0 R>><</Type/MCR/MCID 0/Pg 111 0 R>><</Type/MCR/MCID 0/Pg 115 0 R>><</Type/MCR/MCID 0/Pg 119 0 R>><</Type/MCR/MCID 0/Pg 124 0 R>><</Type/MCR/MCID 0/Pg 128 0 R>><</Type/MCR/MCID 0/Pg 133 0 R>><</Type/MCR/MCID 0/Pg 137 0 R>><</Type/MCR/MCID 0/Pg 141 0 R>><</Type/MCR/MCID 0/Pg 146 0 R>><</Type/MCR/MCID 0/Pg 150 0 R>><</Type/MCR/MCID 0/Pg 154 0 R>><</Type/MCR/MCID 0/Pg 158 0 R>><</Type/MCR/MCID 0/Pg 162 0 R>><</Type/MCR/MCID 0/Pg 167 0 R>><</Type/MCR/MCID 0/Pg 171 0 R>><</Type/MCR/MCID 0/Pg 175 0 R>><</Type/MCR/MCID 0/Pg 179 0 R>><</Type/MCR/MCID 0/Pg 183 0 R>><</Type/MCR/MCID 0/Pg 188 0 R>><</Type/MCR/MCID 0/Pg 192 0 R>><</Type/MCR/MCID 0/Pg 197 0 R>><</Type/MCR/MCID 0/Pg 201 0 R>><</Type/MCR/MCID 0/Pg 205 0 R>><</Type/MCR/MCID 0/Pg 211 0 R>><</Type/MCR/MCID 0/Pg 215 0 R>><</Type/MCR/MCID 0/Pg 219 0 R>><</Type/MCR/MCID 0/Pg 224 0 R>><</Type/MCR/MCID 0/Pg 228 0 R>><</Type/MCR/MCID 0/Pg 233 0 R>><</Type/MCR/MCID 0/Pg 238 0 R>><</Type/MCR/MCID 0/Pg 242 0 R>><</Type/MCR/MCID 0/Pg 246 0 R>><</Type/MCR/MCID 0/Pg 250 0 R>><</Type/MCR/MCID 0/Pg 256 0 R>><</Type/MCR/MCID 0/Pg 262 0 R>><</Type/MCR/MCID 0/Pg 268 0 R>><</Type/MCR/MCID 0/Pg 272 0 R>><</Type/MCR/MCID 0/Pg 276 0 R>><</Type/MCR/MCID 0/Pg 281 0 R>><</Type/MCR/MCID 0/Pg 285 0 R>><</Type/MCR/MCID 0/Pg 289 0 R>><</Type/MCR/MCID 0/Pg 293 0 R>><</Type/MCR/MCID 0/Pg 297 0 R>><</Type/MCR/MCID 0/Pg 302 0 R>><</Type/MCR/MCID 0/Pg 306 0 R>><</Type/MCR/MCID 0/Pg 311 0 R>><</Type/MCR/MCID 0/Pg 315 0 R>><</Type/MCR/MCID 0/Pg 321 0 R>><</Type/MCR/MCID 0/Pg 326 0 R>><</Type/MCR/MCID 0/Pg 330 0 R>><</Type/MCR/MCID 0/Pg 334 0 R>><</Type/MCR/MCID 0/Pg 339 0 R>><</Type/MCR/MCID 0/Pg 343 0 R>><</Type/MCR/MCID 0/Pg 348 0 R>><</Type/MCR/MCID 0/Pg 352 0 R>><</Type/MCR/MCID 0/Pg 357 0 R>><</Type/MCR/MCID 0/Pg 361 0 R>><</Type/MCR/MCID 0/Pg 365 0 R>><</Type/MCR/MCID 0/Pg 370 0 R>><</Type/MCR/MCID 0/Pg 376 0 R>><</Type/MCR/MCID 0/Pg 380 0 R>><</Type/MCR/MCID 0/Pg 384 0 R>><</Type/MCR/MCID 0/Pg 388 0 R>><</Type/MCR/MCID 0/Pg 393 0 R>><</Type/MCR/MCID 0/Pg 398 0 R>><</Type/MCR/MCID 0/Pg 402 0 R>><</Type/MCR/MCID 0/Pg 407 0 R>><</Type/MCR/MCID 0/Pg 411 0 R>><</Type/MCR/MCID 0/Pg 416 0 R>><</Type/MCR/MCID 0/Pg 420 0 R>><</Type/MCR/MCID 0/Pg 424 0 R>>]/C/SpdrArt/P 13 0 R/S/Article/Pg 7 0 R>>endobj15 0 obj<</Rect[10.0 755.375549 11.0 756.375549]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</URI(http://www.webtrendslive.com/redirect.asp?siteID=88877)/S/URI>>>>endobj16 0 obj<</Fields[]/DR<</Encoding<</PDFDocEncoding 19 0 R>>/Font<</Helv 18 0 R/ZaDb 17 0 R>>>>/DA(/Helv 0 Tf 0 g )>>endobj17 0 obj<</Type/Font/Name/ZaDb/BaseFont/ZapfDingbats/Subtype/Type1>>endobj18 0 obj<</Type/Font/Name/Helv/Encoding 19 0 R/BaseFont/Helvetica/Subtype/Type1>>endobj19 0 obj<</Type/Encoding/Differences[24/breve/caron/circumflex/dotaccent/hungarumlaut/ogonek/ring/tilde 39/quotesingle 96/grave 128/bullet/dagger/daggerdbl/ellipsis/emdash/endash/florin/fraction/guilsinglleft/guilsinglright/minus/perthousand/quotedblbase/quotedblleft/quotedblright/quoteleft/quoteright/quotesinglbase/trademark/fi/fl/Lslash/OE/Scaron/Ydieresis/Zcaron/dotlessi/lslash/oe/scaron/zcaron 160/Euro 164/currency 166/brokenbar 168/dieresis/copyright/ordfeminine 172/logicalnot/.notdef/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]>>endobj20 0 obj[15 0 R]endobj21 0 obj<</Kids[319 0 R 320 0 R]>>endobj22 0 obj[14 0 R]endobj23 0 obj<</ID 633 0 R/Contents 451 0 R/Type/Page/Parent 55 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 59 0 R>>/ProcSet[/PDF/Text]>>/StructParents 1>>endobj24 0 obj[14 0 R]endobj25 0 obj<</ID 633 0 R/Annots 28 0 R/Contents 453 0 R/Type/Page/Parent 55 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 57 0 R/T1_2 75 0 R>>/ProcSet[/PDF/Text]>>/StructParents 2>>endobj26 0 obj[14 0 R]endobj27 0 obj<</Rect[42.600006 580.0 214.205536 593.923096]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷gui)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#gui)/S/URI>>>>endobj28 0 obj[27 0 R]endobj29 0 obj<</ID 633 0 R/Contents 455 0 R/Type/Page/Parent 55 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 75 0 R>>/ProcSet[/PDF/Text]>>/StructParents 3>>endobj30 0 obj[14 0 R]endobj31 0 obj<</ID 633 0 R/Contents 457 0 R/Type/Page/Parent 55 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 75 0 R>>/ProcSet[/PDF/Text]>>/StructParents 4>>endobj32 0 obj[14 0 R]endobj33 0 obj<</ID 633 0 R/Contents 459 0 R/Type/Page/Parent 54 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 75 0 R>>/ProcSet[/PDF/Text]>>/StructParents 5>>endobj34 0 obj[14 0 R]endobj35 0 obj<</ID 633 0 R/Annots 38 0 R/Contents 461 0 R/Type/Page/Parent 54 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 75 0 R>>/ProcSet[/PDF/Text]>>/StructParents 6>>endobj36 0 obj[14 0 R]endobj37 0 obj<</Rect[42.600006 564.923096 159.631378 578.846191]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷err)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#err)/S/URI>>>>endobj38 0 obj[37 0 R 39 0 R]endobj39 0 obj<</Rect[42.600006 88.123077 238.617233 102.046158]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷bou)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#bou)/S/URI>>>>endobj40 0 obj<</ID 633 0 R/Annots 43 0 R/Contents 463 0 R/Type/Page/Parent 54 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 75 0 R>>/ProcSet[/PDF/Text]>>/StructParents 7>>endobj41 0 obj[14 0 R]endobj42 0 obj<</Rect[42.600006 548.276917 191.951996 562.200012]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷cal)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#cal)/S/URI>>>>endobj43 0 obj[42 0 R 44 0 R]endobj44 0 obj<</Rect[42.600006 311.846161 216.389542 325.769226]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷ini)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#ini)/S/URI>>>>endobj45 0 obj<</ID 633 0 R/Annots 47 0 R/Contents 465 0 R/Type/Page/Parent 54 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 75 0 R>>/ProcSet[/PDF/Text]>>/StructParents 8>>endobj46 0 obj<</Rect[42.600006 750.784607 205.585846 764.707703]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷con)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#con)/S/URI>>>>endobj47 0 obj[46 0 R]endobj48 0 obj[14 0 R]endobj49 0 obj<</ID 633 0 R/Annots 52 0 R/Contents 467 0 R/Type/Page/Parent 54 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 75 0 R>>/ProcSet[/PDF/Text]>>/StructParents 9>>endobj50 0 obj[14 0 R]endobj51 0 obj<</Rect[42.600006 533.584595 345.607391 547.50769]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷interp)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#interp)/S/URI>>>>endobj52 0 obj[51 0 R]endobj53 0 obj<</ID 633 0 R/Annots 64 0 R/Contents 469 0 R/Type/Page/Parent 99 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 75 0 R>>/ProcSet[/PDF/Text]>>/StructParents 10>>endobj54 0 obj<</Count 5/Kids[33 0 R 35 0 R 40 0 R 45 0 R 49 0 R]/Type/Pages/Parent 258 0 R>>endobj55 0 obj<</Count 5/Kids[7 0 R 23 0 R 25 0 R 29 0 R 31 0 R]/Type/Pages/Parent 258 0 R>>endobj56 0 obj<</Type/Font/Encoding/WinAnsiEncoding/BaseFont/Times-Roman/Subtype/Type1>>endobj57 0 obj<</Type/Font/Encoding/WinAnsiEncoding/BaseFont/Helvetica-Bold/Subtype/Type1>>endobj58 0 obj<</Type/Font/Encoding/WinAnsiEncoding/BaseFont/Times-Bold/Subtype/Type1>>endobj59 0 obj<</Type/Font/Encoding/WinAnsiEncoding/BaseFont/Times-BoldItalic/Subtype/Type1>>endobj62 0 obj[14 0 R]endobj63 0 obj<</Rect[42.600006 628.400024 163.223999 642.323059]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷race)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#race)/S/URI>>>>endobj64 0 obj[63 0 R 65 0 R]endobj65 0 obj<</Rect[42.600006 360.953857 162.513229 374.876923]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷load)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#load)/S/URI>>>>endobj66 0 obj<</ID 633 0 R/Annots 70 0 R/Contents 471 0 R/Type/Page/Parent 99 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 75 0 R>>/ProcSet[/PDF/Text]>>/StructParents 11>>endobj69 0 obj<</Rect[42.600006 733.046143 117.980301 746.969238]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷hard)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#hard)/S/URI>>>>endobj70 0 obj[69 0 R 72 0 R 73 0 R]endobj71 0 obj[14 0 R]endobj72 0 obj<</Rect[42.600006 279.50769 280.992004 293.430786]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷source)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#source)/S/URI>>>>endobj73 0 obj<</Rect[42.600006 74.0923 157.48616 88.015381]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷test)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#test)/S/URI>>>>endobj74 0 obj<</ID 633 0 R/Contents 473 0 R/Type/Page/Parent 99 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 75 0 R/T1_2 58 0 R/T1_3 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 12>>endobj75 0 obj<</Type/Font/Encoding/WinAnsiEncoding/BaseFont/Helvetica/Subtype/Type1>>endobj78 0 obj[14 0 R]endobj79 0 obj[74 0 R/XYZ 0 255.815384 null]endobj80 0 obj<</ID 633 0 R/Contents 475 0 R/Type/Page/Parent 99 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 129 0 R/T1_2 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 13>>endobj83 0 obj[14 0 R]endobj84 0 obj[80 0 R/XYZ 0 438.0 null]endobj85 0 obj[80 0 R/XYZ 0 368.600006 null]endobj86 0 obj[80 0 R/XYZ 0 215.199997 null]endobj87 0 obj[80 0 R/XYZ 0 145.800003 null]endobj88 0 obj[80 0 R/XYZ 0 59.600006 null]endobj89 0 obj<</ID 633 0 R/Contents 477 0 R/Type/Page/Parent 99 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 14>>endobj92 0 obj[14 0 R]endobj93 0 obj[89 0 R/XYZ 0 713.400024 null]endobj94 0 obj[89 0 R/XYZ 0 660.799988 null]endobj95 0 obj[89 0 R/XYZ 0 574.599976 null]endobj96 0 obj[89 0 R/XYZ 0 471.600006 null]endobj97 0 obj[89 0 R/XYZ 0 385.399994 null]endobj98 0 obj<</ID 633 0 R/Contents 479 0 R/Type/Page/Parent 120 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 15>>endobj99 0 obj<</Count 5/Kids[53 0 R 66 0 R 74 0 R 80 0 R 89 0 R]/Type/Pages/Parent 258 0 R>>endobj102 0 obj[14 0 R]endobj103 0 obj<</ID 633 0 R/Contents 481 0 R/Type/Page/Parent 120 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 16>>endobj106 0 obj[14 0 R]endobj107 0 obj<</ID 633 0 R/Contents 483 0 R/Type/Page/Parent 120 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 17>>endobj110 0 obj[14 0 R]endobj111 0 obj<</ID 633 0 R/Contents 485 0 R/Type/Page/Parent 120 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 18>>endobj114 0 obj[14 0 R]endobj115 0 obj<</ID 633 0 R/Contents 487 0 R/Type/Page/Parent 120 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 19>>endobj118 0 obj[14 0 R]endobj119 0 obj<</ID 633 0 R/Contents 489 0 R/Type/Page/Parent 142 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 20>>endobj120 0 obj<</Count 5/Kids[98 0 R 103 0 R 107 0 R 111 0 R 115 0 R]/Type/Pages/Parent 258 0 R>>endobj123 0 obj[14 0 R]endobj124 0 obj<</ID 633 0 R/Contents 491 0 R/Type/Page/Parent 142 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 21>>endobj127 0 obj[14 0 R]endobj128 0 obj<</ID 633 0 R/Contents 493 0 R/Type/Page/Parent 142 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 22>>endobj129 0 obj<</Type/Font/BaseFont/ZapfDingbats/Subtype/Type1>>endobj132 0 obj[14 0 R]endobj133 0 obj<</ID 633 0 R/Contents 495 0 R/Type/Page/Parent 142 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 129 0 R/T1_2 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 23>>endobj136 0 obj[14 0 R]endobj137 0 obj<</ID 633 0 R/Contents 497 0 R/Type/Page/Parent 142 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 24>>endobj140 0 obj[14 0 R]endobj141 0 obj<</ID 633 0 R/Contents 499 0 R/Type/Page/Parent 163 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 25>>endobj142 0 obj<</Count 5/Kids[119 0 R 124 0 R 128 0 R 133 0 R 137 0 R]/Type/Pages/Parent 258 0 R>>endobj145 0 obj[14 0 R]endobj146 0 obj<</ID 633 0 R/Contents 501 0 R/Type/Page/Parent 163 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 26>>endobj149 0 obj[14 0 R]endobj150 0 obj<</ID 633 0 R/Contents 503 0 R/Type/Page/Parent 163 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 27>>endobj153 0 obj[14 0 R]endobj154 0 obj<</ID 633 0 R/Contents 505 0 R/Type/Page/Parent 163 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 28>>endobj157 0 obj[14 0 R]endobj158 0 obj<</ID 633 0 R/Contents 507 0 R/Type/Page/Parent 163 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 29>>endobj161 0 obj[14 0 R]endobj162 0 obj<</ID 633 0 R/Contents 509 0 R/Type/Page/Parent 184 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 30>>endobj163 0 obj<</Count 5/Kids[141 0 R 146 0 R 150 0 R 154 0 R 158 0 R]/Type/Pages/Parent 257 0 R>>endobj166 0 obj[14 0 R]endobj167 0 obj<</ID 633 0 R/Contents 511 0 R/Type/Page/Parent 184 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 31>>endobj170 0 obj[14 0 R]endobj171 0 obj<</ID 633 0 R/Contents 513 0 R/Type/Page/Parent 184 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 32>>endobj174 0 obj[14 0 R]endobj175 0 obj<</ID 633 0 R/Contents 515 0 R/Type/Page/Parent 184 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 33>>endobj178 0 obj[14 0 R]endobj179 0 obj<</ID 633 0 R/Contents 517 0 R/Type/Page/Parent 184 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 129 0 R/T1_2 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 34>>endobj182 0 obj[14 0 R]endobj183 0 obj<</ID 633 0 R/Contents 519 0 R/Type/Page/Parent 206 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 35>>endobj184 0 obj<</Count 5/Kids[162 0 R 167 0 R 171 0 R 175 0 R 179 0 R]/Type/Pages/Parent 257 0 R>>endobj187 0 obj[14 0 R]endobj188 0 obj<</ID 633 0 R/Contents 521 0 R/Type/Page/Parent 206 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 36>>endobj191 0 obj[14 0 R]endobj192 0 obj<</ID 633 0 R/Contents 523 0 R/Type/Page/Parent 206 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 37>>endobj195 0 obj[14 0 R]endobj196 0 obj[192 0 R/XYZ 0 215.199997 null]endobj197 0 obj<</ID 633 0 R/Contents 525 0 R/Type/Page/Parent 206 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 38>>endobj200 0 obj[14 0 R]endobj201 0 obj<</ID 633 0 R/Contents 527 0 R/Type/Page/Parent 206 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 39>>endobj204 0 obj[14 0 R]endobj205 0 obj<</ID 633 0 R/Contents 529 0 R/Type/Page/Parent 229 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 40>>endobj206 0 obj<</Count 5/Kids[183 0 R 188 0 R 192 0 R 197 0 R 201 0 R]/Type/Pages/Parent 257 0 R>>endobj209 0 obj[14 0 R]endobj210 0 obj[205 0 R/XYZ 0 76.399994 null]endobj211 0 obj<</ID 633 0 R/Contents 531 0 R/Type/Page/Parent 229 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 129 0 R/T1_2 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 41>>endobj214 0 obj[14 0 R]endobj215 0 obj<</ID 633 0 R/Contents 533 0 R/Type/Page/Parent 229 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 263 0 R/T1_3 264 0 R>>/ProcSet[/PDF/Text]>>/StructParents 42>>endobj218 0 obj[14 0 R]endobj219 0 obj<</ID 633 0 R/Contents 535 0 R/Type/Page/Parent 229 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 43>>endobj222 0 obj[14 0 R]endobj223 0 obj[219 0 R/XYZ 0 284.600006 null]endobj224 0 obj<</ID 633 0 R/Contents 537 0 R/Type/Page/Parent 229 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 44>>endobj227 0 obj[14 0 R]endobj228 0 obj<</ID 633 0 R/Contents 539 0 R/Type/Page/Parent 251 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 45>>endobj229 0 obj<</Count 5/Kids[205 0 R 211 0 R 215 0 R 219 0 R 224 0 R]/Type/Pages/Parent 257 0 R>>endobj232 0 obj[14 0 R]endobj233 0 obj<</ID 633 0 R/Contents 541 0 R/Type/Page/Parent 251 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 46>>endobj236 0 obj[14 0 R]endobj237 0 obj[233 0 R/XYZ 0 200.600006 null]endobj238 0 obj<</ID 633 0 R/Contents 543 0 R/Type/Page/Parent 251 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 129 0 R/T1_2 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 47>>endobj241 0 obj[14 0 R]endobj242 0 obj<</ID 633 0 R/Contents 545 0 R/Type/Page/Parent 251 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 48>>endobj245 0 obj[14 0 R]endobj246 0 obj<</ID 633 0 R/Contents 547 0 R/Type/Page/Parent 251 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 49>>endobj249 0 obj[14 0 R]endobj250 0 obj<</ID 633 0 R/Contents 549 0 R/Type/Page/Parent 277 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 50>>endobj251 0 obj<</Count 5/Kids[228 0 R 233 0 R 238 0 R 242 0 R 246 0 R]/Type/Pages/Parent 257 0 R>>endobj254 0 obj[14 0 R]endobj255 0 obj[250 0 R/XYZ 0 554.400024 null]endobj256 0 obj<</ID 633 0 R/Contents 551 0 R/Type/Page/Parent 277 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 129 0 R/T1_2 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 51>>endobj257 0 obj<</Count 25/Kids[163 0 R 184 0 R 206 0 R 229 0 R 251 0 R]/Type/Pages/Parent 2 0 R>>endobj258 0 obj<</Count 25/Kids[55 0 R 54 0 R 99 0 R 120 0 R 142 0 R]/Type/Pages/Parent 2 0 R>>endobj261 0 obj[14 0 R]endobj262 0 obj<</ID 633 0 R/Contents 553 0 R/Type/Page/Parent 277 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 129 0 R/T1_2 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 52>>endobj263 0 obj<</Type/Font/Encoding/WinAnsiEncoding/BaseFont/Times-Italic/Subtype/Type1>>endobj264 0 obj<</Type/Font/Encoding/WinAnsiEncoding/BaseFont/Courier/Subtype/Type1>>endobj267 0 obj[14 0 R]endobj268 0 obj<</ID 633 0 R/Contents 555 0 R/Type/Page/Parent 277 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 53>>endobj271 0 obj[14 0 R]endobj272 0 obj<</ID 633 0 R/Contents 557 0 R/Type/Page/Parent 277 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 54>>endobj275 0 obj[14 0 R]endobj276 0 obj<</ID 633 0 R/Contents 559 0 R/Type/Page/Parent 298 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 55>>endobj277 0 obj<</Count 5/Kids[250 0 R 256 0 R 262 0 R 268 0 R 272 0 R]/Type/Pages/Parent 371 0 R>>endobj280 0 obj[14 0 R]endobj281 0 obj<</ID 633 0 R/Contents 561 0 R/Type/Page/Parent 298 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 56>>endobj284 0 obj[14 0 R]endobj285 0 obj<</ID 633 0 R/Contents 563 0 R/Type/Page/Parent 298 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 264 0 R>>/ProcSet[/PDF/Text]>>/StructParents 57>>endobj288 0 obj[14 0 R]endobj289 0 obj<</ID 633 0 R/Contents 565 0 R/Type/Page/Parent 298 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 264 0 R>>/ProcSet[/PDF/Text]>>/StructParents 58>>endobj292 0 obj[14 0 R]endobj293 0 obj<</ID 633 0 R/Contents 567 0 R/Type/Page/Parent 298 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 59>>endobj296 0 obj[14 0 R]endobj297 0 obj<</ID 633 0 R/Contents 569 0 R/Type/Page/Parent 322 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 264 0 R>>/ProcSet[/PDF/Text]>>/StructParents 60>>endobj298 0 obj<</Count 5/Kids[276 0 R 281 0 R 285 0 R 289 0 R 293 0 R]/Type/Pages/Parent 371 0 R>>endobj301 0 obj[14 0 R]endobj302 0 obj<</ID 633 0 R/Contents 571 0 R/Type/Page/Parent 322 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 61>>endobj305 0 obj[14 0 R]endobj306 0 obj<</ID 633 0 R/Contents 573 0 R/Type/Page/Parent 322 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 62>>endobj309 0 obj[14 0 R]endobj310 0 obj[306 0 R/XYZ 0 646.200012 null]endobj311 0 obj<</ID 633 0 R/Contents 575 0 R/Type/Page/Parent 322 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 63>>endobj314 0 obj[14 0 R]endobj315 0 obj<</ID 633 0 R/Contents 577 0 R/Type/Page/Parent 322 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 64>>endobj318 0 obj[14 0 R]endobj319 0 obj<</Nums[0 22 0 R 1 24 0 R 2 26 0 R 3 30 0 R 4 32 0 R 5 34 0 R 6 36 0 R 7 41 0 R 8 48 0 R 9 50 0 R 10 62 0 R 11 71 0 R 12 78 0 R 13 83 0 R 14 92 0 R 15 102 0 R 16 106 0 R 17 110 0 R 18 114 0 R 19 118 0 R 20 123 0 R 21 127 0 R 22 132 0 R 23 136 0 R 24 140 0 R 25 145 0 R 26 149 0 R 27 153 0 R 28 157 0 R 29 161 0 R 30 166 0 R 31 170 0 R]/Limits[0 31]>>endobj320 0 obj<</Nums[32 174 0 R 33 178 0 R 34 182 0 R 35 187 0 R 36 191 0 R 37 195 0 R 38 200 0 R 39 204 0 R 40 209 0 R 41 214 0 R 42 218 0 R 43 222 0 R 44 227 0 R 45 232 0 R 46 236 0 R 47 241 0 R 48 245 0 R 49 249 0 R 50 254 0 R 51 261 0 R 52 267 0 R 53 271 0 R 54 275 0 R 55 280 0 R 56 284 0 R 57 288 0 R 58 292 0 R 59 296 0 R 60 301 0 R 61 305 0 R 62 309 0 R 63 314 0 R 64 318 0 R 65 325 0 R 66 329 0 R 67 333 0 R 68 337 0 R 69 342 0 R 70 347 0 R 71 351 0 R 72 355 0 R 73 360 0 R 74 364 0 R 75 369 0 R 76 374 0 R 77 379 0 R 78 383 0 R 79 387 0 R 80 392 0 R 81 396 0 R 82 401 0 R 83 405 0 R 84 410 0 R 85 415 0 R 86 419 0 R 87 423 0 R 88 427 0 R]/Limits[32 88]>>endobj321 0 obj<</ID 633 0 R/Contents 579 0 R/Type/Page/Parent 344 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 65>>endobj322 0 obj<</Count 5/Kids[297 0 R 302 0 R 306 0 R 311 0 R 315 0 R]/Type/Pages/Parent 371 0 R>>endobj325 0 obj[14 0 R]endobj326 0 obj<</ID 633 0 R/Contents 581 0 R/Type/Page/Parent 344 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 66>>endobj329 0 obj[14 0 R]endobj330 0 obj<</ID 633 0 R/Contents 583 0 R/Type/Page/Parent 344 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 67>>endobj333 0 obj[14 0 R]endobj334 0 obj<</ID 633 0 R/Contents 585 0 R/Type/Page/Parent 344 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 68>>endobj337 0 obj[14 0 R]endobj338 0 obj[334 0 R/XYZ 0 454.799988 null]endobj339 0 obj<</ID 633 0 R/Contents 587 0 R/Type/Page/Parent 344 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 69>>endobj342 0 obj[14 0 R]endobj343 0 obj<</ID 633 0 R/Contents 589 0 R/Type/Page/Parent 366 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 70>>endobj344 0 obj<</Count 5/Kids[321 0 R 326 0 R 330 0 R 334 0 R 339 0 R]/Type/Pages/Parent 371 0 R>>endobj347 0 obj[14 0 R]endobj348 0 obj<</ID 633 0 R/Contents 591 0 R/Type/Page/Parent 366 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 71>>endobj351 0 obj[14 0 R]endobj352 0 obj<</ID 633 0 R/Contents 593 0 R/Type/Page/Parent 366 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 72>>endobj355 0 obj[14 0 R]endobj356 0 obj[352 0 R/XYZ 0 318.200012 null]endobj357 0 obj<</ID 633 0 R/Contents 595 0 R/Type/Page/Parent 366 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 129 0 R/T1_2 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 73>>endobj360 0 obj[14 0 R]endobj361 0 obj<</ID 633 0 R/Contents 597 0 R/Type/Page/Parent 366 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 74>>endobj364 0 obj[14 0 R]endobj365 0 obj<</ID 633 0 R/Contents 599 0 R/Type/Page/Parent 389 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 75>>endobj366 0 obj<</Count 5/Kids[343 0 R 348 0 R 352 0 R 357 0 R 361 0 R]/Type/Pages/Parent 371 0 R>>endobj369 0 obj[14 0 R]endobj370 0 obj<</ID 633 0 R/Contents 601 0 R/Type/Page/Parent 389 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 76>>endobj371 0 obj<</Count 39/Kids[277 0 R 298 0 R 322 0 R 344 0 R 366 0 R 389 0 R 412 0 R]/Type/Pages/Parent 2 0 R>>endobj374 0 obj[14 0 R]endobj375 0 obj[370 0 R/XYZ 0 164.800003 null]endobj376 0 obj<</ID 633 0 R/Contents 603 0 R/Type/Page/Parent 389 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 77>>endobj379 0 obj[14 0 R]endobj380 0 obj<</ID 633 0 R/Contents 605 0 R/Type/Page/Parent 389 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 78>>endobj383 0 obj[14 0 R]endobj384 0 obj<</ID 633 0 R/Contents 609 0 R/Type/Page/Parent 389 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 79>>endobj387 0 obj[14 0 R]endobj388 0 obj<</ID 633 0 R/Contents 611 0 R/Type/Page/Parent 412 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 80>>endobj389 0 obj<</Count 5/Kids[365 0 R 370 0 R 376 0 R 380 0 R 384 0 R]/Type/Pages/Parent 371 0 R>>endobj392 0 obj[14 0 R]endobj393 0 obj<</ID 633 0 R/Contents 613 0 R/Type/Page/Parent 412 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 81>>endobj396 0 obj[14 0 R]endobj397 0 obj[393 0 R/XYZ 0 593.599976 null]endobj398 0 obj<</ID 633 0 R/Contents 615 0 R/Type/Page/Parent 412 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 263 0 R>>/ProcSet[/PDF/Text]>>/StructParents 82>>endobj401 0 obj[14 0 R]endobj402 0 obj<</ID 633 0 R/Contents 617 0 R/Type/Page/Parent 412 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R/T1_2 129 0 R>>/ProcSet[/PDF/Text]>>/StructParents 83>>endobj405 0 obj[14 0 R]endobj406 0 obj[402 0 R/XYZ 0 518.599976 null]endobj407 0 obj<</ID 633 0 R/Contents 619 0 R/Type/Page/Parent 412 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 129 0 R/T1_2 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 84>>endobj410 0 obj[14 0 R]endobj411 0 obj<</ID 633 0 R/Contents 621 0 R/Type/Page/Parent 412 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 85>>endobj412 0 obj<</Count 9/Kids[388 0 R 393 0 R 398 0 R 402 0 R 407 0 R 411 0 R 416 0 R 420 0 R 424 0 R]/Type/Pages/Parent 371 0 R>>endobj415 0 obj[14 0 R]endobj416 0 obj<</ID 633 0 R/Contents 623 0 R/Type/Page/Parent 412 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 86>>endobj419 0 obj[14 0 R]endobj420 0 obj<</ID 633 0 R/Contents 625 0 R/Type/Page/Parent 412 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 87>>endobj423 0 obj[14 0 R]endobj424 0 obj<</ID 633 0 R/Annots 429 0 R/Contents 607 0 R/Type/Page/Parent 412 0 R/MediaBox[0.0 0.0 612.0 792.0]/Resources<</Font<</T1_0 56 0 R/T1_1 58 0 R>>/ProcSet[/PDF/Text]>>/StructParents 88>>endobj427 0 obj[14 0 R]endobj428 0 obj<</Rect[42.600006 507.799988 116.492004 522.799988]/Border[0 0 0]/BS<</W 0/Type/Border/S/S>>/Subtype/Link/A<</D(NPnSc~qC€æZßËë÷top)/S/GoTo>>/PA<</URI(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html#top)/S/URI>>>>endobj429 0 obj[428 0 R]endobj448 0 obj 4037endobj449 0 obj<</Length 448 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 11 755.37555 Tm
( )Tj
1 0 0 rg
/T1_1 1 Tf
16.15384 0 0 16.15384 200.53961 718.8457 Tm
(Testing Computer Software)Tj
2.88901 -1.2 Td
(Second Edition )Tj
-6.83299 -2.37619 Td
(APPENDIX: COMMON SOFTWARE ERRORS)Tj
0 0 0 rg
/T1_0 1 Tf
14 0 0 14 10 624.82172 Tm
(Copyright \251 1988 by Cem Kaner)Tj
0 -1.2 TD
(Copyright \251 1993 by Cem Kaner, Jack Falk, Hung Quoc Nguyen )Tj
/T1_2 1 Tf
2.32857 -2.77142 Td
(THE REASON FOR THIS APPENDIX)Tj
/T1_0 1 Tf
( )Tj
0 -2.55714 TD
(This Appendix describes over 400 bugs. The descriptions are short, inclu\ding only what we )Tj
0 -1.2 TD
(considered the most interesting information. It's worthwhile reading thi\s list, even though )Tj
T*
(you may find it boring. On first reading it provides a frame of referenc\e\363details, and )Tj
T*
(background about problems you should look for while testing. Its greater\ value is as an )Tj
T*
(organized list of program problems for future reference. A good list, bu\ilt up with time and )Tj
T*
(experience, can be a powerful tool. )Tj
ET
0.5 0.5 0.5 rg
108.45 416.64615 m
108.45 418.64615 l
503.54999 418.64615 l
502.54999 417.64615 l
109.45 417.64615 l
109.45 417.64615 l
h
f
0.875 0.875 0.875 rg
503.54999 418.64615 m
503.54999 416.64615 l
108.45 416.64615 l
109.45 417.64615 l
502.54999 417.64615 l
502.54999 417.64615 l
h
f
0 0 0 rg
BT
/T1_3 1 Tf
14 0 0 14 46.76199 397.6217 Tm
(A set of test materials is nothing more than a list of possible problems\ in a program and a )Tj
1.86349 -1.2 Td
(set of procedures for determining whether the problems are actually ther\e or not.)Tj
ET
0.5 0.5 0.5 rg
108.45 367.04614 m
108.45 369.04614 l
503.54999 369.04614 l
502.54999 368.04614 l
109.45 368.04614 l
109.45 368.04614 l
h
f
0.875 0.875 0.875 rg
503.54999 369.04614 m
503.54999 367.04614 l
108.45 367.04614 l
109.45 368.04614 l
502.54999 368.04614 l
502.54999 368.04614 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 329.0217 Tm
(Generating reference lists of bugs on the fly is risky and inefficient. \It takes too long to )Tj
T*
(dredge up old insights, and you're too likely to get stuck on one or a f\ew themes. We prefer )Tj
T*
(to check a comprehensive "standard" list to get further ideas for testin\g a program. This )Tj
T*
(Appendix is an example of a standard list. )Tj
0 -2.55714 TD
(Whenever you test a new program, you'll think of new entries for this li\st. Add them to it. )Tj
0 -1.2 TD
(We recommend that you enter this list onto your computer and manage it w\ith an outline )Tj
T*
(processor. )Tj
0 -2.55714 TD
(Here are examples of ways you should use this list: )Tj
/T1_2 1 Tf
19.38461 0 0 19.38461 42.60001 132.99692 Tm
(1.)Tj
/T1_0 1 Tf
14 0 0 14 57.13846 132.99692 Tm
( Evaluate test materials developed for you by someone else. When you con\tract out the )Tj
-1.03847 -1.33121 Td
(development of test materials you're likely to get back many thick binde\rs of test cases. They )Tj
0 -1.2 TD
(look impressive, but they're incomplete. The author has blind spots, whi\ch you have to find. )Tj
T*
(For example, in stacks of test materials that we've seen developed by co\ntract testing )Tj
T*
(agencies, we've yet to see an explicit race condition test. Unfortunatel\y, it's easier to see what )Tj
T*
(an author had in mind than to step back and see what's missing. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(1 \of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj450 0 obj 4159endobj451 0 obj<</Length 450 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 741.36017 Tm
(We recommend evaluating the coverage of test materials against a checkli\st. Include a few )Tj
0 -1.2 TD
(examples of each class of error that you can imagine existing in the pro\gram. It doesn't )Tj
T*
(matter whether the program has these problems \363 it only matters that \they could be there. )Tj
T*
(Once the list is complete, check the test materials to see which problem\s they would expose. )Tj
T*
(If these tests wouldn't expose some errors in your list, look for tests \for similar problems. )Tj
T*
(This can quickly expose large classes of missing tests. )Tj
0 -2.55714 TD
(It's easy to make a checklist from a large error list like the one in th\is Appendix. Just look for )Tj
0 -1.2 TD
(classes of errors that are relevant to your testing project and find a f\ew good examples of )Tj
T*
(each. Add any other problems that you think of that seem important for t\he program under )Tj
T*
(test. )Tj
/T1_1 1 Tf
19.38461 0 0 19.38461 42.60001 530.73535 Tm
(2.)Tj
/T1_0 1 Tf
14 0 0 14 57.13846 530.73535 Tm
( Developing your own tests. )Tj
-1.03847 -2.68834 Td
(Write your own list of errors that you think the program could have. The\n look here for more )Tj
T*
(ideas. Consider each problem in this Appendix: if you're sure it's irrel\evant to the program, )Tj
T*
(forget it. Otherwise write a test case \(or a few\) to see if the progra\m has the problem. When )Tj
T*
(in doubt, ask the programmer whether a given type of error is possible i\n the program and )Tj
T*
(how to test for it. )Tj
0 -2.55714 TD
(We also recommend this list for testing "on the fly." If you don't have \time to plan and )Tj
0 -1.2 TD
(document a set of tests for a program, test from a list of candidate pro\blems. )Tj
/T1_1 1 Tf
19.38461 0 0 19.38461 42.60001 332.87384 Tm
(3.)Tj
/T1_0 1 Tf
14 0 0 14 57.13846 332.87384 Tm
( Irreproducible bugs. )Tj
-1.03847 -2.68834 Td
(A bug is hard to replicate because you don't know what triggered the fai\lure, what the )Tj
T*
(program did or displayed, or what could cause such a problem. You give u\p because you run )Tj
T*
(out of hypotheses. )Tj
ET
0.5 0.5 0.5 rg
108.45 228.86154 m
108.45 230.86154 l
503.54999 230.86154 l
502.54999 229.86154 l
109.45 229.86154 l
109.45 229.86154 l
h
f
0.875 0.875 0.875 rg
503.54999 230.86154 m
503.54999 228.86154 l
108.45 228.86154 l
109.45 229.86154 l
502.54999 229.86154 l
502.54999 229.86154 l
h
f
0 0 0 rg
BT
/T1_2 1 Tf
14 0 0 14 202.93901 209.8371 Tm
(Use this Appendix before giving up.)Tj
ET
0.5 0.5 0.5 rg
108.45 196.06154 m
108.45 198.06154 l
503.54999 198.06154 l
502.54999 197.06154 l
109.45 197.06154 l
109.45 197.06154 l
h
f
0.875 0.875 0.875 rg
503.54999 198.06154 m
503.54999 196.06154 l
108.45 196.06154 l
109.45 197.06154 l
502.54999 197.06154 l
502.54999 197.06154 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 158.03708 Tm
(Try to match reported symptoms with problems listed in this Appendix. Be\ creative: the )Tj
T*
(matches won't be perfect because the reports are incomplete and incorrec\t. \(If they weren't, )Tj
T*
(you could reproduce the bug.\) Even so, the list can help you break out \of your current line of )Tj
T*
(thinking. If you didn't need to refocus on other possibilities, you woul\dn't be so close to )Tj
T*
(giving up. )Tj
/T1_1 1 Tf
19.38461 0 0 19.38461 42.60001 50.41231 Tm
(4.)Tj
/T1_0 1 Tf
14 0 0 14 57.13846 50.41231 Tm
( Unexpected Bugs. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(2 \of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj452 0 obj 2876endobj453 0 obj<</Length 452 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 742.77551 Tm
(When you discover a bug accidentally, or when one surfaces in a shipping\ product, look for )Tj
0 -1.2 TD
(others like it. You probably missed running a group of tests to detect t\he lot. This section can )Tj
T*
(help you generate a list of possible related problems and tests.   )Tj
ET
0.5 0.5 0.5 rg
108.45 676.39996 m
108.45 678.39996 l
503.54999 678.39996 l
502.54999 677.39996 l
109.45 677.39996 l
109.45 677.39996 l
h
f
0.875 0.875 0.875 rg
503.54999 678.39996 m
503.54999 676.39996 l
108.45 676.39996 l
109.45 677.39996 l
502.54999 677.39996 l
502.54999 677.39996 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 657.37555 Tm
(  )Tj
/T1_1 1 Tf
16.15384 0 0 16.15384 131.89383 619.44574 Tm
(OUTLINE OF COMMON SOFTWARE ERRORS)Tj
ET
0 0 1 RG
0.68234 w 10 M 0 j 0 J []0 d 
42.60001 581.84497 m
214.20554 581.84497 l
S
0 0 1 rg
BT
/T1_2 1 Tf
12.92308 0 0 12.92308 42.60001 583.89197 Tm
(USER INTERFACE ERRORS)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(FUNCTIONALITY )Tj
3.09523 -2.2 Td
(Excessive functionality )Tj
T*
(Inflated impression of functionality )Tj
T*
(Inadequacy for the task at hand )Tj
T*
(Missing function )Tj
T*
(Wrong function )Tj
T*
(Functionality must be created by the user )Tj
T*
(Doesn't do what the user expects )Tj
-3.09523 -1.2 Td
(COMMUNICATION )Tj
3.09523 -2.2 Td
(Missing information )Tj
3.09525 -2.2 Td
(No onscreen instructions )Tj
T*
(Assuming printed documentation is readily available )Tj
T*
(Undocumented features )Tj
T*
(States that appear impossible to exit )Tj
T*
(No cursor )Tj
T*
(Failure to acknowledge input )Tj
T*
(Failure to show activity during long delays )Tj
T*
(Failure to advise when a change will take effect )Tj
T*
(Failure to check for the same document being opened more than once )Tj
-3.09525 -1.2 Td
(Wrong, misleading, or confusing information )Tj
3.09525 -2.2 Td
(Simple factual errors )Tj
T*
(Spelling errors )Tj
T*
(Inaccurate simplifications )Tj
T*
(Invalid metaphors )Tj
T*
(Confusing feature names )Tj
T*
(More than one name for the same feature )Tj
T*
(Information overload )Tj
T*
(When are data saved? )Tj
T*
(Poor external modularity )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(3 \of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj454 0 obj 2423endobj455 0 obj<</Length 454 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 122.60001 754.67657 Tm
(Help text and error messages )Tj
3.09525 -2.2 Td
(Inappropriate reading level )Tj
0 -1.2 TD
(Verbosity )Tj
T*
(Inappropriate emotional tone )Tj
T*
(Factual errors )Tj
T*
(Context errors )Tj
T*
(Failure to identify the source of an error )Tj
T*
(Hex dumps are not error messages )Tj
T*
(Forbidding a resource without saying why )Tj
T*
(Reporting non-errors )Tj
-3.09525 -1.2 Td
(Display bugs )Tj
3.09525 -2.2 Td
(Two cursors )Tj
T*
(Disappearing cursor )Tj
T*
(Cursor displayed in the wrong place )Tj
T*
(Cursor moves out of data entry area )Tj
T*
(Writing to the wrong screen segment )Tj
T*
(Failure to clear part of the screen )Tj
T*
(Failure to highlight part of the screen )Tj
T*
(Failure to clear highlighting )Tj
T*
(Wrong or partial string displayed )Tj
T*
(Messages displayed for too long or not long enough )Tj
-3.09525 -1.2 Td
(Display layout )Tj
3.09525 -2.2 Td
(Poor aesthetics in the screen layout )Tj
T*
(Menu layout errors )Tj
T*
(Dialog box layout errors )Tj
T*
(Obscured instructions )Tj
T*
(Misuse of flash )Tj
T*
(Misuse of color )Tj
T*
(Heavy reliance on color )Tj
T*
(Inconsistent with the style of the environment )Tj
T*
(Cannot get rid of onscreen information )Tj
-6.19048 -1.2 Td
(COMMAND STRUCTURE AND ENTRY )Tj
3.09525 -2.2 Td
(Inconsistencies )Tj
3.09525 -2.2 Td
("Optimizations" )Tj
T*
(Inconsistent syntax )Tj
T*
(Inconsistent command entry style )Tj
T*
(Inconsistent abbreviations )Tj
T*
(Inconsistent termination rule )Tj
T*
(Inconsistent command options )Tj
T*
(Similarly named commands )Tj
T*
(Inconsistent capitalization )Tj
T*
(Inconsistent menu position )Tj
T*
(Inconsistent function key usage )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(4 \of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj456 0 obj 2438endobj457 0 obj<</Length 456 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 162.60001 753.23041 Tm
(Inconsistent error handling rules )Tj
0 -1.2 TD
(Inconsistent editing rules )Tj
T*
(Inconsistent data saving rules )Tj
-3.09525 -1.2 Td
(Time-wasters )Tj
3.09525 -2.2 Td
(Garden paths )Tj
T*
(Choices that can't be taken )Tj
T*
(Are you really, really sure? )Tj
T*
(Obscurely or idiosyncratically named commands )Tj
-3.09525 -1.2 Td
(Menus )Tj
3.09525 -2.2 Td
(Excessively complex menu hierarchy )Tj
T*
(Inadequate menu navigation options )Tj
T*
(Too many paths to the same place )Tj
T*
(You can't get there from here )Tj
T*
(Related commands relegated to unrelated menus )Tj
T*
(Unrelated commands tossed under the same menu )Tj
-3.09525 -1.2 Td
(Command lines )Tj
3.09525 -2.2 Td
(Forced distinction between uppercase and lowercase )Tj
T*
(Reversed parameters )Tj
T*
(Full command names not allowed )Tj
T*
(Abbreviations not allowed )Tj
T*
(Demands complex input on one line )Tj
T*
(No batch input )Tj
T*
(Can't edit commands )Tj
-3.09525 -1.2 Td
(Inappropriate use of the keyboard )Tj
3.09525 -2.2 Td
(Failure to use cursor, edit, or function keys )Tj
T*
(Non-standard use of cursor and edit keys )Tj
T*
(Non-standard use of function keys )Tj
T*
(Failure to filter invalid keys )Tj
T*
(Failure to indicate keyboard state changes )Tj
T*
(Failure to scan for function or control keys )Tj
-6.19048 -1.2 Td
(MISSING COMMANDS )Tj
3.09523 -2.2 Td
(State transitions )Tj
3.09525 -2.2 Td
(Can't do nothing and leave )Tj
T*
(Can't quit mid-program )Tj
T*
(Can't stop mid-command )Tj
T*
(Can't pause )Tj
-3.09525 -1.2 Td
(Disaster prevention )Tj
3.09525 -2.2 Td
(No backup facility )Tj
T*
(No undo )Tj
T*
(No Are you sure? )Tj
T*
(No incremental saves )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(5 \of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj458 0 obj 2515endobj459 0 obj<</Length 458 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 122.60001 754.67657 Tm
(Error handling by the user )Tj
3.09525 -2.2 Td
(No user-specifiable filters )Tj
0 -1.2 TD
(Awkward error correction )Tj
T*
(Can't include comments )Tj
T*
(Can't display relationships between variables )Tj
-3.09525 -1.2 Td
(Miscellaneous nuisances )Tj
T*
(Inadequate privacy or security )Tj
T*
(Obsession with security )Tj
T*
(Can't hide menus )Tj
T*
(Doesn't support standard O/S features )Tj
T*
(Doesn't allow long names )Tj
-3.09525 -1.2 Td
(PROGRAM RIGIDITY )Tj
3.09525 -2.2 Td
(User tailorability )Tj
3.09525 -2.2 Td
(Can't turn off the noise )Tj
T*
(Can't turn off case sensitivity )Tj
T*
(Can't tailor to hardware at hand )Tj
T*
(Can't change device initialization )Tj
T*
(Can't turn off automatic saves )Tj
T*
(Can't slow down \(speed up\) scrolling )Tj
T*
(Can't do what you did last time )Tj
T*
(Can't find out what you did last time )Tj
T*
(Failure to execute a customization command )Tj
T*
(Failure to save customization commands )Tj
T*
(Side-effects of feature changes )Tj
T*
(Infinite tailorability )Tj
-3.09525 -1.2 Td
(Who's in control )Tj
3.09525 -2.2 Td
(Unnecessary imposition of a conceptual style )Tj
T*
(Novice-friendly, experienced-hostile )Tj
T*
(Artificial intelligence and automated stupidity )Tj
T*
(Superfluous or redundant information required )Tj
T*
(Unnecessary repetition of steps )Tj
T*
(Unnecessary limits )Tj
-6.19048 -1.2 Td
(PERFORMANCE )Tj
3.09525 -2.2 Td
(Slow program )Tj
T*
(Slow echoing )Tj
T*
(How to reduce user throughput )Tj
T*
(Poor responsiveness )Tj
T*
(No type-ahead )Tj
T*
(No warning that an operation will take a long time )Tj
T*
(No progress reports )Tj
T*
(Problems with time-outs )Tj
T*
(Program pesters you )Tj
T*
(Do you really want help and graphics at 300 baud? )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(6 \of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj460 0 obj 2481endobj461 0 obj<</Length 460 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 82.60001 753.23041 Tm
(OUTPUT )Tj
3.09525 -2.2 Td
(Can't output certain data )Tj
0 -1.2 TD
(Can't redirect output )Tj
T*
(Format incompatible with a follow-up process )Tj
T*
(Must output too little or too much )Tj
T*
(Can't control output layout )Tj
T*
(Absurd printed level of precision )Tj
T*
(Can't control labeling of tables or figures )Tj
T*
(Can't control scaling of graphs)Tj
ET
0 0 1 RG
0.68234 w 10 M 0 j 0 J []0 d 
42.60001 566.76801 m
159.63138 566.76801 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 568.81506 Tm
(ERROR HANDLING)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(ERROR PREVENTION )Tj
3.09523 -2.2 Td
(Inadequate initial state validation )Tj
T*
(Inadequate tests of user input )Tj
T*
(Inadequate protection against corrupted data )Tj
T*
(Inadequate tests of passed parameters )Tj
T*
(Inadequate protection against operating system bugs )Tj
T*
(Inadequate version control )Tj
T*
(Inadequate protection against malicious use )Tj
-3.09523 -1.2 Td
(ERROR DETECTION )Tj
3.09523 -2.2 Td
(Ignores overflow )Tj
T*
(Ignores impossible values )Tj
0 -1.20001 TD
(Ignores implausible values )Tj
0 -1.2 TD
(Ignores error flag )Tj
T*
(Ignores hardware fault or error conditions )Tj
T*
(Data comparisons )Tj
-3.09523 -1.2 Td
(ERROR RECOVERY )Tj
3.09523 -2.2 Td
(Automatic error correction )Tj
T*
(Failure to report an error )Tj
T*
(Failure to set an error flag )Tj
T*
(Where does the program go back to? )Tj
T*
(Aborting errors )Tj
T*
(Recovery from hardware problems )Tj
T*
(No escape from missing disk)Tj
ET
42.60001 89.96803 m
238.61722 89.96803 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 92.01505 Tm
(BOUNDARY-RELATED ERRORS)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(NUMERIC BOUNDARIES )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(7 \of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj462 0 obj 2470endobj463 0 obj<</Length 462 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 82.60001 754.67657 Tm
(EQUALITY AS A BOUNDARY )Tj
0 -1.2 TD
(BOUNDARIES ON NUMEROSITY )Tj
T*
(BOUNDARIES IN SPACE )Tj
T*
(BOUNDARIES IN TIME )Tj
T*
(BOUNDARIES IN LOOPS )Tj
T*
(BOUNDARIES IN MEMORY )Tj
T*
(BOUNDARIES WITHIN DATA STRUCTURES )Tj
T*
(HARDWARE-RELATED BOUNDARIES )Tj
T*
(INVISIBLE BOUNDARIES )Tj
T*
(CALCULATION ERRORS )Tj
T*
(OUTDATED CONSTANTS)Tj
ET
0 0 1 RG
0.68234 w 10 M 0 j 0 J []0 d 
42.60001 550.12189 m
191.95201 550.12189 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 552.16888 Tm
(CALCULATION ERRORS)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(IMPOSSIBLE PARENTHESES )Tj
T*
(WRONG ORDER OF OPERATORS )Tj
T*
(BAD UNDERLYING FUNCTION )Tj
T*
(OVERFLOW AND UNDERFLOW )Tj
T*
(TRUNCATION AND ROUNDOFF ERROR )Tj
T*
(CONFUSION ABOUT THE REPRESENTATION OF THE DATA )Tj
T*
(INCORRECT CONVERSION FROM ONE DATA REPRESENTATION TO )Tj
T*
(ANOTHER )Tj
T*
(WRONG FORMULA )Tj
T*
(INCORRECT APPROXIMATION )Tj
ET
42.60001 313.6911 m
216.38954 313.6911 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 315.73813 Tm
(INITIAL AND LATER STATES)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(FAILURE TO SET A DATA ITEM TO 0 )Tj
T*
(FAILURE TO INITIALIZE A LOOP-CONTROL VARIABLE )Tj
T*
(FAILURE TO INITIALIZE \(OR REINITIALIZE\) A POINTER )Tj
T*
(FAILURE TO CLEAR A STRING )Tj
T*
(FAILURE TO INITIALIZE \(OR REINITIALIZE\) REGISTERS )Tj
T*
(FAILURE TO CLEAR A FLAG )Tj
T*
(DATA WERE SUPPOSED TO BE INITIALIZED ELSEWHERE )Tj
T*
(FAILURE TO REINITIALIZE )Tj
T*
(ASSUMPTION THAT DATA WERE NOT REINITIALIZED )Tj
T*
(CONFUSION BETWEEN STATIC AND DYNAMIC STORAGE )Tj
T*
(DATA MODIFICATION BY SIDE-EFFECT )Tj
T*
(INCORRECT INITIALIZATION )Tj
T*
(RELIANCE ON TOOLS THE CUSTOMER MAY NOT HAVE OR UNDERSTAND )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(8 \of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj464 0 obj 2597endobj465 0 obj<</Length 464 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
0.68234 w 10 M 0 j 0 J []0 d 
42.60001 752.62958 m
205.58585 752.62958 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 754.67657 Tm
(CONTROL FLOW ERRORS)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(PROGRAM RUNS AMOK )Tj
3.09523 -2.2 Td
(GOTO somewhere )Tj
0 -1.2 TD
(Come-from logic errors )Tj
T*
(Problems in table-driven programs )Tj
T*
(Executing data )Tj
T*
(Jumping to a routine that isn't resident )Tj
T*
(Re-entrance )Tj
T*
(Variables contain embedded command names )Tj
T*
(Wrong returning state assumed )Tj
T*
(Exception-handling based exits )Tj
T*
(Return to wrong place )Tj
3.09525 -2.2 Td
(Corrupted stack )Tj
T*
(Stack under/overflow )Tj
T*
(GOTO rather than RETURN from a subroutine )Tj
-3.09525 -1.2 Td
(Interrupts )Tj
3.09525 -2.2 Td
(Wrong interrupt vector )Tj
T*
(Failure to restore or update interrupt vector )Tj
T*
(Failure to block or unblock interrupts )Tj
T*
(Invalid restart after an interrupt )Tj
-6.19048 -1.2 Td
(PROGRAM STOPS )Tj
3.09523 -2.2 Td
(Dead crash )Tj
T*
(Syntax errors reported at run-time )Tj
T*
(Waits for impossible condition, or combination of conditions )Tj
T*
(Wrong user or process priority )Tj
-3.09523 -1.2 Td
(LOOPS )Tj
3.09523 -2.2 Td
(Infinite loop )Tj
T*
(Wrong starting value for the loop control variable )Tj
T*
(Accidental change of the loop control variable )Tj
T*
(Wrong criterion for ending the loop )Tj
T*
(Commands that do or don't belong inside the loop )Tj
T*
(Improper loop nesting )Tj
-3.09523 -1.2 Td
(IF, THEN, ELSE, OR MAYBE NOT )Tj
3.09523 -2.2 Td
(Wrong inequalities \(e.g., > instead of >=\) )Tj
T*
(Comparison sometimes yields wrong result )Tj
T*
(Not equal versus equal when there are three cases )Tj
T*
(Testing floating point values for equality )Tj
T*
(Confusing inclusive and exclusive OR )Tj
T*
(Incorrectly negating a logical expression )Tj
T*
(Assignment-equal instead of test-equal )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(9 \of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj466 0 obj 2605endobj467 0 obj<</Length 466 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 122.60001 752.90735 Tm
(Commands belong inside the THEN or ELSE clause )Tj
0 -1.2 TD
(Commands that don't belong inside either clause )Tj
T*
(Failure to test a flag )Tj
T*
(Failure to clear a flag )Tj
-3.09525 -1.2 Td
(MULTIPLE CASES )Tj
3.09525 -2.2 Td
(Missing default )Tj
T*
(Wrong default )Tj
T*
(Missing cases )Tj
T*
(Case should be subdivided )Tj
T*
(Overlapping cases )Tj
T*
(Invalid or impossible cases )Tj
ET
0 0 1 RG
0.68234 w 10 M 0 j 0 J []0 d 
42.60001 535.42957 m
345.60739 535.42957 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 537.47656 Tm
(ERRORS IN HANDLING OR INTERPRETING DATA)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(PROBLEMS WHEN PASSING DATA BETWEEN ROUTINES )Tj
3.09523 -2.2 Td
(Parameter list variables out of order or missing )Tj
T*
(Data type errors )Tj
T*
(Aliases and shifting interpretations of the same area of memory )Tj
T*
(Misunderstood data values )Tj
T*
(Inadequate error information )Tj
T*
(Failure to clean up data on exception-handling exit )Tj
T*
(Outdated copies of data )Tj
T*
(Related variables get out of synch )Tj
T*
(Local setting of global data )Tj
T*
(Global use of local variables )Tj
T*
(Wrong mask in bit field )Tj
T*
(Wrong value from a table)Tj
-3.09523 -1.2 Td
(DATA BOUNDARIES )Tj
3.09523 -2.2 Td
(Unterminated null terminated strings )Tj
T*
(Early end of string )Tj
T*
(Read/write past end of a data structure, or an element in it)Tj
-3.09523 -1.2 Td
(READ OUTSIDE THE LIMITS OF A MESSAGE BUFFER )Tj
3.09523 -2.2 Td
(Compiler padding to word boundaries )Tj
T*
(Value stack under/overflow )Tj
T*
(Trampling another process' code or data)Tj
-3.09523 -1.2 Td
(MESSAGING PROBLEMS )Tj
3.09523 -2.2 Td
(Messages sent to wrong process or port )Tj
T*
(Failure to validate an incoming message )Tj
T*
(Lost or out of synch messages )Tj
T*
(Message sent to only N of N+1 processes)Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(10\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj468 0 obj 2677endobj469 0 obj<</Length 468 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 82.60001 754.67657 Tm
(DATA STORAGE CORRUPTION )Tj
3.09525 -2.2 Td
(Overwritten changes )Tj
0 -1.2 TD
(Data entry not saved )Tj
T*
(Too much data for receiving process to handle )Tj
T*
(Overwriting a file after an error exit or user abort )Tj
ET
0 0 1 RG
0.68234 w 10 M 0 j 0 J []0 d 
42.60001 630.24493 m
163.22401 630.24493 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 632.29199 Tm
(RACE CONDITIONS)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(RACES IN UPDATING DATA )Tj
T*
(ASSUMPTION THAT ONE EVENT OR TASK HAS FINISHED BEFORE ANOTHER )Tj
T*
(BEGINS )Tj
T*
(ASSUMPTION THAT INPUT WON'T OCCUR DURING A BRIEF PROCESSING )Tj
T*
(INTERVAL )Tj
T*
(ASSUMPTION THAT INTERRUPTS WON'T OCCUR DURING A BRIEF INTERVAL )Tj
T*
(RESOURCE RACES: THE RESOURCE HAS JUST BECOME UNAVAILABLE )Tj
T*
(ASSUMPTION THAT A PERSON, DEVICE, OR PROCESS WILL RESPOND )Tj
T*
(QUICKLY )Tj
T*
(OPTIONS OUT OF SYNCH DURING A DISPLAY CHANGE )Tj
T*
(TASK STARTS BEFORE ITS PREREQUISITES ARE MET )Tj
T*
(MESSAGES CROSS OR DON'T ARRIVE IN THE ORDER SENT )Tj
ET
42.60001 362.7988 m
162.51323 362.7988 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 364.84583 Tm
(LOAD CONDITIONS)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(REQUIRED RESOURCE NOT AVAILABLE )Tj
T*
(DOESN'T RETURN A RESOURCE )Tj
3.09523 -2.2 Td
(Doesn't indicate that it's done with a device )Tj
T*
(Doesn't erase old files from mass storage )Tj
T*
(Doesn't return unused memory )Tj
T*
(Wastes computer time )Tj
-3.09523 -1.2 Td
(NO AVAILABLE LARGE MEMORY AREAS )Tj
T*
(INPUT BUFFER OR QUEUE NOT DEEP ENOUGH )Tj
T*
(DOESN'T CLEAR ITEMS FROM QUEUE, BUFFER, OR STACK )Tj
T*
(LOST MESSAGES )Tj
T*
(PERFORMANCE COSTS )Tj
T*
(RACE CONDITION WINDOWS EXPAND )Tj
T*
(DOESN'T ABBREVIATE UNDER LOAD )Tj
0 -1.20001 TD
(DOESN'T RECOGNIZE THAT ANOTHER PROCESS ABBREVIATES OUTPUT )Tj
0 -1.2 TD
(UNDER LOAD )Tj
T*
(LOW PRIORITY TASKS NOT PUT OFF )Tj
T*
(LOW PRIORITY TASKS NEVER DONE )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(11\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj470 0 obj 2521endobj471 0 obj<</Length 470 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 1 RG
0.68234 w 10 M 0 j 0 J []0 d 
42.60001 734.89111 m
117.9803 734.89111 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 736.93811 Tm
(HARDWARE)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(WRONG DEVICE )Tj
0 -1.2 TD
(WRONG DEVICE ADDRESS )Tj
T*
(DEVICE UNAVAILABLE )Tj
T*
(DEVICE RETURNED TO WRONG TYPE OF POOL )Tj
T*
(DEVICE USE FORBIDDEN TO CALLER )Tj
T*
(SPECIFIES WRONG PRIVILEGE LEVEL FOR A DEVICE )Tj
T*
(NOISY CHANNEL )Tj
T*
(CHANNEL GOES DOWN )Tj
T*
(TIME-OUT PROBLEMS )Tj
T*
(WRONG STORAGE DEVICE )Tj
T*
(DOESN'T CHECK DIRECTORY OF CURRENT DISK )Tj
T*
(DOESN'T CLOSE A FILE )Tj
T*
(UNEXPECTED END OF FILE )Tj
T*
(DISK SECTOR BUGS AND OTHER LENGTH-DEPENDENT ERRORS )Tj
T*
(WRONG OPERATION OR INSTRUCTION CODES )Tj
T*
(MISUNDERSTOOD STATUS OR RETURN CODE )Tj
T*
(DEVICE PROTOCOL ERROR )Tj
T*
(UNDERUTILIZES DEVICE INTELLIGENCE )Tj
T*
(PAGING MECHANISM IGNORED OR MISUNDERSTOOD )Tj
T*
(IGNORES CHANNEL THROUGHPUT LIMITS )Tj
T*
(ASSUMES DEVICE IS OR ISN'T, OR SHOULD BE OR SHOULDN'T BE )Tj
T*
(INITIALIZED )Tj
T*
(ASSUMES PROGRAMMABLE FUNCTION KEYS ARE PROGRAMMED )Tj
T*
(CORRECTLY )Tj
ET
42.60001 281.35263 m
280.992 281.35263 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 283.39966 Tm
(SOURCE, VERSION, AND ID CONTROL)Tj
0 0 0 rg
( )Tj
3.09525 -3.825 Td
(OLD BUGS MYSTERIOUSLY REAPPEAR )Tj
T*
(FAILURE TO UPDATE MULTIPLE COPIES OF DATA OR PROGRAM FILES )Tj
T*
(NO TITLE )Tj
T*
(NO VERSION ID )Tj
T*
(WRONG VERSION NUMBER ON THE TITLE SCREEN )Tj
T*
(NO COPYRIGHT MESSAGE OR A BAD ONE )Tj
T*
(ARCHIVED SOURCE DOESN'T COMPILE INTO A MATCH FOR SHIPPING CODE )Tj
T*
(MANUFACTURED DISKS DON'T WORK OR CONTAIN WRONG CODE OR DATA )Tj
ET
42.60001 75.93727 m
157.48616 75.93727 l
S
0 0 1 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 42.60001 77.98428 Tm
(TESTING ERRORS)Tj
0 0 0 rg
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(12\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj472 0 obj 3185endobj473 0 obj<</Length 472 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
12.92308 0 0 12.92308 82.60001 754.67657 Tm
(MISSING BUGS IN THE PROGRAM )Tj
3.09525 -2.2 Td
(Failure to notice a problem )Tj
0 -1.2 TD
(Misreading the screen )Tj
T*
(Failure to report a problem )Tj
T*
(Failure to execute a planned test )Tj
T*
(Failure to use the most "promising" test cases )Tj
T*
(Ignoring programmers' suggestions )Tj
-3.09525 -1.2 Td
(FINDING "BUGS" THAT AREN'T IN THE PROGRAM )Tj
3.09525 -2.2 Td
(Errors in testing programs )Tj
T*
(Corrupted data file )Tj
T*
(Misinterpreted specifications or documentation)Tj
-3.09525 -1.2 Td
(POOR REPORTING )Tj
3.09525 -2.2 Td
(Illegible reports )Tj
T*
(Failure to make it clear how to reproduce the problem )Tj
T*
(Failure to say that you can't reproduce a problem )Tj
T*
(Failure to check your report )Tj
T*
(Failure to report timing dependencies )Tj
T*
(Failure to simplify conditions )Tj
T*
(Concentration on trivia )Tj
T*
(Abusive language )Tj
-3.09525 -1.2 Td
(POOR TRACKING OR FOLLOW-UP )Tj
3.09525 -2.2 Td
(Failure to provide summary reports )Tj
T*
(Failure to re-report serious bugs )Tj
T*
(Failure to verify fixes )Tj
T*
(Failure to check for unresolved problems just before release )Tj
/T1_0 1 Tf
14 0 0 14 42.60001 295.59094 Tm
(  )Tj
ET
0.5 0.5 0.5 rg
108.45 262.81537 m
108.45 264.81537 l
503.54999 264.81537 l
502.54999 263.81537 l
109.45 263.81537 l
109.45 263.81537 l
h
f
0.875 0.875 0.875 rg
503.54999 264.81537 m
503.54999 262.81537 l
108.45 262.81537 l
109.45 263.81537 l
502.54999 263.81537 l
502.54999 263.81537 l
h
f
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 243.79094 Tm
(  )Tj
/T1_2 1 Tf
0 -2.55714 TD
(USER INTERFACE ERRORS)Tj
/T1_0 1 Tf
( )Tj
T*
(The user interface \(UI\) includes all aspects of the product that invol\ve the user. The UI )Tj
0 -1.2 TD
(designer tries to strike a balance between )Tj
/T1_3 1 Tf
7 0 0 7 68.313 119.59094 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 119.59094 Tm
(functionality )Tj
/T1_3 1 Tf
7 0 0 7 68.313 102.79094 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 102.79094 Tm
(time to learn how to use the program )Tj
/T1_3 1 Tf
7 0 0 7 68.313 85.99094 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 85.99094 Tm
(how well the user remembers how to use the program )Tj
/T1_3 1 Tf
7 0 0 7 68.313 69.19093 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 69.19093 Tm
(speed of performance )Tj
/T1_3 1 Tf
7 0 0 7 68.313 52.39095 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 52.39095 Tm
(rate of user errors )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(13\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj474 0 obj 3695endobj475 0 obj<</Length 474 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
7 0 0 7 68.313 753.97552 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 753.97552 Tm
(the user's satisfaction with the program )Tj
-2.85715 -2.55714 Td
(In seeking a good balance, the designer weighs the experience and needs \of the people she )Tj
0 -1.2 TD
(expects to use the program against the capabilities of the equipment and\ available software )Tj
T*
(technology. An error in the UI results in a suboptimal match between the\ user and the )Tj
T*
(program. )Tj
0 -2.55714 TD
(Because tradeoffs are unavoidable in UI design, a good designer might de\liberately make )Tj
0 -1.2 TD
(any of many of the "errors" listed below. Don't take this list as gospel\. If you are at all )Tj
T*
(unsure, listen to the designer's reasoning before condemning one of her \choices. See Baecker )Tj
T*
(& Buxton \(1987\), Helander \(1991\), Laurel \(1990, 1991\), Rubenstein \& Hersh, \(1984\), )Tj
T*
(Schneiderman \(1987\), and Smith and Mosier \(1984\) for excellent intro\ductions to user )Tj
T*
(interface design, including extended discussion of many of the issues ra\ised in this )Tj
T*
(Appendix. )Tj
0 -2.55714 TD
(Throughout this Appendix we write as if you were the user of the program\. As a tester of it, )Tj
0 -1.2 TD
(you will certainly use it heavily. Realize that other people will also u\se the program and they )Tj
T*
(will have different problems from you. Try to be empathetic. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(FUNCTIONALITY)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A program has a functionality error if something that you reasonably exp\ect it to do is hard, )Tj
T*
(awkward, confusing, or impossible. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Excessive functionality)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(This is an error \(see Brooks, 1975\). It is the hardest one to convince\ people not to make. )Tj
T*
(Systems that try to do too much are hard to learn and easy to forget how\ to use. They lack )Tj
T*
(conceptual unity. They require too much documentation, too many help scr\eens, and too )Tj
T*
(much information per topic. Performance is poor. User errors are likely \but the error )Tj
T*
(messages are too general. Here's our rule of thumb: A system's level of \functionality is out of )Tj
T*
(control if the presence of rarely used features significantly complicate\s the use of basic )Tj
T*
(features. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Inflated impression of functionality)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Manuals and marketing literature should never lead you to believe the pr\ogram can do more )Tj
T*
(than it can. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Inadequacy for the task at hand)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Because a key feature isn't there, is too restricted or too slow, you ca\n't use the program for )Tj
T*
(real work. For example, a database management system that takes 8 hours \to sort 1000 )Tj
T*
(records can claim sorting ability but you wouldn't want to use it. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Missing function)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(14\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj476 0 obj 3568endobj477 0 obj<</Length 476 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(A function was not implemented even though it was in the external specif\ication or is )Tj
0 -1.2 TD
("obviously" desirable. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong function)Tj
/T1_0 1 Tf
0 -1.2 TD
(A function that should do one thing \(perhaps defined in a specification\\) does something else. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Functionality must be created by the user)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
("Systems that supply all the capabilities the user could want but that a\lso require the user to )Tj
T*
(assemble them to make the product work are kits, not finished products."\ \(Rubenstein & )Tj
T*
(Hersh, 1984, p. 45.\) )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Doesn't do what the user expects)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(For example, few people would expect a program written to sort a list of\ names to sort them )Tj
T*
(in ASCII order. They wouldn't expect it to count leading blanks or disti\nguish between )Tj
T*
(uppercase and lowercase letters. If the programmers insist that the func\tion should work this )Tj
T*
(way, get them to change its name or add the expected behavior as an opti\on. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(COMMUNICATION)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(This section describes errors that occur in communication from the progr\am to the user. Our )Tj
T*
(model is an interactive program, with the person sitting at a computer o\r terminal. However, )Tj
T*
(batch programs also give information, such as error messages. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Missing information)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Anything you must know should be available onscreen. Onscreen access to \any other )Tj
T*
(information that the average user would find useful is also desirable. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No onscreen instructions)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(How do you find out the name of the program, how to exit it, and what ke\y\(s\) to press for )Tj
T*
(Help? If it uses a command language, how do you find the list of command\s? The program )Tj
T*
(might display this information only when it starts. However it does it, \you should not have to )Tj
T*
(look in a manual to find the answers to questions like these. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Assuming printed documentation is readily available)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Can you use the program after losing your manual? An experienced user sh\ould not have to )Tj
T*
(rely on printed documentation. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Undocumented features)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If most features or commands are documented onscreen, all should be. Ski\pping only a few )Tj
T*
(causes much confusion. Similarly, if the program describes "special case\" behavior for many )Tj
T*
(commands, it should document them all. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(States that appear impossible to exit)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(15\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj478 0 obj 4184endobj479 0 obj<</Length 478 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(How do you cancel a command or back up in a deep menu tree? Programs sho\uld allow you )Tj
0 -1.2 TD
(to escape from undesired states. Failure to tell you how to escape is al\most as bad as not )Tj
T*
(providing an escape path. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No cursor)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(People rely on the cursor. It points to the place on the screen where th\ey should focus )Tj
T*
(attention. It can also show that the computer is still active and "liste\ning." Every interactive )Tj
T*
(program should show the cursor and display a salient message when turnin\g the cursor off. )Tj
0 -2.55714 TD
(Failure to acknowledge input )Tj
0 -1.2 TD
(An interactive program should acknowledge every keystroke by echoing it \immediately on )Tj
T*
(the screen. A few exceptions are not errors: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 528.97552 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 528.97552 Tm
(When choosing a menu item, you are not confused if your keystroke is not\ echoed, as )Tj
T*
(long as the next screen appears immediately and the words in the screen'\s title are )Tj
T*
(identical to those of the menu choice. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 478.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 478.57556 Tm
(If the program ignores erroneous commands or keystrokes, it should not e\cho them. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 461.77554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 461.77554 Tm
(The program should honor your choice if you can tell it not to echo inpu\t. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 444.97556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 444.97556 Tm
(When you input your password or security code, the program should not ec\ho it on )Tj
T*
(the screen. )Tj
/T1_1 1 Tf
-2.85715 -2.55714 Td
(Failure to show activity during long delays)Tj
/T1_0 1 Tf
( )Tj
T*
(When a program is doing a long task \(two seconds\), it must show you th\at it's still working, )Tj
T*
(it's not in an infinite loop, and you don't have to reset the computer. \)Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to advise when a change will take effect)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A program may execute a command much sooner or later than you expect. Fo\r example, it )Tj
T*
(may continue to display erased data until you exit. If it's unclear when\ the program will do )Tj
T*
(something, customers will perceive it as having bugs and will make many \errors. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to check for the same document being opened more than once)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Program that allows user to open multiple documents must check for the s\ame document )Tj
T*
(being opened more than once. Otherwise, the user will not be able to kee\p track of the )Tj
T*
(changes made to the documents since they all have the same name. For exa\mple, the file )Tj
T*
(My_Doc is open, if the user attempts to open My_Doc again, there must be\ the way for users )Tj
T*
(to identify the first My_Doc versus the second one. A typical method for\ keeping track is to )Tj
T*
(append a number after the file name such as My_Doc:1 and My_Doc:2 for th\e first and )Tj
T*
(second file respectively. An alternative method is not to allow the same\ file to be opened )Tj
T*
(twice. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong, misleading, or confusing information)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Every error trains you to mistrust everything else displayed by the prog\ram. Subtle errors )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(16\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj480 0 obj 3750endobj481 0 obj<</Length 480 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(that lead readers to make false generalizations, such as missing qualifi\cations and bad )Tj
0 -1.2 TD
(analogies, annoy testers more than clear factual errors because it's har\der to get them fixed. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Simple factual errors)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(After a program changes, updating screen displays is a low priority task\. The result is that )Tj
T*
(much onscreen information becomes obsolete. Whenever the program changes\ visibly, check )Tj
T*
(every message that might say anything about that aspect of the program. \)Tj
/T1_1 1 Tf
0 -2.55714 TD
(Spelling errors)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Programers dont woory much abuot they're speling misteaks but customers \do. Get them )Tj
T*
(fixed. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inaccurate simplifications)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(In the desire to keep a feature description as simple as possible, the a\uthor of a message may )Tj
T*
(cover only the simplest aspects of the feature's behavior, omitting impo\rtant qualifications. )Tj
T*
(When she tries to eliminate jargon, she may paraphrase technical termino\logy inaccurately. )Tj
T*
(Look for these errors. As the tester, you may be the only technically kn\owledgeable person )Tj
T*
(who carefully reviews the screens. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Invalid metaphors)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Metaphors make the computer system seem similar to something you already\ know. They )Tj
T*
(are good if they help you predict the behavior of the computer and bad i\f they lead you to )Tj
T*
(incorrect predictions. For example, the trash can icon can be a bad meta\phor \(Heckel, 1984\). )Tj
T*
(If you can take a discarded file out of the trash can, the metaphor is c\orrect. If the file is gone )Tj
T*
(forever once moved to trash, a paper shredder is a better icon. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Confusing feature names)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A command named SAVE shouldn't erase a file; nor should it sort one. If \a command name )Tj
T*
(has a standard meaning, in the computer community or in the English lang\uage, the )Tj
T*
(command must be compatible with its name. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(More than one name for the same feature)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program shouldn't refer to the same feature by different names. Cust\omers will waste )Tj
T*
(much time trying to figure out the difference between shadow and drop sh\adow when the )Tj
T*
(programmer uses both to mean the same thing. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Information overload)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some documents and help screens swamp you with technical detail, to the \point of hiding the )Tj
T*
(information or confusing the answers you're looking for. If you think th\ese details are useful, )Tj
T*
(ask whether they are more appropriately located in an appendix in the ma\nual. )Tj
0 -2.55714 TD
(Some \(not all\) detailed discussions of program functioning are disguis\ed apologies from the )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(17\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj482 0 obj 3948endobj483 0 obj<</Length 482 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(programmer or complaints from a writer over a poor design. Do users need\ this information? )Tj
0 -1.2 TD
(Also, is there a solution to the problem the programmer is claiming to b\e insoluble? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(When are data saved?)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose you enter information that the program will save. Does it save d\ata as you type, )Tj
T*
(when you exit, when you ask for a save, every few minutes, when? You sho\uld always be )Tj
T*
(able to find this out. If you get confused answers, look for bugs immedi\ately. Two modules )Tj
T*
(probably make different assumptions about when the same data will be sav\ed. You can )Tj
T*
(probably get one of them to claim that outdated data are up to date. You\ may find one )Tj
T*
(module erasing or overwriting data that another has just saved. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Poor external modularity)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(External modularity refers to how modular the product appears from the o\utside. How easily )Tj
T*
(can you understand any one piece of it? Poor external modularity increas\es learning time and )Tj
T*
(scares away new users. Information should be presented as independently \as possible. The )Tj
T*
(less you need to know in order to do any particular task the better. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Help text and error messages)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Help text and error messages are often considered minor pieces of the pr\oduct. They may be )Tj
T*
(written by junior programmers or writers. Updating them may be given low\ priority. )Tj
0 -2.55714 TD
(You ask for help or run into error handlers when confused or in trouble.\You may be upset or )Tj
0 -1.2 TD
(impatient. You will not suffer bad messages gladly. The product will bui\ld credibility with )Tj
T*
(you as you use it. If some messages mislead you, the rest may as well no\t be there. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inappropriate reading level)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(People don't read as well at computer terminals \(see Schneiderman, 1987\\). When given their )Tj
T*
(choice of reading levels for onscreen tutorials, experimental subjects p\referred Grade 5 )Tj
T*
(\(Roehmer and Chapanis, 1982\). People reading help or error messages ma\y be distressed: )Tj
T*
(these messages should never be more complicated than tutorial text. Mess\ages should be )Tj
T*
(phrased simply, in short, active voice sentences, using few technical te\rms even if the readers )Tj
T*
(are computer-experienced. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Verbosity)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Messages must be short and simple. Harried readers are infuriated by cha\tty technobabble. )Tj
T*
(When some users need much more information than others, it's common to g\ive access to )Tj
T*
(further information by a menu. Let people choose where and how much furt\her they want to )Tj
T*
(investigate \(Houghton, 1984\). )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inappropriate emotional tone)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(People feel bad enough when they make an error or have to ask for help. \They don't need )Tj
T*
(their noses rubbed in it. Look for messages that might make some people \feel bad. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(18\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj484 0 obj 3752endobj485 0 obj<</Length 484 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 743.97552 Tm
(Exclamation marks can be interpreted as scolding, so they should not be \in error messages. )Tj
0 -1.2 TD
(Violent words like "abort," "crash," and "kill" may be frightening or di\stasteful. Even the )Tj
T*
(word "error" is suspect: many "errors" wouldn't be if the program \(or t\he programmer\) were )Tj
T*
(more intelligent. As a final note, many actions may be invalid or unexpe\cted at a computer, )Tj
T*
(but few are truly "illegal." )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Factual errors)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Help and error messages often give incorrect examples of how to do somet\hing "correctly." )Tj
T*
(Some are outdated. Others were never right. Every message should be \(re\\)checked in one of )Tj
T*
(the last testing cycles. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Context errors)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Context-sensitive help and error handlers check what you've been doing. \They base their )Tj
T*
(messages \(recommendations, menu lists, etc.\) on that context. This is \excellent when it )Tj
T*
(works, but the message makes no sense when they get the context wrong. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to identify the source of an error)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(At a minimum, an error message should say what's wrong, and unless it's \immediately )Tj
T*
(obvious, repeat or point to the erroneous input \(data, program line, wh\atever\). A good error )Tj
T*
(message will also say why something is wrong and what to do about it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Hex dumps are not error messages)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(An error message that merely says Error 010 or dumps one or more lines o\f hexadecimal )Tj
T*
(\(octal, even decimal\) data is acceptable only if the cost of printing \a message is outrageous, )Tj
T*
(the computer doesn't have enough time to print a real message before it \crashes, or the )Tj
T*
(programmer is the only person who will ever read it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Forbidding a resource without saying why)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If a program tries to use a printer, modem, more memory, or other resour\ce, and can't, the )Tj
T*
(error message should not only announce the failure but should also say w\hy. You need this )Tj
T*
(information because you'll respond differently to Printer already in use\ versus Printer not )Tj
T*
(connected. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Reporting non-errors)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Error messages should only be triggered by error states. You will ignore\ all error messages if )Tj
T*
(most are normal-case debug messages or reports of events that are rare b\ut not necessarily )Tj
T*
(due to a bug. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Display bugs)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Display bugs are visible. If you see many, you are less likely to buy or\ trust the program. )Tj
T*
(Unfortunately, display bugs are often considered minor and not even inve\stigated. This is )Tj
T*
(risky. They may be symptoms of more serious underlying errors. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(19\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj486 0 obj 3933endobj487 0 obj<</Length 486 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 733.97552 Tm
(Two cursors)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It is a nuisance if the programmer forgets to erase the old cursor when \he jumps to another )Tj
T*
(part of the screen. Worse, a second cursor might reflect confusion in th\e code about which )Tj
T*
(area of the screen is active. The program may misinterpret inputs even i\t echoes them )Tj
T*
(correctly. If the cursor misbehaves during a test, save and examine any \data that you enter. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Disappearing cursor)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The cursor usually disappears because the programmer displayed a charact\er on top of it or )Tj
T*
(moved it and forgot to redisplay it. However, a program's pointer to the\ cursor can be )Tj
T*
(corrupted. If it is, then when it points to a memory location used for d\ata or program storage )Tj
T*
(rather than to screen memory, you won't see the cursor. The program will\ overwrite )Tj
T*
(information in memory whenever it tries to display the cursor. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Cursor displayed in the wrong place)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program shows the cursor in one place but echoes inputs, etc., in an\other. This is )Tj
T*
(annoying because it leads you to focus on the wrong part of the screen. \A slightly misplaced )Tj
T*
(cursor may warn that the program will truncate entered character strings\ or pad them with )Tj
T*
(garbage. As with dual cursors, entered text may be echoed correctly but \saved incorrectly. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Cursor moves out of data entry area)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The cursor should never move out of data entry areas. This is usually a \coding error but )Tj
T*
(some programmers deliberately let you move the cursor anywhere on the sc\reen, then beep )Tj
T*
(and display an error message that says you can't enter anything here. Th\is is a design error. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Writing to the wrong screen segment)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The cursor is in the right location, but data are displayed in the wrong\ place on the screen. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to clear part of the screen)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A message is displayed for a few seconds, then only partially erased. Or\ your response to a )Tj
T*
(previous question is left onscreen. It is confusing and annoying to have\ to type over prompts )Tj
T*
(or irrelevant responses in order to enter something new. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to highlight part of the screen)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If a program usually highlights a particular class of items, such as pro\mpts or all text in the )Tj
T*
(active window, it must always do so. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to clear highlighting)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(This is common when attributes of screen positions are stored separately\ from displayed text. )Tj
T*
(The programmer removes highlighted text but forgets to clear highlightin\g from that area of )Tj
T*
(the screen. The error is most confusing when the program highlights with\ double intensity or )Tj
T*
(boldfacing \(as opposed to inverse video, for example\). The blank scree\n area looks fine. The )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(20\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj488 0 obj 4158endobj489 0 obj<</Length 488 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(problem only becomes evident when new text is displayed: it is always hi\ghlighted. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong or partial string displayed)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The displayed message might be garbage text, a segment of a longer messa\ge, or a complete )Tj
T*
(message that should appear some other time. Any of these might reflect e\rrors in the )Tj
T*
(program logic, the values of the pointers used to find message text, or \the stored copies of )Tj
T*
(the text. They might indicate minor problems or severe ones. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Messages displayed for too long or not long enough)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Many messages are displayed for a fixed time, then erased automatically.\ The message )Tj
T*
(should be onscreen long enough to be noticed and then read. Unimportant \messages can be )Tj
T*
(cleared sooner than critical ones. Short messages can go sooner than lon\g ones. Messages )Tj
T*
(that come up frequently and are easily recognized can be displayed for l\ess time than rare )Tj
T*
(ones. )Tj
0 -2.55714 TD
(Be suspicious when the same message sometimes displays briefly and somet\imes lasts )Tj
0 -1.2 TD
(longer. This may reflect unanticipated race conditions. Try to figure ou\t how to obtain which )Tj
T*
(delays, then get this looked into carefully by the programmer. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Display layout)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The screen should look organized. It should not be cluttered. Different \classes of objects )Tj
T*
(should be displayed separately, in predictable areas. There are many gui\delines for display )Tj
T*
(layout, but they boil down to this: it should be easy to find what you w\ant on the screen. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Poor aesthetics in the screen layout)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The screen may be unbalanced, rows or columns may not be aligned, or it \might just look )Tj
T*
("bad." Use your good taste. If you're not confident, get a second opinio\n. If it looks badly )Tj
T*
(laid out to you, something is probably wrong even if you can't articulat\e the problem yet. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Menu layout errors)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Schneiderman \(1987\) and Smith and Mosier \(1984\) cover this area well\. Their discussions )Tj
T*
(run to many more pages than are available here. Here are a few points th\at we want to )Tj
T*
(emphasize: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 167.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 167.37555 Tm
(Similar or conceptually related menu choices should be grouped. Groups s\hould be )Tj
T*
(clearly separated. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 133.77556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 133.77556 Tm
(The action required to select a menu item should be obvious or should be\ stated )Tj
T*
(onscreen. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 100.17555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 100.17555 Tm
(Menu selections should generally be independent. To achieve a single res\ult, the )Tj
T*
(customer shouldn't have to make two or more different selections on diff\erent menus. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 66.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 66.57556 Tm
(Selecting a menu item by typing its first letter is usually better than \selecting it by a )Tj
T*
(number. However, all items have to start with different letters for this\ to work well. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(21\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj490 0 obj 4161endobj491 0 obj<</Length 490 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 82.60001 753.97552 Tm
(Watch out for assignments of odd names to menu items. )Tj
/T1_1 1 Tf
-2.85715 -2.55714 Td
(Dialog box layout errors)Tj
/T1_0 1 Tf
( )Tj
2.85715 -2.55714 Td
(For further reference in this area, we recommend IBM's SAA Advanced Inte\rface )Tj
0 -1.2 TD
(Design Guide \(1989\), and SAA Basic Interface Design Guide \(1989\), an\d Apple's )Tj
T*
(Human Interface Guidelines \(1987\). )Tj
/T1_2 1 Tf
7 0 0 7 68.313 631.97552 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 631.97552 Tm
(Dialog boxes should operate consistently. For example, they should use c\onsistent )Tj
T*
(capitalization, spelling, and text justification rules.Dialog box titles\ should occupy a )Tj
T*
(consistent place and match the name of the command used to call up the d\ialog. The )Tj
T*
(same shortcut keys should work from dialog to dialog\363 shouldn't cance\l out of some )Tj
T*
(dialogs \(no changes made\) but complete \(all changes accepted\) others\. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 547.97552 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 547.97552 Tm
(Controls in the dialog box must be arranged logically. Group related con\trols )Tj
T*
(together, and separate groups by using proper spacing. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 514.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 514.37555 Tm
(Selection and entry fields should be aligned vertically and horizontally\ so users can )Tj
T*
(navigate the cursor movement in a straight-line pattern. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 480.77554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 480.77554 Tm
(Watch out for interdependencies across dialogs. It is confusing when a s\election in )Tj
T*
(one dialog box determines which options are available in another box. )Tj
/T1_1 1 Tf
-2.85715 -2.55714 Td
(Obscured instructions)Tj
/T1_0 1 Tf
( )Tj
T*
(You should always know where to look to find out what to do next. If the\ screen is at all )Tj
T*
(crowded, an area should be reserved for commands and messages. Once you \understand this )Tj
T*
(convention, you'll know where to focus attention. It may also be good to\ blaze critical )Tj
T*
(information across the center of the screen, no matter what used to be t\here. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Misuse of flash)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Flashing pictures or text are noticeable; lots of flashing is confusing \and intimidating. You )Tj
T*
(should be able to tell immediately why an object is flashing. Excessive \or ambiguous )Tj
T*
(flashing is an eyesore, not a good alert. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Misuse of color)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Too much color can be distracting, make the text harder to read, and inc\rease eye strain. )Tj
T*
(Color shouldn't make the screen look busy or distracting. Programs like \word processors, )Tj
T*
(spreadsheets, and databases should use highlighting colors sparingly. Mo\st text should be )Tj
T*
(one color. You should also complain if the program's combinations of col\ors looks ugly. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Heavy reliance on color)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Programs limit their audience severely if they use color as the only dif\ferentiator between )Tj
T*
(items. What happens to a colorblind person or someone with a monochrome \monitor? A few )Tj
T*
(applications may not be worth running in monochrome, but many others \(i\ncluding drawing )Tj
T*
(programs and many games\) don't need color. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(22\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj492 0 obj 3827endobj493 0 obj<</Length 492 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(Inconsistent with the style of the environment)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If the style associated with a computer offers certain consistencies and\ conveniences, you'll )Tj
T*
(notice their absence from any one program. Even if the programmer thinks\ he can replace )Tj
T*
(them with "better" ones, many people will resent having to learn a new s\eries of conventions. )Tj
T*
(For example, if the operating system and most applications are mouse and\ icon-based, an )Tj
T*
(application that requires typed command words will feel inappropriate. N\ew programs )Tj
T*
(should also follow the lead when most others display error messages in a\ certain way, on a )Tj
T*
(certain place onscreen. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Cannot get rid of onscreen information)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It's great \(often essential\) to have a menu of command choices availab\le on part of the )Tj
T*
(screen. However, once you become proficient with the program, the menu i\s a waste of )Tj
T*
(screen space. You should be able to issue a command to get rid of it, an\d another to call it )Tj
T*
(back as needed. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(COMMAND STRUCTURE AND ENTRY)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(This section deals with the way the program organizes commands and prese\nts them to you, )Tj
T*
(and with how you enter those commands. Schneiderman \(1987\) considers h\ow to choose )Tj
T*
(among the different command entry styles. There are many choices. This s\ection assumes )Tj
T*
(that the programmer's choice of style was reasonable. It deals only with\ flaws in the )Tj
T*
(implementation. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inconsistencies)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Increasing the number of always-true rules shortens learning time and do\cumentation and )Tj
T*
(makes the program more professional-looking. Inconsistencies are so comm\on because it )Tj
T*
(takes planning and agony to choose a rule of operation that can always b\e followed. It is so )Tj
T*
(tempting to do things differently now and again. Each minor inconsistenc\y seems )Tj
T*
(insignificant, but together they quickly make an otherwise well conceive\d product hard to )Tj
T*
(use. It is good testing practice to flag all inconsistencies, no matter \how minor. )Tj
/T1_1 1 Tf
0 -2.55714 TD
("Optimizations")Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Programmers deliberately introduce inconsistencies to optimize a program\. Optimizations )Tj
T*
(are tempting since they tailor the program to your most likely present n\eed. But each new )Tj
T*
(inconsistency brings complexity with it. Make the programmer aware of th\e tradeoff in each )Tj
T*
(case. Is saving a keystroke or two worth the increase in learning time o\r the decrease in )Tj
T*
(trust? Usually not. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inconsistent syntax)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Syntactic details should be easily learned. You should be able to stop t\hinking about them. )Tj
T*
(Syntax of all commands should be consistent throughout the program. Synt\ax includes such )Tj
T*
(things as: )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(23\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj494 0 obj 3910endobj495 0 obj<</Length 494 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
7 0 0 7 68.313 753.97552 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 753.97552 Tm
(the order in which you specify source and destination locations \(copy f\rom source to )Tj
0 -1.2 TD
(destination or copy to destination from source\) )Tj
/T1_1 1 Tf
7 0 0 7 68.313 720.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 720.37555 Tm
(the type of separators used \(spaces, commas, semicolons, slashes, etc.\)\ )Tj
/T1_1 1 Tf
7 0 0 7 68.313 703.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 703.57556 Tm
(the location of operators \(infix \(A+B\), prefix \(+AB\), postfix \(AB+\\)\). )Tj
/T1_2 1 Tf
-2.85715 -2.55714 Td
(Inconsistent command entry style )Tj
/T1_0 1 Tf
T*
(You can select a command by pointing to it, pressing a function key, or \typing its name, )Tj
T*
(abbreviation, or number. A program should use one command style. If the \program offers )Tj
T*
(alternative styles for doing the same task, it should offer the same alt\ernatives everywhere. If )Tj
T*
(the program must switch styles across different parts of the program, it\ must make it clear )Tj
T*
(when to use which. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Inconsistent abbreviations)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Without clear-cut abbreviation rules, abbreviations can't be easily reme\mbered. Abbreviating )Tj
T*
(delete to del but list to ls and grep to grep makes no sense. Each choic\e is fine individually, )Tj
T*
(but the collection is an ill-conceived mess of special cases. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Inconsistent termination rule)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Fill-in-the-blanks forms only allow so much room for a command name or d\ata item. )Tj
T*
(Suppose an entry can be eight characters long. When you enter seven char\acters or less, you )Tj
T*
(have to say you're done by pressing or some other terminator \(, , , etc\.\). If you enter an eight-)Tj
T*
(character name, some programs act on it without waiting for the terminat\or. This is )Tj
T*
(confusing. )Tj
0 -2.55714 TD
(The program should require terminators for multi-key entries. People rar\ely remember )Tj
0 -1.2 TD
(commands \(or data\) in terms of how many letters they are. They will ha\bitually enter the )Tj
T*
(eighth character then press . If the program has already supplied its ow\n , the extra one typed )Tj
T*
(by the user is an annoying input "error." )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Inconsistent command options)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If an option makes sense for two commands, it should be available with b\oth \(or neither\), )Tj
T*
(should have the same name, and should be invoked in the same sequence in\ both cases. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Similarly named commands)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It is easier to confuse two different commands if their names are simila\r. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Inconsistent capitalization)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If command entry is case sensitive, first letters of all commands should\ all be capitalized or )Tj
T*
(none should be. First letters of embedded words in commands should alway\s or never be )Tj
T*
(capitalized. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Inconsistent menu position)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(24\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj496 0 obj 3708endobj497 0 obj<</Length 496 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(It's hard to keep the same command in the same position on different men\us if it occurs in )Tj
0 -1.2 TD
(many submenus, but with work and care the programmer can frequently achi\eve this. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inconsistent function key usage)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The meaning of function keys should remain constant across the program. \Reversals )Tj
T*
(\(sometimes saves data and deletes, other times deletes and saves\) are \unacceptable. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inconsistent error handling rules)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(When the program detects an error, it may announce it or attempt to corr\ect it. After )Tj
T*
(handling the error, the program may stop, restart, or return to its last\ state. The error handler )Tj
T*
(may change data on disk or save new information. Error handlers can vary\ a great deal. The )Tj
T*
(behavior of any one program's should be completely predictable. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inconsistent editing rules)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The same keys and commands should be available to change any datum as yo\u entered it or )Tj
T*
(examined it later. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inconsistent data saving rules)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should save data in the same way everywhere, with the same t\iming and scope. )Tj
T*
(It shouldn't sometimes save data as each field is entered, but other tim\es save at the end of a )Tj
T*
(record, a group of records, or just before exit. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Time-wasters)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Programs that seem designed to waste your time infuriate people. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Garden paths)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A program leads you down the garden path if you must make choice after c\hoice to get to a )Tj
T*
(desired command, only finding at the end that it's not there, wasn't imp\lemented, or can't be )Tj
T*
(used unless you do something else \(down a different path\) first. Look \for these problems in )Tj
T*
(complex menu trees. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Choices that can't be taken)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(There is no excuse for including choices in a menu that cannot be made. \How can you view, )Tj
T*
(save or erase the data if there are no data? How can you print the docum\ent if there is no )Tj
T*
(printer? How dare the programmer say, Press for Help, then when you pres\s it say, Sorry, )Tj
T*
(Help Not Available at this Level \(whatever that means\)? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Are you really, really sure?)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Programs should ask you to confirm critically destructive commands. You \should have to )Tj
T*
(tell the computer twice to reformat a data-filled disk. The program shou\ld not pester you for )Tj
T*
(confirmation of every little deletion. You become annoyed; you'll learn \to answer Yes )Tj
T*
(automatically, even in the critical cases when you should think first. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(25\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj498 0 obj 3801endobj499 0 obj<</Length 498 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 741.77551 Tm
(Obscurely or idiosyncratically named commands)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Command names should be informative. You should not have to constantly l\ook up the )Tj
T*
(definition of a command name in the manual, until you eventually memoriz\e it. There is no )Tj
T*
(excuse for names like grep, finger, and timehog in products released to \the public. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Menus)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Menus should be simple, but they become complex when there are poor icon\s or command )Tj
T*
(names and when choices hide under nonobvious topic headings. The more co\mmands a )Tj
T*
(menu covers, the more complex it will be no matter how well planned it i\s. But without )Tj
T*
(planning, complex menus can become disasters. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Excessively complex menu hierarchy)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If you have to wade through menu after menu before finally reaching the \command you )Tj
T*
(want, you'll probably want to use another program. Programmers who creat\e deep menu )Tj
T*
(trees cite the design rule that says no menu should have more than seven\ choices. This may )Tj
T*
(be best for novices. Experienced users prefer many more choices per menu\ level, make fewer )Tj
T*
(errors and respond more quickly, so long as the choices are well organiz\ed, neatly formatted, )Tj
T*
(and not ridiculously crowded or abbreviated. Paap & Roske-Hostrand \(198\6\) and )Tj
T*
(MacGregor, Lee, & Lam \(1986\) provide some interesting discussion. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inadequate menu navigation options)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(In even a modestly deep menu structure, you must be able to move back to\ the previous )Tj
T*
(menu, move to the top of the menu structure, and leave the program at an\y time. If there are )Tj
T*
(hundreds of topics, you should also be able to jump directly to any topi\c by entering its name )Tj
T*
(or number. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Too many paths to the same place)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program needs reorganization if many commands reappear in many menus\. It can be )Tj
T*
(handy to have a command repeated in different places, but there are limi\ts. You should )Tj
T*
(worry about the program's internal structure and reliability if it feels\ like you can get )Tj
T*
(anywhere from anywhere. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(You can't get there from here)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs lock you out of one set of commands once you've taken a di\fferent path. You )Tj
T*
(have to restart to regain access to them. This is usually unnecessary. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Related commands relegated to unrelated menus)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Grouping commands or topics in a complex menu is not easy. It is easy to\ overlook what )Tj
T*
(should be an obvious relationship between two items, and to arbitrarily \assign them to )Tj
T*
(separate menus. When you report these, explain the relationship between \the two items, and )Tj
T*
(suggest which menu both belong in. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(26\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj500 0 obj 3706endobj501 0 obj<</Length 500 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 750.77551 Tm
(Unrelated commands tossed under the same menu)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some commands are dumped under a totally unrelated heading because someo\ne thought it )Tj
T*
(would take too much work to put them where they belong, which may involv\e adding a new )Tj
T*
(higher level heading and reorganizing. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Command lines)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It is harder to type the command name without a hint than to recognize i\t in a menu, but )Tj
T*
(experienced users prefer command line entry when there are many commands\ and many )Tj
T*
(options. The menu system feels too bulky to them. Anything that makes it\ easier to )Tj
T*
(remember the command names and options correctly is good. Anything that \makes errors )Tj
T*
(more likely is bad. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Forced distinction between uppercase and lowercase)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs won't recognize a correctly spelled command name if it isn\'t capitalized )Tj
T*
("correctly." This is more often a nuisance than a feature. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Reversed parameters)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The most common example is the distinction between source and destinatio\n files. Does )Tj
T*
(COPY FILE1 FILE2 mean copy from FILE1 to FILE2 or from FILE2 to FILE1? T\he order )Tj
T*
(doesn't matter \(people can get used to anything\) as long as it stays c\onsistent across all )Tj
T*
(commands that use a source and a destination file. Application programs \must follow the )Tj
T*
(operating system's ordering conventions. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Full command names not allowed)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Abbreviations are fine, but you should always be able to type delete, no\t just del. The full )Tj
T*
(name of a command is much more reliably remembered than the abbreviation\, especially if )Tj
T*
(there are no consistent abbreviating rules. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Abbreviations not allowed)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to enter del instead of having to type delete in full\. Enough systems don't )Tj
T*
(allow abbreviations that we can't class their absence a design error, bu\t, implemented )Tj
T*
(properly, it sure is a nice feature. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Demands complex input on one line)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs require complicated command specifications \(Do X for all \cases in which A )Tj
T*
(or B and C is true unless D is false\). You will make many mistakes if y\ou have to specify )Tj
T*
(compound logical operators as part of a one-line command. Fill-in-the-bl\ank choices, )Tj
T*
(sequential prompting, and query by example, are all more appropriate tha\n command line )Tj
T*
(entry with compound logical scope definition. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No batch input)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to type and correct a list of commands using an edito\r, then tell the )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(27\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj502 0 obj 3490endobj503 0 obj<</Length 502 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(computer to treat this list as if you had typed each command freshly at \the keyboard. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't edit commands)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to backspace while typing a command. If you try to ex\ecute an )Tj
T*
(incorrectly typed command, you should be able to call it back, change th\e erroneous piece, )Tj
T*
(and re-execute it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inappropriate use of the keyboard)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If a computer comes with a standard keyboard, with labeled function keys\ that have standard )Tj
T*
(meanings, new programs should meet that standard. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to use cursor, edit, or function keys)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It doesn't matter if a program was ported from some other machine that d\oesn't have these )Tj
T*
(keys. Users of this machine will expect their keys to work. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Non-standard use of cursor and edit keys)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The keys should work the way they usually work on this machine, not the \way they usually )Tj
T*
(work on some other machine, and definitely not in some totally new way. \)Tj
/T1_1 1 Tf
0 -2.55714 TD
(Non-standard use of function keys)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If most other programs use as the Help key, defining it as Delete-File-A\nd-Exit in this )Tj
T*
(program is crazy or vicious. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to filter invalid keys)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should trap and discard invalid characters, such as letters \if it adds numbers. It )Tj
T*
(should not echo or acknowledge them. Ignoring them is less distracting t\han error messages. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to indicate keyboard state changes)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Lights on the keyboard or messages on the screen should tell you when Ca\ps Lock and other )Tj
T*
(such state changing features are on. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to scan for function or control keys)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to tell the computer to quit what it's doing \(, for \example\). The program )Tj
T*
(should also always recognize any other system-specific keys, such as , t\hat programs on this )Tj
T*
(machine usually recognize quickly. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(MISSING COMMANDS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(This section discusses commands or features that some programs don't, bu\t should, include. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(State transitions)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Most programs move from state to state. The program is in one state befo\re you choose a )Tj
T*
(menu item or issue a command. It moves into another state in response to\ your choice. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(28\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj504 0 obj 3406endobj505 0 obj<</Length 504 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(Programmers usually test their code well enough to confirm that you can \reach any state that )Tj
0 -1.2 TD
(you should be able to reach. They don't always let you change your mind,\ once you've )Tj
T*
(chosen a state. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't do nothing and leave)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to tell an interactive program that you made your las\t choice by mistake, )Tj
T*
(and go back to its previous state. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't quit mid-program)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to quit while using a program without adversely affec\ting stored data. )Tj
T*
(You should be able to stop editing or sorting a file, and revert to the \version that was on disk )Tj
T*
(when you started. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't stop mid-command)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It should be easy to tell the program to stop executing a command. It sh\ouldn't be hard to )Tj
T*
(return to your starting point, to make a correction or choose a differen\t command. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't pause)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs limit the time you have to enter data. When the time is up\, the program )Tj
T*
(changes state. It might display help text or accept a displayed "default\" value, or it may log )Tj
T*
(you off. Although time limits can be useful, people do get interrupted. \You should be able to )Tj
T*
(tell it that you are taking a break, and when you get back you'll want i\t in the same state it's )Tj
T*
(in now. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Disaster prevention)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(System failures and user errors happen. Programs should minimize the con\sequences of )Tj
T*
(them. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No backup facility)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It should be easy to make an extra copy of a file. If you're changing a \file, the computer )Tj
T*
(should keep a copy of the original \(or make it easy for you to tell it \to keep it\) so you have a )Tj
T*
(known good version to return to if your changes go awry. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No undo)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Undo lets you retract a command, typically any command, or a group of th\em. Undelete is a )Tj
T*
(restricted case of undo that lets you recover data deleted in error. Und\o is desirable. Undelete )Tj
T*
(is essential. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No "Are you sure?")Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If you issue a command that will wipe out a lot of work, or that wipes o\ut less but is easy to )Tj
T*
(issue in error, the program should stop you and ask whether you want the\ command )Tj
T*
(executed. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(29\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj506 0 obj 3734endobj507 0 obj<</Length 506 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 741.77551 Tm
(No incremental saves)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(When entering large amounts of text or data, you should be able to tell \the program to save )Tj
T*
(your work at regular intervals. This ensures that most of your work will\ have been saved if )Tj
T*
(the power fails. Several programs automatically save your work in progre\ss at regular )Tj
T*
(intervals. This is an excellent feature, so long as the customer who is \bothered by the delay )Tj
T*
(during saving can turn it off. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Error handling by the user)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(People can catch their own errors and recognize from experience that the\y are prone to )Tj
T*
(others. They should be able to fix their work and, as much as possible, \build in their own )Tj
T*
(error checks. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No user-specifiable filters)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(When designing data entry forms, spreadsheet templates, etc., you should\ be able to specify, )Tj
T*
(for each field, what types of data are valid and what the program should\ ignore or reject. As )Tj
T*
(examples, you might have the program reject anything that isn't a digit,\ a letter, a number )Tj
T*
(within a certain range, a valid date, or an entry that matches an item i\n a list stored on disk. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Awkward error correction)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It should be easy to fix a mistake. You should never have to stop and re\start a program just )Tj
T*
(to return to a data entry screen where you made an error. You should alw\ays be able to back )Tj
T*
(up the cursor to a field on the same screen in which you entered, or cou\ld have entered, data. )Tj
T*
(When entering a list of numbers, you should be able to correct one witho\ut redoing the rest. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't include comments)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(When designing data entry forms, spreadsheet templates, expert systems\363\anything in which )Tj
T*
(you are, in effect, writing a program\363you should be able to enter not\es for future reference )Tj
T*
(and debugging. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't display relationships between variables)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Variables in entry forms, spreadsheet templates, etc., are related. It s\hould be easy to )Tj
T*
(examine the dependence of any variable on the values of others. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Miscellaneous nuisances)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
T*
(Inadequate privacy or security)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(How much security is needed for a program or its data varies with the ap\plication and the )Tj
T*
(market. On multi-user systems you should be able to hide your files so n\o one else can see )Tj
T*
(them, and encrypt them so no one else\363not even the system administrat\or\363can read them. )Tj
T*
(You should also be able to lock files so no one else can change \(or del\ete\) them. Beizer )Tj
T*
(\(1984\) discusses security in more detail. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(30\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj508 0 obj 3695endobj509 0 obj<</Length 508 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 748.57556 Tm
(Obsession with security)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The security controls of a program should be as unobtrusive as possible.\ If you are working )Tj
T*
(at your own personal computer at home, you should be able to stop a prog\ram from pestering )Tj
T*
(you for passwords. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't hide menus)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Many programs display a menu at the top, bottom, or side of the screen. \They use the rest of )Tj
T*
(the screen for data entry and manipulation. The menus are memory aids. O\nce you know all )Tj
T*
(the commands you need, you should be able to remove the menus and use th\e full screen for )Tj
T*
(entry and editing. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Doesn't support standard O/S features)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(For example, if the operating system uses subdirectories, program comman\ds should be able )Tj
T*
(to reference files in other subdirectories. If the O/S defines "wildcard\" characters \(such as * )Tj
T*
(to match any group of characters\), the program should recognize them. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Doesn't allow long names)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Years ago, when memory was scarce and compilers were sluggish, it was ne\cessary to limit )Tj
T*
(the length of file and variable names to six or eight characters. We're \past those days. )Tj
T*
(Meaningful names are among the best possible forms of documentation. The\y should be )Tj
T*
(allowed. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(PROGRAM RIGIDITY)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs are very flexible. You can change minor aspects of their f\unctioning easily. )Tj
T*
(You can do tasks in any order you want. Other programs are utterly infle\xible. Rigidity isn't )Tj
T*
(always bad. The fewer choices and the more structured the task, the more\ easily \(usually\) )Tj
T*
(you'll learn the program. And you won't be confused by aspects of a prog\ram's operation that )Tj
T*
(can't be changed without affecting the others. On the other hand, differ\ent people will like )Tj
T*
(different aspects of the program and dislike others. If you change these\ to suit your taste, )Tj
T*
(you'll like the program more. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(User tailorability)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to change minor and arbitrary aspects of the program'\s user interface )Tj
T*
(with a minimum of fuss and bother. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't turn off the noise)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Many programs beep when you make errors and provide a loud key click tha\t sounds every )Tj
T*
(time you touch the keyboard. Auditory feedback is useful but in shared w\ork areas, computer )Tj
T*
(noises can be annoying. There must be a way to turn them off. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't turn off case sensitivity)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A system that can distinguish between uppercase and lowercase should all\ow you to tell it to )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(31\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj510 0 obj 3649endobj511 0 obj<</Length 510 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(ignore cases. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't tailor to hardware at hand)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs are locked to input/output devices that have specific, lim\ited capabilities. )Tj
T*
(People who upgrade their equipment either can't use these programs or ca\n't take advantage )Tj
T*
(of the new devices' features. Experienced users should be able to tailor\ a program to the )Tj
T*
(hardware. You should be able to change control codes sent to a printer a\nd copy a program )Tj
T*
(onto any mass storage device. It should not be impossible to use a mouse\ with any )Tj
T*
(interactive program. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't change device initialization)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(An application program should either be able to send user-defined initia\lizers or it should )Tj
T*
(leave well enough alone. Suppose you want to send control codes to a pri\nter to switch to )Tj
T*
(condensed characters. If the program that prints the data doesn't let yo\u initialize the printer, )Tj
T*
(you have to change the printer mode from the device, then run the progra\m. Some programs, )Tj
T*
(however, defeat your printer setup by always sending the printer their o\wn, inflexible, set of )Tj
T*
(control codes. This is a design error. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't turn off automatic saves)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs protect you against power failures by automatically saving\ entered data to )Tj
T*
(disk periodically. In principle this is great but in practice the pauses\ while it saves the data )Tj
T*
(can be disruptive. Also, the program assumes that you always want to sav\e your data. This )Tj
T*
(assumption might not be true. You should be able to turn this off. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't slow down \(speed up\) scrolling)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to slow down the screen display rate so you can read \text as it scrolls by. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't do what you did last time)Tj
/T1_0 1 Tf
( )Tj
/T1_1 1 Tf
T*
(Can't find out what you did last time)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to re-issue a command, examine it, or edit it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to execute a customization command)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If the program lets you change how it interacts with you, your changes s\hould take effect )Tj
T*
(immediately. If a restart is unavoidable, the program should say so. You\ should not have to )Tj
T*
(wonder why a command wasn't executed. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to save customization commands)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should not only be able to tell the computer to turn off its beeps a\nd clicks now, but )Tj
T*
(should also be able to tell it to turn them off and keep them off foreve\r. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Side-effects of feature changes)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(32\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj512 0 obj 4112endobj513 0 obj<</Length 512 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(Changing how one feature operates should not affect another. When there \are side effects, )Tj
0 -1.2 TD
(they should be well documented when you change the feature setting, in t\he manual and )Tj
T*
(onscreen. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Infinite tailorability)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You can change virtually all aspects of some programs. This flexibility \can be good, but you )Tj
T*
(have to step back from the program to figure out how it should work. To \make the decisions )Tj
T*
(intelligently you have to develop an expert user's view of the program i\tself along with )Tj
T*
(learning the command language. )Tj
0 -2.55714 TD
(Programs this flexible usually have horrid user interfaces. The develope\rs spent their energy )Tj
0 -1.2 TD
(making the program adjustable, and didn't bother making the uncustomized\ product any )Tj
T*
(good. Since everyone will change it, they reason, its initial command se\t doesn't mean )Tj
T*
(anything anyway. Such a program is terrible for novices and occasional u\sers. It isn't worth )Tj
T*
(their time \(sometimes weeks or months\) to figure out how to tune the p\rogram to their needs, )Tj
T*
(but without the tuning, the program is only marginally usable. )Tj
0 -2.55714 TD
(The user interface of customizable products should be fully usable witho\ut modification. )Tj
0 -1.2 TD
(You should subject it to the same rigorous criticism applied to less fle\xible ones. Many )Tj
T*
(people will use the uncustomized version for a long time. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Who's in control)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs are high-handed. Their error and help messages are condesc\ending. Their )Tj
T*
(style is unforgiving\363you can't abort commands or change data after en\tering them. None of )Tj
T*
(this is acceptable. Programs should make it easier and more pleasant for\ you to get a task )Tj
T*
(done as quickly as possible. They should not second-guess you, force a s\tyle on you, or )Tj
T*
(waste your time. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Unnecessary imposition of a conceptual style)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs demand that you enter data in a certain order, that you co\mplete each task )Tj
T*
(before moving to the next, that you make decisions before looking at the\ir potential )Tj
T*
(consequences. Examples: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 186.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 186.37555 Tm
(When designing a data entry form, why must you specify a field's name, t\ype, width, )Tj
T*
(or calculation order, before drawing it onscreen? As you see how the dif\ferent fields )Tj
T*
(look together, won't you change some fields, move them around, even get \rid of a )Tj
T*
(few? You may have to enter field specifications before using the form, b\ut subject to )Tj
T*
(that restriction, you should decide when to fill in the details. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 102.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 102.37555 Tm
(When describing tasks to a project management system, why must you list \all tasks )Tj
T*
(first, all available people second, then completely map the work assigne\d to one )Tj
T*
(individual before entering any data for the next? Since you're probably \trying to )Tj
T*
(figure out what to assign to whom, won't you want to change these data a\s you see )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(33\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj514 0 obj 3798endobj515 0 obj<</Length 514 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 82.60001 753.97552 Tm
(their consequences? )Tj
-2.85715 -3.55714 Td
(A surprising number of limits exist because some programmer decided that\ people should )Tj
0 -1.2 TD
(organize their work in a certain way. For "their own good" he won't let \them deviate from )Tj
T*
(this "optimal" approach. He is typically wrong. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Novice-friendly, experienced-hostile)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Programs optimized for novices break tasks into many small, easily under\stood steps. This )Tj
T*
(can be good for the newcomer, but anyone experienced with the system wil\l be frustrated if )Tj
T*
(they can't get around it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Artificial intelligence and automated stupidity)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(In the names of "artificial intelligence" and "convenience" some program\s guess what you )Tj
T*
(want next and execute those guesses as if they were user-issued commands\. This is fine )Tj
T*
(unless you don't want them done. Similarly, the program that automatical\ly corrects errors is )Tj
T*
(great until it "corrects" correct data. People make enough of their own \mistakes without )Tj
T*
(having to put up with ones made by a program that's trying to second-gue\ss them. Better than )Tj
T*
(automatic execution, especially of something that takes noticeable time \or changes data, the )Tj
T*
(program should give you a choice. You should be able to set it to wait u\ntil you type Y \(yes\) )Tj
T*
(before executing its suggestions. If you say No the program should aband\on its suggestion )Tj
T*
(and ask for new input. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Superfluous or redundant information required)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs ask for information they'll never use, or that they'll onl\y use to display )Tj
T*
(onscreen once, or ask you to re-enter data you've already entered\363not\ to check it against the )Tj
T*
(old copy, just to get it again. This is a surprisingly common waste of t\ime. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Unnecessary repetition of steps)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs make you re-enter the works if you make one mistake in a l\ong sequence of )Tj
T*
(command steps or data. Others force you to re-enter or confirm any comma\nd that might be )Tj
T*
(in error. To do something "unusual" you may have to confirm every step. \Repetitions or )Tj
T*
(confirmations that are not essential are a waste of your time. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Unnecessary limits)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Why restrict a database to so many fields or records, a spreadsheet cell\ to digits only, a )Tj
T*
(project manager to so many tasks, a word processor to so many characters\? Limits that aren't )Tj
T*
(essential for performance or reliability shouldn't be limits. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(PERFORMANCE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Many experienced users consider performance the most important aspect of\ usability: with a )Tj
T*
(fast program, they feel more able to concentrate and more in control. Er\rors are less )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(34\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj516 0 obj 4106endobj517 0 obj<</Length 516 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(important because they can be dealt with quickly. With few exceptions, r\eviewed by )Tj
0 -1.2 TD
(Schneiderman \(1987\), the faster the better. )Tj
0 -2.55714 TD
(Performance has different definitions, such as: )Tj
/T1_1 1 Tf
7 0 0 7 68.313 665.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 665.57556 Tm
(Program Speed: how quickly the program does standard tasks. For example,\ how )Tj
0 -1.2 TD
(quickly does a word processor move to the end of the file? )Tj
/T1_1 1 Tf
7 0 0 7 68.313 631.97552 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 631.97552 Tm
(User Throughput: how quickly you can do standard tasks with the program.\ These are )Tj
T*
(larger scale tasks. For example, how long does it take to enter and prin\t a letter? )Tj
/T1_1 1 Tf
7 0 0 7 68.313 598.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 598.37555 Tm
(Perceived Performance: How quick does the program seem to you? )Tj
-2.85715 -3.55714 Td
(Program speed is a big factor no matter how you define performance, but \a fast program with )Tj
T*
(a poorly designed user interface will seem much slower than it should. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Slow program)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Many design and code errors can slow a program. The program might do unn\ecessary work, )Tj
T*
(such as initializing an area of memory that will be overwritten before b\eing read. It might )Tj
T*
(repeat work unnecessarily, such as doing something inside a loop that co\uld be done outside )Tj
0 -1.20001 TD
(of it. Design decisions also slow the program, often more than the obvio\us errors. )Tj
0 -2.55714 TD
(Whatever the reason for the program being slow, if it is, it's a problem\. Delays as short as a )Tj
0 -1.2 TD
(quarter of a second can break your concentration, and substantially incr\ease your time to )Tj
T*
(finish a task. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Slow echoing)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should display inputs immediately. If you notice a lag betwe\en the time you )Tj
T*
(type a letter and the time you see it, the program is too slow. You will\ be much more likely )Tj
T*
(to make mistakes. Fast feedback is essential for any input event, includ\ing moving mice, )Tj
T*
(trackballs, and light pens. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(How to reduce user throughput)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A lightning quick program will be molasses for getting things done if it\ slows the person )Tj
T*
(working with it. This includes: )Tj
/T1_1 1 Tf
7 0 0 7 68.313 151.17555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 151.17555 Tm
(anything that makes user errors more likely. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 134.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 134.37555 Tm
(slow error recovery, such as making you re-enter everything if you make \a mistake )Tj
T*
(when entering a long series of numbers or a complicated command. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 100.77556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 100.77556 Tm
(anything that gets you so confused that you have to ask for help or look\ in the )Tj
T*
(manual. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 67.17555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 67.17555 Tm
(making you type too much to do too little: no abbreviations, breaking a \task into tiny )Tj
T*
(subtasks, requiring confirmation of everything, and so on. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(35\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj518 0 obj 3759endobj519 0 obj<</Length 518 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 730.57556 Tm
(Other sections of the Appendix describe specific errors along these line\s. One tactic for )Tj
0 -1.2 TD
(applying pressure to fix user interface errors involves a comparative te\st of user throughput. )Tj
T*
(Compare the product under development with a few competitors. If people \take longer to do )Tj
T*
(things with your program, and if much of the delay can be attributed to \user interface design )Tj
T*
(errors, these errors take on a new significance. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Poor responsiveness)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A responsive program doesn't force you to wait before issuing your next \command. It )Tj
T*
(constantly scans for keyboard \(or other\) input, acknowledges commands \quickly, and assigns )Tj
T*
(them high priority. For example, type a few lines of text while your wor\d processor is )Tj
T*
(reformatting the screen. It should stop formatting, echo the input, form\at the display of these )Tj
T*
(lines as you enter them, and execute your editing commands. It should ke\ep the area of the )Tj
T*
(screen near the cursor up to date. The rest is lower priority since you \aren't working with it at )Tj
T*
(this instant. The program can update the rest of the display when you st\op typing. )Tj
T*
(Responsive programs feel faster. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No type-ahead)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A program that allows type-ahead lets you keep typing while it goes abou\t other business. It )Tj
T*
(remembers what you typed and displays and executes it later. You should \not have to wait to )Tj
T*
(enter the next command. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No warning that an operation will take a long time)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should tell you if it needs more than a few seconds to do so\mething. You )Tj
T*
(should be able to cancel the command. For long jobs, it should tell you \how long so you can )Tj
T*
(use the time rather than waste it waiting. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No progress reports)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(For long tasks or delays, it is very desirable to indicate how much has \been done and how )Tj
T*
(much longer the machine will be tied up \(Myers, 1985\). )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Problems with time-outs)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs limit the time you have to enter data. When the time's up,\ the program )Tj
T*
(changes state. Except for arcade games, you should not have to race agai\nst a short time-out )Tj
T*
(to stop the program from executing an undesired command. )Tj
0 -2.55714 TD
(Time-outs can also be too long. For example, you might have a short inte\rval before a )Tj
0 -1.2 TD
(program does something reasonable but time consuming. If you respond dur\ing the interval, )Tj
T*
(you shortcut the task \(e.g., a menu isn't displayed unnecessarily\). Pr\ogram speed will suffer )Tj
T*
(if this isn't kept short. )Tj
0 -2.55714 TD
(Time-out intervals can simultaneously be too long for people who wait th\em out and too )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(36\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj520 0 obj 3347endobj521 0 obj<</Length 520 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(short for others who try to enter data during them. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Program pesters you)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(BEEP! Are you sure? )Tj
T*
(BEEP! Your disk is now 85% full. Please swap disks shortly. )Tj
T*
(BEEP! Are you really sure? )Tj
T*
(BEEP! You haven't saved your text for the last hour. )Tj
T*
(BEEP! Your disk is now 86% full. Please swap disks shortly. )Tj
T*
(BEEP! Please re-enter your security code. )Tj
T*
(BEEP! You haven't entered anything for 10 minutes. Please log off. )Tj
T*
(BEEP! Your disk is now 86% full. Please swap disks shortly. )Tj
T*
(BEEP! 14 messages still unanswered. )Tj
0 -2.55714 TD
(Reminders, alerts, and queries can be useful but if they are frequent th\ey can be annoying. )Tj
/T1_1 1 Tf
T*
(Do you really want help and graphics at 300 baud?)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(On a slow terminal, help text, long menus, and pretty pictures are usual\ly irritating. You )Tj
T*
(should be able to use a terse command language instead. Similarly, progr\ams that format )Tj
T*
(output in a beautiful but time-consuming way on a printer should have a \"fast and ugly" )Tj
T*
(mode for drafts. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(OUTPUT)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Program output should be as complete as desired and intelligible to the \human or program )Tj
T*
(that must read it. It should include whatever you want, in whatever form\at you want. It )Tj
T*
(should go to whatever device you want it to go. These requirements are r\eal, but too general )Tj
T*
(to \(usually\) achieve. You'll probably add many other annoyances and li\mitations to the )Tj
T*
(following list. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't output certain data)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to print any information you enter, including technic\al entries like )Tj
T*
(formulas in spreadsheets and field definitions. If it's important enough\ to enter, it's important )Tj
T*
(enough for you to be able to print and desk check it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't redirect output)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to redirect output. In particular, you should be able\ to send a long )Tj
T*
("printout" to the disk and print this disk file later. This gives you th\e opportunity to polish )Tj
T*
(the output file with a word processor or print it with a program that ca\n print files more )Tj
T*
(quickly or as a background task. )Tj
0 -2.55714 TD
(The program should not stop you from sending output to unexpected device\s, such as )Tj
0 -1.2 TD
(plotters, laser printers, and cassette tapes. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(37\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj522 0 obj 3848endobj523 0 obj<</Length 522 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(Format incompatible with a follow-up process)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If one program is supposed to be able to save data in a format that a se\cond can understand, )Tj
T*
(you must test that it does. This means buying or borrowing a copy of the\ second program, )Tj
T*
(saving the data with the first, reading it with the second, and looking \at what the second )Tj
T*
(program tells you it got. This test is all too often forgotten, especial\ly when the second )Tj
T*
(program was not made by the company that developed the first. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Must output too little or too much)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to modify reports to present only the information you\ need. Having to )Tj
T*
(dig through pages of printouts that contain just a few lines of useful i\nformation is nearly as )Tj
T*
(bad as not getting the information. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't control output layout)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to emphasize information by changing fonts, boldfacin\g, underlining, )Tj
T*
(etc. You should also be able to control the spacing of information; that\ is, you should be able )Tj
T*
(to group some sections of information and keep others separate. At a min\imum, the program )Tj
T*
(should be able to print reports to a disk file, in a format suitable for\ touchups by a word )Tj
T*
(processor. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Absurd printed level of precision)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It is silly to say that 4.2 + 3.9 is 8.100000 or that the product of 4.2\34 and 3.987 is )Tj
T*
(16.880958. In final printouts, the program should round results to the p\recision of the )Tj
T*
(original data, unless you tell it to do otherwise. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't control labeling of tables or figures)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You should be able to change the typeface, wording, and position of any \caption, heading, or )Tj
T*
(other text included in a table, graph or chart. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Can't control scaling of graphs)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Graphing programs should provide default vertical and horizontal scales,\ but you should be )Tj
T*
(able to override the defaults.   )Tj
ET
0.5 0.5 0.5 rg
108.45 206.2 m
108.45 208.2 l
503.54999 208.2 l
502.54999 207.2 l
109.45 207.2 l
109.45 207.2 l
h
f
0.875 0.875 0.875 rg
503.54999 208.2 m
503.54999 206.2 l
108.45 206.2 l
109.45 207.2 l
502.54999 207.2 l
502.54999 207.2 l
h
f
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 168.17555 Tm
(ERROR HANDLING)Tj
/T1_0 1 Tf
( )Tj
T*
(Errors in dealing with errors are among the most common bugs. Error hand\ling errors )Tj
T*
(include failure to anticipate the possibility of errors and protect agai\nst them, failure to )Tj
T*
(notice error conditions, and failure to deal with detected errors in a r\easonable way. Note that )Tj
T*
(error messages were discussed above. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(ERROR PREVENTION)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Yourdon's \(1975\) chapter on Antibugging is a good introduction to defe\nsive programming. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(38\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj524 0 obj 3749endobj525 0 obj<</Length 524 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(The program should defend itself against bad input and bad treatment by \other parts of the )Tj
0 -1.2 TD
(system. If the program might be working with bad data, it should check t\hem before it does )Tj
T*
(something terrible. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inadequate initial state validation)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If a region of memory must start with all zeros in it, maybe the program\ should run a spot )Tj
T*
(check rather than assuming that zeros are there. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inadequate tests of user input)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It is not enough to tell people only to enter one- to three-digit number\s. Some will enter )Tj
T*
(letters or ten-digit numbers and others will press five times to see wha\t happen. If you can )Tj
T*
(enter it, the program must be able to cope with it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inadequate protection against corrupted data)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(There's no guarantee that data stored on disk are any good. Maybe someon\e edited the file, )Tj
T*
(or there was a hardware failure. Even if the programmer is sure that the\ file was validated )Tj
T*
(before it was saved, he should include checks \(like a checksum\) that t\his is the same file )Tj
T*
(coming back. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inadequate tests of passed parameters)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A subroutine should not assume that it was called correctly. It should m\ake sure that data )Tj
T*
(passed to it are within its operating range. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inadequate protection against operating system bugs)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The operating system has bugs. Application programs can trigger some of \them. If the )Tj
T*
(application programmer knows, for example, that the system will crash if\ he sends data to )Tj
T*
(the printer too soon after sending it to the disk drive, he should make \sure that his program )Tj
T*
(can't do that under any circumstances. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inadequate version control)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If the executable code is in more than one file, someone will try to use\ a new version of one )Tj
T*
(file with an old version of another. Customers upgrading their software \make this mistake )Tj
T*
(frequently enough, then don't understand what's wrong unless the program\ tells them. The )Tj
T*
(new version should include code that checks that all code files are up t\o date. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inadequate protection against malicious use)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(People will deliberately feed a program bad input or try to trigger erro\r conditions. Some )Tj
T*
(will do it out of anger, others because they think it's fun. Saying that\ "no reasonable person )Tj
T*
(would do this" provides no defense against the unreasonable person. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(ERROR DETECTION)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Programs often have ample information available to detect an error in th\e data or in their )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(39\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj526 0 obj 3759endobj527 0 obj<</Length 526 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(operation. For the information to be useful, they have to read and act o\n it. A few commonly )Tj
0 -1.2 TD
(ignored symptoms or pieces of diagnostic information are described below\. There are many )Tj
T*
(others. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Ignores overflow)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(An overflow condition occurs when the result of a numerical calculation \is too big for the )Tj
T*
(program to handle. Overflows arise from adding and multiplying large num\bers and from )Tj
T*
(dividing by zero or by tiny fractions. Overflows are easy to detect, but\ the program does )Tj
T*
(have to check for them, and some don't. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Ignores impossible values)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should check its variables to make sure that they are within\ reasonable limits. It )Tj
T*
(should catch and reject a date like February 31. If the program does one\ thing when a )Tj
T*
(variable is 0, something else when it is 1, and expects that all other v\alues are "impossible," )Tj
T*
(it must make sure that the variable's value is 0 or 1. Old assumptions a\re unsafe after a few )Tj
T*
(years of maintenance programming. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Ignores implausible values)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Someone might withdraw $10,000,000 from their savings account but the pr\ogram should )Tj
T*
(probably ask a few different humans for confirmation before letting the \transaction go )Tj
T*
(through. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Ignores error flag)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program calls a subroutine, which fails. It reports its failure in a\ special variable called )Tj
T*
(an error flag. The program can either check the flag or, as often happen\s, ignore it and treat )Tj
T*
(the garbage data coming back from the routine as if it was a real result\. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Ignores hardware fault or error conditions)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should assume that devices it can connect to will fail. Many\ devices can send )Tj
T*
(back messages \(set bits\) that warn that something is wrong. If one doe\s, the program should )Tj
T*
(stop trying to interact with it and should report the problem to a human\ or to a higher level )Tj
T*
(control program. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Data comparisons)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(When you try to balance your checkbook, you have the number you think is\ your balance )Tj
T*
(and the number the bank tells you is your balance. If they don't agree a\fter you allow for )Tj
T*
(service charges, recent checks, and so forth, there is an error in your \records, the bank's, or )Tj
T*
(both. Similar opportunities frequently arise to check two sets of data o\r two sets of )Tj
T*
(calculations against each other. The program should take advantage of th\em. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(ERROR RECOVERY)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(There is an error, the program has detected it, and is now trying to dea\l with it. Much error )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(40\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj528 0 obj 3777endobj529 0 obj<</Length 528 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(recovery code is lightly tested, or not tested at all. Bugs in error rec\overy routines may be )Tj
0 -1.2 TD
(much more serious than the original problems. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Automatic error correction)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Sometimes the program can not only detect an error but correct it, witho\ut having to bother )Tj
T*
(anyone about it, by checking other data or a set of rules. This is desir\able, but only if the )Tj
T*
("correction" is correct. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to report an error)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should report any detected internal error even if it can aut\omatically correct the )Tj
T*
(error's consequences. It might not detect the same error under slightly \different )Tj
T*
(circumstances. The program might report the error to the user, to the op\erator of a multi-user )Tj
T*
(system, to an error log file on disk, or any combination of these, but i\t must be reported. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to set an error flag)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A subroutine is called and fails. It is supposed to set an error flag wh\en it does fail. It returns )Tj
T*
(control to the calling routine without setting the flag. The caller will\ treat the garbage data )Tj
T*
(passed back as if they were valid. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Where does the program go back to?)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A section of code fails. It logs the problem, sets an error flag, then w\hat? Especially if the )Tj
T*
(failing code can be reached from several GOTO statements, how does it kn\ow where in the )Tj
T*
(program to return control to? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Aborting errors)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You stop the program, or it stops itself when it detects an error. Does \it close any open )Tj
T*
(output files? Does it log the cause of the exit on its way down? In the \most general terms, )Tj
T*
(does it tidy up before dying or does it just die and maybe leave a big m\ess? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Recovery from hardware problems)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should deal with hardware failures gracefully. If the disk o\r its directory is full, )Tj
T*
(you should be able to put in a new one, not just lose all your data. If \a device is unready for )Tj
T*
(input for a long time, the program should assume that it's off line or d\isconnected. It )Tj
T*
(shouldn't sit waiting forever. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(No escape from missing disk)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose your program asks you to insert a disk that has files it needs. \If the inserted disk is )Tj
T*
(not the correct one, it will prompt you again until the correct disk is \inserted. However, if the )Tj
T*
(correct disk is not available, there is no way you can escape unless you\ reboot your system. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(BOUNDARY-RELATED ERRORS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A boundary describes a change-point for a program. The program is suppos\ed to work one )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(41\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj530 0 obj 3857endobj531 0 obj<</Length 530 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(way for anything on one side of the boundary. It does something differen\t for anything on )Tj
0 -1.2 TD
(the other side. )Tj
0 -2.55714 TD
(The classic "things" on opposite sides of boundaries are data values. Th\ere are three standard )Tj
0 -1.2 TD
(boundary bugs: )Tj
/T1_1 1 Tf
7 0 0 7 68.313 648.77557 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 648.77557 Tm
(Mishandling of the boundary case: If a program adds any two numbers that\ are less )Tj
T*
(than 100, and rejects any greater than 100, what does it do when you ent\er exactly )Tj
T*
(100? What is it supposed to do? )Tj
/T1_1 1 Tf
7 0 0 7 68.313 598.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 598.37555 Tm
(Wrong boundary: The specification says the program should add any two nu\mbers )Tj
T*
(less than 100 but it rejects anything greater than 95. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 564.77557 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 564.77557 Tm
(Mishandling of cases outside the boundary: Values on one side of the bou\ndary are )Tj
T*
(impossible, unlikely, unacceptable, unwanted. No code was written for th\em. Does )Tj
T*
(the program successfully reject values greater than 100 or does it crash\ when it gets )Tj
T*
(one? )Tj
-2.85715 -3.55714 Td
(We treat the concept of boundaries more broadly. Boundaries describe a w\ay of thinking )Tj
T*
(about a program and its behavior around its limits. There are many types\ of limits: largest, )Tj
T*
(oldest, latest, longest, most recent, first time, etc. The same types of\ bugs can happen with )Tj
T*
(any of them so why not think of them in the same terms? )Tj
/T1_2 1 Tf
0 -2.55714 TD
(NUMERIC BOUNDARIES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some numeric boundaries are arbitrary \(bigger or less than 100\) while \others represent )Tj
T*
(natural limits. A triangle has exactly three sides \(not more, not less\)\. Its angles sum to 180 )Tj
T*
(degrees. A byte can store a \(nonnegative\) number between 0 and 255. If\ a character is a )Tj
T*
(letter, its ASCII code is between 65 and 90 \(capitals\) or between 97 a\nd 122 \(lowercase\). )Tj
/T1_2 1 Tf
0 -2.55714 TD
(EQUALITY AS A BOUNDARY)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Every element in a list might be the same. Every element might be differ\ent. What happens )Tj
T*
(if you try to sort either list? If the list is made of numbers, what hap\pens if you try to )Tj
T*
(compute their mean, standard deviation, coefficient of symmetry or kurto\sis? \(All four are )Tj
T*
(summary statistics. The last two would either compute to 0 or cause a di\vide by 0 error )Tj
T*
(depending on the calculation algorithm.\) )Tj
/T1_2 1 Tf
0 -2.55714 TD
(BOUNDARIES ON NUMEROSITY)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(An input string can be up to 80 characters long? What if you type 79, 80\ or 81? What does )Tj
T*
(the program receiving your input do in each case? Can a list have one el\ement? No )Tj
T*
(elements? What is the standard deviation of a one-number list of numbers\? \(Answer: )Tj
T*
(undefined or zero\) )Tj
/T1_2 1 Tf
0 -2.55714 TD
(BOUNDARIES IN SPACE)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(42\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj532 0 obj 3888endobj533 0 obj<</Length 532 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(For example, if a graphing program draws a graph and a box around it, wh\at to do with a dot )Tj
0 -1.2 TD
(that should properly be displayed outside the box? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(BOUNDARIES IN TIME)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose the program displays a prompt, waits 60 seconds for you to respo\nd, then displays a )Tj
T*
(menu if you haven't typed anything. What happens if you start typing jus\t as it's starting to )Tj
T*
(display the menu? )Tj
0 -2.55714 TD
(Suppose you have 30 seconds to answer a ringing telephone. After that, y\our phone stops )Tj
0 -1.2 TD
(ringing and the call forwards to the operator. Do you lose the call if y\ou reach it at the 30th )Tj
T*
(second? What if you reach it after the 30th second but before the operat\or has answered it? )Tj
0 -2.55714 TD
(Suppose you press the Space Bar while the computer's still loading the p\rogram from the )Tj
0 -1.2 TD
(disk. What happens? Is <Space> sent to the operating system \(which is l\oading the program\), )Tj
T*
(saved for the program being loaded, or is this just so unexpected that i\t crashes the )Tj
T*
(computer? )Tj
ET
0.5 0.5 0.5 rg
108.45 462.60001 m
108.45 464.60001 l
503.54999 464.60001 l
502.54999 463.60001 l
109.45 463.60001 l
109.45 463.60001 l
h
f
0.875 0.875 0.875 rg
503.54999 464.60001 m
503.54999 462.60001 l
108.45 462.60001 l
109.45 463.60001 l
502.54999 463.60001 l
502.54999 463.60001 l
h
f
0 0 0 rg
BT
/T1_2 1 Tf
14 0 0 14 179.42598 443.57556 Tm
(Race conditions reflect temporal boundaries.)Tj
ET
0.5 0.5 0.5 rg
108.45 410.80002 m
108.45 412.80002 l
503.54999 412.80002 l
502.54999 411.80002 l
109.45 411.80002 l
109.45 411.80002 l
h
f
0.875 0.875 0.875 rg
503.54999 412.80002 m
503.54999 410.80002 l
108.45 410.80002 l
109.45 411.80002 l
502.54999 411.80002 l
502.54999 411.80002 l
h
f
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 372.77554 Tm
(BOUNDARIES IN LOOPS)Tj
/T1_0 1 Tf
( )Tj
T*
(Here's an example of a loop: )Tj
/T1_3 1 Tf
0 -2.56197 TD
(10  IF COUNT_VARIABLE is less than 45)Tj
0 -1.2 TD
(     THEN   PRINT "This is a loop")Tj
T*
(         SET COUNT_VARIABLE to COUNT_VARIABLE + 1)Tj
T*
(         GOTO 10)Tj
T*
(     ELSE quit)Tj
/T1_0 1 Tf
0 -2.55232 TD
(The program keeps printing and adding 1 to COUNT_VARIABLE until the coun\ter finally )Tj
0 -1.2 TD
(reaches 45. Then the program quits. 45 bounds the loop. Loops can have l\ower as well as )Tj
T*
(upper bounds \(IF COUNT_VARIABLE is less than 45 and greater than 10\). \Beizer \(1990\) )Tj
T*
(discusses tests of loop boundaries. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(BOUNDARIES IN MEMORY)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(What are the largest and smallest amounts of memory that this program ca\n cope with? \(Yes, )Tj
T*
(a few programs do crash if you give them access to too much memory.\) Ar\e data split across )Tj
T*
(pages or segments of memory? Is the first or last byte of a segment lost\ or misread? \(By the )Tj
T*
(way, is that first byte numbered 0 or 1?\) Are some of the data in RAM a\nd some on disk, in )Tj
T*
(virtual memory format? Suppose the program reads a value from RAM then a\ value from )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(43\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj534 0 obj 4232endobj535 0 obj<</Length 534 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(virtual memory, then the next value from what used to be in RAM, then ba\ck to what used to )Tj
0 -1.2 TD
(be \(still is? is again?\) virtual memory, etc. How seriously will this \back-and-forth affect )Tj
T*
(performance? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(BOUNDARIES WITHIN DATA STRUCTURES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose the program keeps data in a record structure. Each record holds \a person's name, )Tj
T*
(followed by their employee number and salary. Then comes the next person\'s record \(name, )Tj
T*
(number, salary\), etc. If it retrieves them from disk, does the program \read the first record )Tj
T*
(correctly? The last record? How does the program mark the end of a recor\d or the beginning )Tj
T*
(of the next? Does everything fit in this format? What if you have two em\ployee numbers? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(HARDWARE-RELATED BOUNDARIES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If a mainframe can handle up to 100 terminals, what happens when you plu\g in the 99th, )Tj
T*
(100th, and 101st? What if you get 100 people to log on at the same time?\ )Tj
0 -2.55714 TD
(What happens when the disk is full? If a directory can hold 128 files, w\hat happens when )Tj
0 -1.2 TD
(you try to save the 127th, 128th, and 129th? If your printer has a large\ input buffer, what )Tj
T*
(happens if your program fills it but has more data to send? What happens\ when the printer )Tj
T*
(runs out of paper or the ribbon runs out? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(INVISIBLE BOUNDARIES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Not all boundary conditions are visible from the outside. For example, a\ subroutine might )Tj
T*
(approximate the value of a function, using one approximation formula whe\n the function )Tj
T*
(argument is less than 100 and a different approximation if the argument \is 100 or greater. )Tj
T*
(The first formula might be incalculable \(e.g., divide by zero\) when th\e function argument is )Tj
T*
(100 and its values might make no sense when arguments are greater than 1\00. 100 is clearly )Tj
T*
(a boundary but you might never realize it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(CALCULATION ERRORS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program calculates a number and gets the wrong result. This can happ\en for one of three )Tj
T*
(types of reasons: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 203.17555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 203.17555 Tm
(Bad logic: There can be a typing error, like A-A instead of A+A. Or the \programmer )Tj
T*
(might break a complex expression into a set of simpler ones, but get the\ )Tj
T*
(simplification wrong. Or he might use an incorrect formula, or one inapp\licable to the )Tj
T*
(data at hand. This third case is a design error. The code does what the \programmer )Tj
T*
(intended\363it's his conception of what the code should do that is wrong\. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 119.17555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 119.17555 Tm
(Bad arithmetic: There might be an error in the coding of a basic functio\n, such as )Tj
T*
(addition, multiplication, or exponentiation. The error might show up whe\never the )Tj
T*
(function is used \(2 + 2 = -5\) or it might be restricted to rare specia\l cases. In either )Tj
T*
(case, any program that uses the function can fail. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 51.97556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 51.97556 Tm
(Imprecise calculation: If the program uses floating point arithmetic, it\ loses precision )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(44\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj536 0 obj 3749endobj537 0 obj<</Length 536 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 82.60001 753.97552 Tm
(as it calculates, because of roundoff and truncation errors. After many \intermediate )Tj
0 -1.2 TD
(errors, it may claim that 2 + 2 works out to -5 even though none of the \steps in the )Tj
T*
(program contains a logical error. )Tj
-2.85715 -3.55714 Td
(This area is huge and this section only begins to scratch its surface. F\or an introduction to the )Tj
T*
(larger area, read Conte and deBoor \(1980\) and Knuth \(1981\). For a se\cond source on topics )Tj
T*
(in Conte and deBoor, try Carnahan, Luther & Wilkes \(1969\). )Tj
/T1_1 1 Tf
0 -2.55714 TD
(OUTDATED CONSTANTS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Numbers are sometimes used directly in a program. The computer might be \able to connect )Tj
T*
(to a maximum of 64 terminals. The length of the configuration file might\ be 706 bytes. The )Tj
T*
(first two digits in the year are 19 \(as in 1987\). When these values ch\ange, the program has to )Tj
T*
(change too. Often, they are changed in a few places but not everywhere. \Any calculations )Tj
T*
(based on the old values are now out of date, and thus wrong. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(CALCULATION ERRORS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some errors are as simple as typing a minus sign instead of a plus, or s\ubtracting B from A )Tj
T*
(instead of A from B. These usually show up easily if you exercise reason\able care in testing. )Tj
T*
(If the program asks for input data, then prints a number calculated from\ these, do the same )Tj
T*
(calculation yourself. Does your number match the computer's? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(IMPOSSIBLE PARENTHESES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(\(A + \(B + C\) * \(D + \(A / C - B E / \(B + \(F + 18 / \(A - F\)\)\)\)\\)\) )Tj
0 -2.55714 TD
(Formulas with many parentheses are hard to understand. It's easy to get \one wrong, when )Tj
0 -1.2 TD
(writing the code in the first place and when trying to change it later. \)Tj
/T1_1 1 Tf
0 -2.55714 TD
(WRONG ORDER OF OPERATORS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program will evaluate an expression in a certain order, but it might\ be a different order )Tj
T*
(than the programmer expected. For example, if ** represents exponentiati\on, so 5 ** 3 is 5 )Tj
T*
(cubed, is 2 * 5 ** 3 equal to 1000 \(10 cubed\) or 250 \(twice 5 cubed\)\? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(BAD UNDERLYING FUNCTION)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Commercially supplied programs and languages usually do the most basic f\unctions, such as )Tj
T*
(adding and multiplying, correctly. Of course, if your development group \has written their )Tj
T*
(own, these functions are as suspect as everything else. Slightly fancier\ functions, like )Tj
T*
(exponentiation, sine, cosine, and hyperbolics, are not necessarily as tr\ustworthy. Errors of )Tj
T*
(this class may be deliberate. Some programmers use inaccurate approximat\ion formulas )Tj
T*
(because they evaluate quickly or are compact and easy to code. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(OVERFLOW AND UNDERFLOW)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(45\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj538 0 obj 4161endobj539 0 obj<</Length 538 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(An overflow condition occurs when the result of a numerical calculation \is too large for the )Tj
0 -1.2 TD
(program to handle. For example, suppose the program stores all numbers i\n fixed point )Tj
T*
(format, with one byte per number. It works with numbers from 0 to 255. I\t can't add 255 + )Tj
T*
(255 because the result is too large to fit in one byte. Overflows also o\ccur in floating point )Tj
T*
(arithmetic, when the exponent is too large. )Tj
0 -2.55714 TD
(Underflows occur only in floating point calculations. In floating point,\ a number is )Tj
0 -1.2 TD
(represented by a pair of values, one for the exponent, the other for a f\raction. For example, )Tj
T*
(255 is 0.255 times 103. 255,000 is 0.255 times 106. The exponent changes\, but the fractional )Tj
T*
(part \(0.255\) is the same in both cases. Now, suppose the program alloc\ates a byte for the )Tj
T*
(exponent, and stores values of 0 to 255. What happens if the exponent is\ -1 \(0.255 * 10-1 is )Tj
T*
(0.0255\)? This is too small to be stored \(because the smallest exponent\ we can store in this )Tj
T*
(scheme is 0\), so we have an underflow. Underflows are usually converted\ to 0 \(0.255 * 10-1 )Tj
T*
(becomes 0\), without an error message. This is usually appropriate, but \it can lead to )Tj
T*
(computational errors: )Tj
0 -2.55714 TD
(Is 100 * .255 * 10-1 zero or 2.55? )Tj
/T1_1 1 Tf
T*
(TRUNCATION AND ROUNDOFF ERROR)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose the program stores only two digits per number. The number 5.19 h\as three digits. If )Tj
T*
(the program truncates \(drops\) the 9, it stores 5.1. Instead, it could \round 5.19 upwards to 5.2, )Tj
T*
(which is much closer than 5.1. )Tj
0 -2.55714 TD
(If a programming language keeps two digits per floating point number, it\ works in two-digit )Tj
0 -1.2 TD
(precision. Calculations in this language would not be accurate. For exam\ple, 2.056 is about )Tj
T*
(74. However, if you round 2.05 to 2.1, the calculated value of 2.056 is \nearly 86. If you )Tj
T*
(truncate 2.05 to 2.0, you get 64 instead. )Tj
0 -2.55714 TD
(We don't know of any language that uses two-digit precision, but many ke\ep only six digits )Tj
0 -1.2 TD
(in floating point calculations. Six-digit calculations are fine for simp\le computations but they )Tj
T*
(can cause surprisingly large errors in more complicated calculations. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(CONFUSION ABOUT THE REPRESENTATION OF THE DATA)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The same number can be represented in many different ways; they can be c\onfused with )Tj
T*
(each other. For example, suppose that the program asks you for a number \between 0 and 9. )Tj
T*
(You type 1. It might store this 1 in a byte, as fixed point number betwe\en 0 and 255. There )Tj
T*
(are 8 bits in this byte: the bit pattern is 0000 0001. Or it might store\ the ASCII code of the )Tj
T*
(character you typed. The ASCII code for 1 is 49, or 0011 0001 in binary.\ In both cases, the )Tj
T*
(number fits in one byte. It is easy to get confused later and treat some\thing stored in ASCII )Tj
T*
(format as if it were as a fixed point integer, or vice versa. Your numbe\r might also be stored )Tj
T*
(in some other format, such as floating point. Again, confusion between f\ormats is possible. )Tj
T*
(Some programming languages straighten this out themselves, others issue \warnings during )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(46\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj540 0 obj 4271endobj541 0 obj<</Length 540 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(compilation, and others just let you get the wrong answer. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(INCORRECT CONVERSION FROM ONE DATA REPRESENTATION TO )Tj
0 -1.2 TD
(ANOTHER)Tj
/T1_0 1 Tf
( )Tj
T*
(The program asks for a number between 0 and 9. You type 1. This is a cha\racter, and the )Tj
T*
(program receives the ASCII code 49. To convert your input to a number, i\t should subtract )Tj
T*
(48 from the code value. It subtracts 49 instead. You entered 1, but the \program will treat )Tj
T*
(your response as 0. Whenever a program does its own conversion from one \data )Tj
T*
(representation to another, it has plenty of opportunity to go wrong. ASC\II to Integer is only )Tj
T*
(one example of a conversion. Conversions are common between ASCII, float\ing point, )Tj
T*
(integer, character \(string\), etc. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(WRONG FORMULA)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs use complicated formulas. It's easy to miscopy one, to rea\d the wrong one )Tj
T*
(from the book, or to make an error when deriving one. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(INCORRECT APPROXIMATION)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Many formulas for approximating or estimating certain values were develo\ped long before )Tj
T*
(computers. They're great formulas in the sense that they don't require m\uch computation, but )Tj
T*
(lousy otherwise. Unfortunately, they are also traditional. They will kee\p appearing in text )Tj
T*
(books and programs for years. As a common example, if you are graphing a\ set of data and )Tj
T*
(want to fit a curve to them that has the form Y = a Xb, it is traditiona\l to take logarithms of )Tj
T*
(everything in sight, estimating a and b by fitting a line to the new fun\ction, log Y = log a + b )Tj
T*
(log X. This is easy to program, quick to run, and inaccurate. When you r\eturn from )Tj
T*
(logarithms and plot a Xb, the curve fits data on the left of the figure \\(small values of X\) )Tj
T*
(better than data toward the right. )Tj
0 -2.55714 TD
(Many programs use bad approximation methods and other incorrect mathemat\ical )Tj
0 -1.2 TD
(procedures. They might print impressive output, but it is wrong output. \You can't test for )Tj
T*
(these types of problems unless you understand a fair bit of the mathemat\ics yourself. If you )Tj
T*
(are testing a statistical package or other mathematical package, it is e\ssential that you or )Tj
T*
(another tester have a detailed understanding of the functions being prog\rammed.   )Tj
ET
0.5 0.5 0.5 rg
108.45 191.60001 m
108.45 193.60001 l
503.54999 193.60001 l
502.54999 192.60001 l
109.45 192.60001 l
109.45 192.60001 l
h
f
0.875 0.875 0.875 rg
503.54999 193.60001 m
503.54999 191.60001 l
108.45 191.60001 l
109.45 192.60001 l
502.54999 192.60001 l
502.54999 192.60001 l
h
f
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 153.57556 Tm
(INITIAL AND LATER STATES)Tj
/T1_0 1 Tf
( )Tj
T*
(Before you can use a function, the program may have to initialize it. Ty\pical initialization )Tj
T*
(steps include identifying the function's variables, defining their types\, allocating memory for )Tj
T*
(them, and setting them to default values \(such as 0\). The program may \have to read a disk )Tj
T*
(file that contains defaults and other configuration information. What ha\ppens when the file is )Tj
T*
(not there? Initialization steps might be done when the program is loaded\ \(data defaults can )Tj
T*
(be loaded into memory along with the program\), when it is started, when\ the function is first )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(47\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj542 0 obj 4345endobj543 0 obj<</Length 542 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(called, or each time the function is called. )Tj
0 -2.55714 TD
(Initialization needs and strategy vary widely across languages. For exam\ple: )Tj
/T1_1 1 Tf
7 0 0 7 68.313 682.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 682.37555 Tm
(In many languages, a function's local variables keep their values from o\ne call to the )Tj
0 -1.2 TD
(next. If a variable is supposed to keep the same value, the function can\ set the )Tj
T*
(variable's value once and leave it alone thereafter. The function usuall\y has to reset )Tj
T*
(other variables to their starting values. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 615.17554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 615.17554 Tm
(In other languages, local variables are erased from memory on exit from \the function. )Tj
T*
(Whenever the program calls a function, it must redefine its variables, a\llocate )Tj
T*
(memory for them, and assign starting values. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 564.77557 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 564.77557 Tm
(Some languages allow the programmer to specify whether a variable should\ stay in )Tj
T*
(memory or be erased after each function call. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 531.17554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 531.17554 Tm
(Some compilers provide initialization support. The programmer can specif\y a starting )Tj
T*
(value for a variable; the compiler will make sure that this loads into m\emory with the )Tj
T*
(program. If the programmer doesn't assign an initial value, the compiler\ sets it to 0. )Tj
T*
(Other compilers, even for the same language, do not provide this support\. The )Tj
T*
(function must set each variable's value the first time it's called. To a\void resetting )Tj
T*
(each variable every time it's called, the function must know whether it'\s been called )Tj
T*
(before. )Tj
-2.85715 -3.55714 Td
(Initialization failures usually show up the first time the function is c\alled or the second time, )Tj
T*
(if it doesn't reinitialize variables correctly. Reinitialization failure\s may be path-dependent. If )Tj
T*
(you reach a function in a "normal" way, it works fine. However, if you t\ake an "abnormal" )Tj
T*
(route, the program might branch into the function at some point after th\e initialization code. )Tj
T*
(Programmers often treat backing up to modify data or redo calculations a\s abnormal. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(FAILURE TO SET A DATA ITEM TO 0)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Since so many compilers, in so many languages, set data to 0 unless you \tell them otherwise, )Tj
T*
(many programmers don't bother specifying the starting value of a variabl\e unless it is non-)Tj
T*
(zero. Their coding style fails as soon as they use a compiler that doesn\'t automatically zero )Tj
T*
(data. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(FAILURE TO INITIALIZE A LOOP-CONTROL VARIABLE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A loop-control variable determines how many times the program will run t\hrough a loop. For )Tj
T*
(example, a function prints the first 10 lines of a text file. The progra\m stores the number of )Tj
T*
(the line reaches 11, printing stops. Next time, the function must reset \LINE to 1 or it will )Tj
T*
(never start printing because LINE's value is 11 already. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(FAILURE TO INITIALIZE \(OR REINITIALIZE\) A POINTER)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A pointer variable stores an address, such as the location in memory whe\re a given string )Tj
T*
(starts. The value of the pointer can change\363for example, it might poi\nt to the first character )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(48\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj544 0 obj 4217endobj545 0 obj<</Length 544 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 751.17554 Tm
(in a string, then be changed to point to the second, the third, and so o\n. If the programmer )Tj
0 -1.2 TD
(forgets to reset a pointer after changing it, it will point to the wrong\ part of the string or to )Tj
T*
(the wrong string. If subsequent function calls keep changing the pointer\ without reinitializing )Tj
T*
(it, the pointer may eventually point to code rather than data. )Tj
0 -2.55714 TD
(You should suspect pointer errors if you see string fragments or incorre\ct array elements )Tj
0 -1.2 TD
(displayed. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(FAILURE TO CLEAR A STRING)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A string variable stores a set of characters. Whereas the value of a num\eric variable might be )Tj
T*
(5, a string might have the value Hello, my name is John. Strings can var\y in length. You can )Tj
T*
(change the string from Hello, my name is John to the shorter string, Goo\dbye. Some routines )Tj
T*
(assume that a string is empty \(filled with zeroes\) before they use it.\ A routine that writes )Tj
T*
(Goodbye into the first 7 bytes of a string without terminating it with z\eroes might yield )Tj
T*
(Goodbye my name is John rather than Goodbye. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(FAILURE TO INITIALIZE \(OR REINITIALIZE\) REGISTERS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Registers are special memory areas usually found on the central processi\ng unit itself. You )Tj
T*
(can manipulate data stored in registers more quickly than those stored i\n normal memory. )Tj
T*
(Because of this speed advantage, programs constantly use registers for t\emporary storage. )Tj
T*
(They copy a few variables' values to registers, work with them, and copy\ the new values in )Tj
T*
(the registers back. It's easy to forget to load the latest data into one\ of these registers. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(FAILURE TO CLEAR A FLAG)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Flags are variables that indicate special conditions. A flag can be set \\(true, on, up, usually 1\) )Tj
T*
(or clear \(false, off, down, usually 0 or -1\). The flag's value is norm\ally clear. It is set as a )Tj
T*
(signal that a routine has failed, that its variables have been initializ\ed, that the result of a )Tj
T*
(calculation was an overflow or an underflow, that you've just pressed a \key, etc. Less )Tj
T*
(desirably, but also common, a flag might tell a routine that it was call\ed from one place in )Tj
T*
(the program rather than another, or that it should perform one type of c\alculation rather than )Tj
T*
(another. )Tj
0 -2.55714 TD
(The flag must be kept current. For example, a routine should clear its e\rror flag each time it's )Tj
0 -1.2 TD
(called, returning with a set flag only when it fails. A routine should c\lear its data-initialized )Tj
T*
(flag whenever any of its variables change from default values that shoul\d be changed back )Tj
T*
(the next time the routine is used. Some programs can set or clear the sa\me flag in a dozen )Tj
T*
(different places. It's hard to tell whether the flag's value is current \or not. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DATA WERE SUPPOSED TO BE INITIALIZED ELSEWHERE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A function may not initialize all of its data. For example, variables sh\ared by different )Tj
T*
(functions might be initialized together. Suppose that some functions are\ listed in the same )Tj
T*
(menu, and their shared variables are initialized whenever that menu is d\isplayed. This works )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(49\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj546 0 obj 4203endobj547 0 obj<</Length 546 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(as long as there's no other path to any of these functions, but can you \reach one by a back )Tj
0 -1.2 TD
(door? Is any function an option on another menu? Might the program call \it as part of )Tj
T*
(another function's error recovery? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(FAILURE TO REINITIALIZE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Programmers may forget to make sure that a function's variables have the\ right values the )Tj
T*
(second time around. Simple forgetfulness is especially common when deali\ng with )Tj
T*
(languages that automatically initialize variables to 0. The programmer d\idn't have to set it to )Tj
T*
(0 for the first pass through the function. Why should she think about se\tting it back to 0 )Tj
T*
(later? )Tj
0 -2.55714 TD
(The programmer might also fail to reinitialize a function's data when it\'s reached "by the )Tj
0 -1.2 TD
(back door," especially when you try to back up to change data. Imagine e\ntering data on a )Tj
T*
(form, displayed onscreen. The program initializes all relevant variables\ when it paints the )Tj
T*
(form. You enter the wrong number, notice it after entering a few other v\alues, move the )Tj
T*
(cursor back, and fix it. Any calculations based on this number now have \to be redone. Will )Tj
T*
(the variables in those calculation sections be reinitialized? Moving bac\kward in the program )Tj
T*
(is risky as far as variable reinitialization is concerned. The risk is m\uch higher if the )Tj
T*
(programmer uses GOTOs to move back to lines in the middle of a block of \code, rather than )Tj
T*
(at the start of it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(ASSUMPTION THAT DATA WERE NOT REINITIALIZED)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programs initialize the same variables repeatedly, before they coul\d have changed. )Tj
T*
(This is harmless, except for the waste of computer time. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(CONFUSION BETWEEN STATIC AND DYNAMIC STORAGE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A local variable is called dynamic or automatic if it is erased from mem\ory when the )Tj
T*
(function that owns it exits. Each time the program calls the function, i\t has to redefine the )Tj
T*
(variable, allocate memory for it, and assign starting values. A static v\ariable stays in memory )Tj
T*
(and keeps its value across function calls. In some languages, all local \variables are dynamic, )Tj
T*
(in others all locals are static, and in some, the programmer gets to cho\ose which variables are )Tj
T*
(static and which dynamic. When both types of variables exist, confusion \is easy. The )Tj
T*
(programmer might forget to reinitialize a static variable because she th\inks it's dynamic, and )Tj
T*
(so doesn't need initialization. Similarly, she might forget to update th\e value of an automatic )Tj
T*
(variable because she forgets that it doesn't keep its value across funct\ion calls. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DATA MODIFICATION BY SIDE-EFFECT)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(After initialization, a routine might use a variable without changing it\. The programmer )Tj
T*
(might consider reinitialization unnecessary, since the variable doesn't \change, but even if she )Tj
T*
(intends the variable to be local to that routine, the language she's wri\ting in might not )Tj
T*
(recognize the concept of local variables. Any other part of the program \can change this )Tj
T*
(variable; after much maintenance, any other part of the program might. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(50\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj548 0 obj 3947endobj549 0 obj<</Length 548 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 748.37555 Tm
(INCORRECT INITIALIZATION)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The programmer might assign the wrong value to a variable, or declare it\ integer instead of )Tj
T*
(floating point, static instead of dynamic, global instead of local. Most\ of these errors are )Tj
T*
(caught by the compiler, long before you see the program. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(RELIANCE ON TOOLS THE CUSTOMER MAY NOT HAVE OR UNDERSTAND)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(This is rare but it happens\363it's surprisingly easy to miss. The progr\ammer expects you to use )Tj
T*
(some other program to modify this one or to set up some aspects of the p\rogram's )Tj
T*
(environment. You must do this the first time you use the program, to get\ its memory limits or )Tj
T*
(whatever into the right initial state. Thereafter, as the tester, you ma\y forget that you ever did )Tj
T*
(it.   )Tj
ET
0.5 0.5 0.5 rg
108.45 545.39996 m
108.45 547.39996 l
503.54999 547.39996 l
502.54999 546.39996 l
109.45 546.39996 l
109.45 546.39996 l
h
f
0.875 0.875 0.875 rg
503.54999 547.39996 m
503.54999 545.39996 l
108.45 545.39996 l
109.45 546.39996 l
502.54999 546.39996 l
502.54999 546.39996 l
h
f
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 507.37555 Tm
(CONTROL FLOW ERRORS)Tj
/T1_0 1 Tf
( )Tj
T*
(The control flow of a program describes what it will do next, under what\ circumstances. A )Tj
T*
(control flow error occurs when the program does the wrong thing next. Ex\treme control flow )Tj
T*
(errors stop the program or cause it to run amok. Many simple errors lead\ to spectacular )Tj
T*
(misbehavior. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(PROGRAM RUNS AMOK)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program displays garbage onscreen, saves garbage to disk, starts pri\nting forever, or )Tj
T*
(goes to some otherwise totally inappropriate routine. Eventually, it may\ stop dead. Whatever )Tj
T*
(the exact behavior, the program's actions are out of your control. These\ are the most )Tj
T*
(spectacular bugs, and are usually the easiest to find and fix. )Tj
0 -2.55714 TD
(From the outside, these bugs can look the same. They all make the progra\m go out of )Tj
0 -1.2 TD
(control. The descriptions below are examples of the causes of programs r\unning amok. You )Tj
0 -1.20001 TD
(would not test specifically for one of these errors unless you knew some\thing about the )Tj
0 -1.2 TD
(programming language, the programmer's style, or the internal design. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(GOTO somewhere)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(GOTO transfers control to another part of the program. The program jumps\ to the specified )Tj
T*
(routine, but this is obviously the wrong place. The program may lock, th\e screen display may )Tj
T*
(be inappropriate, etc. )Tj
0 -2.55714 TD
(The GOTO command is unfashionable. The structured programming movement i\s centered )Tj
0 -1.2 TD
(on a belief that GOTO encourages sloppy thinking and coding \(Yourdon, 1\976\). )Tj
0 -2.55714 TD
(Errors involving GOTO are especially likely when: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 40.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 40.57556 Tm
(The program branches backward, going somewhere it's been before. For exa\mple, the )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(51\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj550 0 obj 4596endobj551 0 obj<</Length 550 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 82.60001 753.77551 Tm
(GOTO may jump to a point just past validity checking or initialization o\f data or )Tj
0 -1.2 TD
(devices. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 720.17554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 720.17554 Tm
(The GOTO is indirect, going to an address stored in a variable. When the\ variable's )Tj
T*
(value changes, the GOTO takes the program somewhere else. It's hard to t\ell, when )Tj
T*
(reading the code, whether the variable has the right value at the right \time. )Tj
/T1_2 1 Tf
-2.85715 -2.55714 Td
(Come-from logic errors)Tj
/T1_0 1 Tf
( A routine uses come-from logic if it changes what it does based on )Tj
T*
(what routine called or jumped to it. Errors arise when the routine fails\ to correctly identify )Tj
T*
(what called it or does the wrong thing after correctly identifying the c\aller. Calling routines )Tj
T*
(often set flags or other variables to identify themselves, but a few dif\ferent routines may use )Tj
T*
(the same flag to mean different things, some may reset a flag when they'\re done with it while )Tj
T*
(others don't, and some may give it values that the called routine doesn'\t expect. Come-from )Tj
T*
(logic is fragile, and particularly prone to failure during maintenance p\rogramming. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Problems in table-driven programs)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A table-driven program uses a table \(array\) of addresses. Depending on\ the value of some )Tj
T*
(variable\(s\), the program selects a table entry and jumps to the memory\ address stored there. )Tj
T*
(The table may be a data file read from disk that can be changed without \recompiling the )Tj
T*
(program. Table-driven programming can make code easier to maintain, but \it has risks: )Tj
/T1_1 1 Tf
7 0 0 7 68.313 411.17554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 411.17554 Tm
(The numbers in the table might be wrong, especially if they were entered\ by hand. )Tj
T*
(These incorrect addresses could send the program anywhere. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 377.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 377.57556 Tm
(If the table is long, it is easy to supply the wrong entry for a given c\ase, and easy to )Tj
T*
(miss this when desk-checking the code. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 343.97556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 343.97556 Tm
(Suppose the table has five entries, and the program selects one of the f\ive based on )Tj
T*
(the value of a state variable. What if the variable can take on six valu\es? Where does )Tj
T*
(the program go in the sixth case? )Tj
/T1_1 1 Tf
7 0 0 7 68.313 293.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 293.57556 Tm
(It's easy to forget to update a jump table when modifying the code. )Tj
/T1_2 1 Tf
-2.85715 -2.55714 Td
(Executing data)Tj
/T1_0 1 Tf
( )Tj
T*
(You can't tell from a byte's contents whether it holds a character, part\ of a number, part of a )Tj
T*
(memory location, or a program instruction. The program keeps these diffe\rent types of )Tj
T*
(information in different places in memory to keep straight which byte ho\lds what type of )Tj
T*
(data. If the program interprets data as instructions, it will try to exe\cute them and will )Tj
T*
(probably lock. It may print odd things on the screen first. Some compute\rs detect execution )Tj
T*
(of "impossible" commands and stop the program with an error message \(us\ually a )Tj
T*
(hexadecimal message flagging program termination or reference to an ille\gal machine code.\) )Tj
0 -2.55714 TD
(The program will treat data as if they were instructions under two condi\tions: )Tj
/T1_1 1 Tf
7 0 0 7 68.313 68.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 68.57556 Tm
(\(a\) Data are copied into a memory area reserved for code. The code is \overwritten. )Tj
0 -1.2 TD
(Examples of how to do this: )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(52\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj552 0 obj 4445endobj553 0 obj<</Length 552 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
7 0 0 7 107.73901 753.97552 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 122.60001 753.97552 Tm
(Pointers are variables which store memory addresses. A pointer might hol\d the )Tj
0 -1.2 TD
(starting address of an array; the programmer could put a value in the fo\urth )Tj
T*
(element of the array by saying store it in the fourth location after the\ address )Tj
T*
(stored in this pointer. If the address in the pointer is wrong, the data\ go to the )Tj
T*
(wrong place. If the address is in the code space, the new data overwrite\ the )Tj
T*
(program. )Tj
/T1_1 1 Tf
7 0 0 7 107.73901 653.17554 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 122.60001 653.17554 Tm
(Some languages don't check array limits. Suppose you have an array )Tj
T*
(MYARRAY, with three elements, MYARRAY[1], MYARRAY[2], and )Tj
T*
(MYARRAY[3]. What happens if the program tries to store a value in )Tj
T*
(MYARRAY[2044]? If the language doesn't catch this error, the data will b\e )Tj
T*
(stored in the spot that would have been MYARRAY[2044] if that MYARRAY )Tj
T*
(element existed. This memory location is a few thousand bytes past the e\nd )Tj
T*
(address of MYARRAY. It might be reserved for code, data, or hardware I/O\, )Tj
T*
(but not for MYARRAY. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 518.77557 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 518.77557 Tm
(\(b\) The program jumps to an area of memory that is reserved for data, \and treats it )Tj
T*
(like an area containing code. )Tj
/T1_1 1 Tf
7 0 0 7 107.73901 485.17554 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 122.60001 485.17554 Tm
(A bad table entry in a table-driven program can lead the program to jump\ into )Tj
T*
(a data area. )Tj
/T1_1 1 Tf
7 0 0 7 107.73901 451.57556 Tm
(m)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 122.60001 451.57556 Tm
(Some computers divide memory into segments. The computer interprets )Tj
T*
(anything in a code segment as instructions, and anything in a data segme\nt as )Tj
T*
(numbers or characters. If the program misstates a segment's starting add\ress, )Tj
T*
(what the computer interprets as a code segment will probably be a )Tj
T*
(combination of code and data. )Tj
/T1_2 1 Tf
-5.71429 -2.55714 Td
(Jumping to a routine that isn't resident)Tj
/T1_0 1 Tf
( )Tj
T*
(To save room, computers may swap pieces of large programs in and out of \memory. These )Tj
T*
(pieces are called overlays: when one is in memory, the others aren't. Wh\en another is )Tj
T*
(needed, the computer reads it from disk and stores it in the same area o\f memory used by the )Tj
T*
(first overlay. When routines in the first overlay are again needed, they\ are again read into the )Tj
T*
(shared area of memory. The routine in memory right now is resident in me\mory. )Tj
0 -2.55714 TD
(Before using a routine that is part of an overlay, the program must chec\k that the right )Tj
0 -1.2 TD
(overlay is resident. Otherwise, when it jumps to what should be the star\ting address of the )Tj
T*
(routine, it may be jumping into the middle of some other routine. )Tj
0 -2.55714 TD
(Overlays can also cause performance problems. The programmer might ensur\e that a routine )Tj
0 -1.2 TD
(is resident by always loading it from disk before jumping to it. This wa\stes a lot of computer )Tj
T*
(time if he calls the routine many times. The program will also waste tim\e if it alternates )Tj
T*
(between routines that are part of two different overlays. This is called\ thrashing: the program )Tj
T*
(loads the first overlay, executes the first routine, then overwrites it \with the second overlay to )Tj
T*
(execute the second routine, reloads the first overlay, etc. It spends mo\st of its time loading )Tj
T*
(overlays rather than getting work done. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(53\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj554 0 obj 4307endobj555 0 obj<</Length 554 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 752.77551 Tm
(Re-entrance)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A re-entrant program can be used concurrently by two or more processes. \A re-entrant )Tj
T*
(subroutine can call itself or be called by any other routine while it's \executing. Some )Tj
T*
(languages don't support re-entrant subroutine calls: if a routine tries \to call itself, the program )Tj
T*
(crashes. Even if the language allows re-entrance, a given program or rou\tine might not be. If )Tj
T*
(a routine is serving two processes, how does it keep its data separate, \so that what it does for )Tj
T*
(one process doesn't corrupt what it does for the other? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Variables contain embedded command names)Tj
/T1_0 1 Tf
( Some language dialects ignore spaces. A )Tj
0 -1.2 TD
(phrase like PRINTMYNAME would be interpreted by the language as PRINT MY\NAME. )Tj
T*
(The program would attempt to print the value of variable MYNAME. This is\ an error if the )Tj
T*
(user was trying to define a variable named PRINTMYNAME. This type of err\or is usually )Tj
T*
(caught by the programmer, but occasional ones do survive. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong returning state assumed)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Imagine a subroutine that's supposed to set a device's baud rate. The pr\ogram calls this )Tj
T*
(routine and assumes that the routine did its job successfully. It starts\ transmitting through the )Tj
T*
(device as soon as possible. This time, the routine failed. The transmiss\ion fails and the )Tj
T*
(program hangs waiting for acknowledgment of the data. As another example\, suppose a )Tj
T*
(routine usually scales the data passed to it, passing back numbers that \lie between 1 and 10. )Tj
T*
(Under exceptional circumstances, the routine will scale from 0 to 10 ins\tead. Because the )Tj
T*
(calling program assumes that it will never receive a 0, it crashes on a \divide by 0 error. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Exception-handling based exits)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose that a routine designed to calculate square roots sets an error \flag but does no )Tj
T*
(computations when asked to take the square root of a negative number. Th\e idea behind error )Tj
T*
(flags is that the calling program can decide how to deal with the proble\m. One might print an )Tj
T*
(error message, another display a help screen, and a third might send the\ number to a slower )Tj
T*
(routine built for complex numbers. Subroutines that flag and reject exce\ptional conditions )Tj
T*
(can be used under more conditions. However, each time one is called, the\ caller must check )Tj
T*
(that it did what the programmer expected it to do. If the exit-producing\ conditions are rare, )Tj
T*
(he may miss them. During testing, they may show up as "irreproducible" b\ugs. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Return to wrong place)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The key difference between a subroutine and a GOTO is that when the subr\outine ends, it )Tj
T*
(returns to the part of the program that called it, whereas GOTO never re\turns. Occasionally, )Tj
T*
(a subroutine can return to the wrong place in a program. The next few se\ctions are examples. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Corrupted stack)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(When a subroutine finishes, program control returns to the command follo\wing the call to )Tj
T*
(the subroutine. The address of that command is stored in a data structur\e called a stack. The )Tj
T*
(top of the stack holds the address most recently pushed onto it. The sub\routine returns to the )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(54\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj556 0 obj 3927endobj557 0 obj<</Length 556 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(address stored at the top of the stack. If the stack is only used to hol\d return addresses, it is )Tj
0 -1.2 TD
(called a Call/Return Stack. Most stacks are also used as a temporary spo\t to stash data. )Tj
0 -2.55714 TD
(If a subroutine puts data on the stack and doesn't remove them before fi\nishing, the computer )Tj
0 -1.2 TD
(will treat the number\(s\) at the top of the stack as a return address. \The subroutine might )Tj
T*
("return" anywhere in memory. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Stack under/overflow)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The stack might only be able to hold 16, 32, 64, or 128 addresses. Imagi\ne a stack that can )Tj
T*
(only hold 2 return addresses. When the program calls Subroutine 1, it st\ores a return address )Tj
T*
(on the stack. When Subroutine 1 calls Subroutine 2, another return addre\ss goes on the stack. )Tj
T*
(When Routine 2 ends, control goes back to Routine 1, and when Routine 1 \ends, control )Tj
T*
(returns to the main body of the program. )Tj
0 -2.55714 TD
(What if Subroutine 2 calls Subroutine 3? The stack is storing 2 return a\ddresses already, so it )Tj
0 -1.2 TD
(cannot also hold the return address for Subroutine 3. This is a stack ov\erflow condition. )Tj
T*
(Programs \(or central processing chips\) often compound a stack overflow\ problem by )Tj
T*
(replacing the oldest stored return addresses with the new one. The progr\am will now return )Tj
T*
(to Subroutine 2 when Subroutine 3 is done. From Subroutine 2 it returns \to Subroutine 1. )Tj
T*
(From Subroutine 1 it returns to...???...there is no return address for S\ubroutine 1. This is a )Tj
T*
(stack underflow. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(GOTO rather than RETURN from a subroutine)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Subroutine 1 calls routine 2. Routine 2 GOTOs back to 1, rather than ret\urning normally. )Tj
T*
(The return address from routine 2 to 1 is still on the stack. When subro\utine 1 finishes, the )Tj
T*
(program will return to the address stored on the stack, which takes it b\ack to subroutine 1. )Tj
T*
(This is rarely intentional. )Tj
0 -2.55714 TD
(To avoid this error, subroutine 2 might POP \(remove\) its return addres\s from the stack when )Tj
0 -1.2 TD
(it does its GOTO back to routine 1. Used incorrectly, this can cause sta\ck underflows, )Tj
T*
(returns to the wrong calling routine, and attempts to return to data val\ues stored on the stack )Tj
T*
(with the return addresses. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Interrupts)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(An interrupt is a special signal that causes the computer to stop the pr\ogram in progress and )Tj
T*
(branch to an interrupt handling routine. Later, the program restarts fro\m where it was )Tj
T*
(interrupted. Input/output events, including signals from the clock that \a specified interval of )Tj
T*
(time has passed, are typical causes of interrupts. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong interrupt vector)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(When an interrupt signal is generated, the computer has to find the inte\rrupt handling )Tj
T*
(routine, then branch to it. The address of the interrupt handler is stor\ed in a dedicated )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(55\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj558 0 obj 3886endobj559 0 obj<</Length 558 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(location in memory. The computer jumps to the address stored in that loc\ation. If the )Tj
0 -1.2 TD
(computer can distinguish between several different types of interrupts, \it finds a given )Tj
T*
(interrupt's handler in a list of addresses stored in a dedicated section\ of memory. This list is )Tj
T*
(called the interrupt vector. )Tj
0 -2.55714 TD
(If wrong addresses are stored in the interrupt vector, any error might b\e possible in response )Tj
0 -1.2 TD
(to an interrupt-generating event. If the addresses are merely out of ord\er, the program is less )Tj
T*
(likely to run amok but it might try to echo characters onscreen in respo\nse to a clock signal, )Tj
T*
(or treat keyboard inputs as if they flagged time-outs. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to restore or update interrupt vector)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A program can change the interrupt vector by writing new addresses into \the appropriate )Tj
T*
(memory locations. If a module temporarily changes the interrupt vector, \it might not restore )Tj
T*
(the old address list on exit. Another might fail to make a permanent \(o\r temporary\) change to )Tj
T*
(the vector. In either case, the computer will branch to the wrong place \after the next )Tj
T*
(interrupt. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to block or unblock interrupts)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Programs can block most interrupts, instructing the computer to ignore b\lockable interrupts. )Tj
T*
(For example, it's traditional to block interrupts just before starting t\o write data to a disk and )Tj
T*
(to unblock immediately after output to the disk is complete. This preven\ts many data )Tj
T*
(transmission errors. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Invalid restart after an interrupt)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program is interrupted, then restarted. In some systems, at restart \time, the program gets )Tj
T*
(a message or other indication that it was interrupted. The message usual\ly identifies the type )Tj
T*
(of interrupting event \(keyboard I/O, time-out, modem I/O, etc.\). This \is useful. For example, )Tj
T*
(if a program knows it was interrupted, it can repaint the screen with in\formation it was )Tj
T*
(showing before the interrupt. The programmer might easily specify the wr\ong action or a )Tj
T*
(branch to the wrong location in response to a signal that a certain type\ of interrupt has been )Tj
T*
(executed. Programmers are as unlikely to catch these errors as error-han\dling errors. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(PROGRAM STOPS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some languages will stop a program when certain types of errors are dete\cted. Some )Tj
T*
(programs aren't designed to stop, nor are the languages designed to stop\ them, but they do )Tj
T*
(anyway. )Tj
0 -2.55714 TD
(Not all halts are control flow errors. If the program code says "If this\ happens, halt," the )Tj
0 -1.2 TD
(program is supposed to stop. It is a user interface error, but not a con\trol flow error, if this )Tj
T*
(program stops unexpectedly, without a message. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Dead crash)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(56\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj560 0 obj 4119endobj561 0 obj<</Length 560 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(In a dead crash, the computer stops responding to keyboard input, stops \printing, and leaves )Tj
0 -1.2 TD
(lights on or off \(but doesn't change them\). It usually locks without i\ssuing any warnings that )Tj
T*
(it's about to crash. The only way to regain control is to turn off the m\achine or press the reset )Tj
T*
(key. )Tj
0 -2.55714 TD
(Dead crashes are usually due to infinite loops. One common loop keeps lo\oking for )Tj
0 -1.2 TD
(acknowledgment or data from another device \(printer, another computer, \disk, etc.\). If the )Tj
T*
(program missed the acknowledgment, or never gets one, it may stay in thi\s wait loop forever. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Syntax errors reported at run-time)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(An interpreted language may not check syntax until run-time. When the la\nguage finds a )Tj
T*
(command that it can't interpret, it prints an error message and stops th\e program. Any line of )Tj
T*
(code that the programmer didn't test may have a syntax error. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Waits for impossible condition, or combination of conditions)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program stops \(usually a dead crash\) waiting for an event that can\not occur. Common )Tj
T*
(examples: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 442.77554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 442.77554 Tm
(I/O failure: The computer sends data to a broken output device, then wai\ts forever for )Tj
T*
(the device to acknowledge receipt. A similar problem arises between proc\esses in a )Tj
T*
(multi-processing system. One process sends a request or data to another,\ then waits )Tj
T*
(forever for a response that never arrives. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 375.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 375.57556 Tm
(Deadly embrace: This is a classic multi-processing problem. Two programs\ run )Tj
T*
(simultaneously. Each needs the same two resources \(say, a printer and e\xtra memory )Tj
T*
(for a printer buffer\). Each grabs one resource, then waits forever for \the other )Tj
T*
(program to finish with the other resource. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 308.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 308.37555 Tm
(Simple logic errors: For example, a program is supposed to wait for a nu\mber )Tj
T*
(between 1 and 5, discarding all other input. However, the code testing t\he input reads: )Tj
T*
(IF INPUT > 5 AND INPUT < 1. No number can meet this condition so the pro\gram )Tj
T*
(waits forever. )Tj
-2.85715 -2.55714 Td
(Similarly, in multi-processing systems, one process may wait forever for\ another to send it )Tj
T*
(an impossible value. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong user or process priority)Tj
/T1_0 1 Tf
( )Tj
0 -1.20001 TD
(A computer that runs many programs at once switches between them. It run\s one program )Tj
0 -1.2 TD
(for a while, then switches to a second, to a third, eventually returning\ to the first. Multi-)Tj
T*
(processing systems run smoothly because a scheduling program switches ba\ck to programs )Tj
T*
(when events like keyboard input happen or when a program has been suspen\ded for too long. )Tj
0 -2.55714 TD
(If two programs have been waiting equally long to run, or if the same ty\pe of event happens )Tj
0 -1.2 TD
(to trigger each, the scheduler must decide which program to run first. I\t uses a priority )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(57\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj562 0 obj 3350endobj563 0 obj<</Length 562 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(system: priorities might be assigned to users or programs. The program b\eing run by a higher )Tj
0 -1.2 TD
(priority user will run first. )Tj
0 -2.55714 TD
(Some programs run at such low priorities, they may be suspended for hour\s before being )Tj
0 -1.2 TD
(restarted. This may be appropriate. In other cases, priorities were inco\rrectly assigned or )Tj
T*
(interpreted. Less extreme priority errors are more common but harder to \detect unless they )Tj
T*
(trigger race conditions. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(LOOPS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(There are many ways to code a loop, but they all have some things in com\mon. Here's one )Tj
T*
(example: )Tj
/T1_2 1 Tf
0 -2.56195 TD
(1 SET LOOP_CONTROL = 1)Tj
0 -1.2 TD
(2 REPEAT)Tj
T*
(3               SET VAR = 5)Tj
T*
(4               PRINT VAR * LOOP_CONTROL)Tj
T*
(5               SET LOOP_CONTROL = LOOP_CONTROL + 1)Tj
T*
(6 UNTIL LOOP_CONTROL > 5)Tj
T*
(7 PRINT VAR)Tj
/T1_0 1 Tf
0 -2.55232 TD
(The program sets LOOP_CONTROL to 1, sets VAR to 5, prints the product of\ VAR and )Tj
0 -1.2 TD
(LOOP_CONTROL, adds 1 to LOOP_CONTROL then checks whether LOOP_CONTROL )Tj
T*
(is greater than 5. Since LOOP_CONTROL is only 2, it repeats the code ins\ide the loop \(lines )Tj
T*
(3, 4, and 5\). The loop keeps repeating until LOOP_CONTROL reaches 6. Th\en the program )Tj
T*
(executes the next command after the loop, printing the value of VAR. )Tj
0 -2.55714 TD
(LOOP_CONTROL is called the loop control variable. Its value determines h\ow many times )Tj
0 -1.2 TD
(the loop is executed. If the expression written after the UNTIL is compl\ex, involving many )Tj
T*
(different variables, it is a loop control expression, rather than a loop\ control variable. The )Tj
T*
(same types of errors arise in both cases. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Infinite loop)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If the condition that terminates the loop is never met, the program will\ loop forever. Modify )Tj
T*
(the example so that it loops until LOOP_CONTROL was less than 0 \(never \happens\). It will )Tj
T*
(loop forever. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong starting value for the loop control variable)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose that, later in the program, there is a GOTO to the start of the \loop at line 2. )Tj
T*
(LOOP_CONTROL could have any value. It probably isn't 1. If the programme\r expects this )Tj
T*
(loop to repeat five times \(as it would if the GOTO was to line 1\), he \is in for a surprise. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Accidental change of the loop control variable)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(58\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj564 0 obj 3202endobj565 0 obj<</Length 564 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(In the example, the value of LOOP_CONTROL changed inside the loop. A big\ger loop )Tj
0 -1.2 TD
(might change LOOP_CONTROL in more than one place \(especially if it call\s a subroutine )Tj
T*
(that uses LOOP_CONTROL\), and the program might repeat the loop more or \less often than )Tj
T*
(the programmer expects. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong criterion for ending the loop)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Perhaps the loop should end when LOOP_CONTROL > 5 rather than when )Tj
T*
(LOOP_CONTROL >_ 5. This is a common mistake. And, if the ending criterio\n is more )Tj
T*
(complex, it is more prone to error. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Commands that do or don't belong inside the loop)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(In the example, SET VAR = 5 is inside the loop. The value of VAR doesn't\ change inside the )Tj
T*
(loop, so VAR is still 5 the second, third, fourth, and fifth times the l\oop executes. Resetting )Tj
T*
(VAR to 5 each time is wasteful. Some loops repeat thousands of times: un\necessary )Tj
T*
(repetition within them is significant. )Tj
0 -2.55714 TD
(Alternatively, suppose VAR did change inside the loop. If the programmer\ wants VAR to )Tj
0 -1.2 TD
(start at 5 each time the loop repeats, he has to say SET VAR = 5 at the \head of the loop. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Improper loop nesting)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(One loop can be nested \(completely included\) inside another. It is not\ possible \(without )Tj
T*
(error\) for one loop to start inside another but to end outside of it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(IF, THEN, ELSE, OR MAYBE NOT)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(An IF statement has the form: )Tj
/T1_2 1 Tf
0 -2.56197 TD
(    IF This_Condition IS TRUE)Tj
0 -1.2 TD
(         THEN DO Something)Tj
T*
(         ELSE DO Something_Else)Tj
/T1_0 1 Tf
0 -2.55232 TD
(For example: )Tj
/T1_2 1 Tf
0 -2.56197 TD
(    IF VAR > 5)Tj
0 -1.2 TD
(         THEN SET VAR_2 = 20)Tj
T*
(         ELSE SET VAR_2 = 10)Tj
/T1_0 1 Tf
0 -2.55232 TD
(The THEN clause \(SET VAR_2 = 20\) is only executed if the condition \(V\AR > 5\) is met. If )Tj
0 -1.2 TD
(the condition is not met, the ELSE clause \(SET VAR_2 = 10\) is executed\. Some IF )Tj
T*
(statements only specify what to do if the condition is met. They don't i\nclude an ELSE )Tj
T*
(clause. If the condition is not met \(VAR =< 5\) the program skips the T\HEN clause and )Tj
T*
(moves on to the next line of code. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(59\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj566 0 obj 4073endobj567 0 obj<</Length 566 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(Wrong inequalities \(e.g., > instead of >_\))Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The tested condition \(VAR > 5\) might be incorrect, or incorrectly stat\ed. Programmers often )Tj
T*
(forget to consider the case in which the two variables are equal. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Comparison sometimes yields wrong result)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The condition tested by the IF is usually the right one, but not always.\ Suppose the )Tj
T*
(programmer wants to test whether three variables are the same. He might \write IF \(VAR + )Tj
T*
(VAR_2 + VAR_3\) / 3 = VAR. )Tj
0 -2.55714 TD
(If VAR, VAR_2, and VAR_3 are the same, the average of them will have the\ same value as )Tj
0 -1.2 TD
(any one of them. Further, for almost all values, if VAR, VAR_2, and VAR_\3 are not the )Tj
T*
(same, their average will not equal VAR. But suppose that VAR is 2, VAR_2\ is 1, and )Tj
T*
(VAR_3 is 3. \(VAR+VAR_2+ VAR_3\) / 3 = VAR, but VAR, VAR_2, and VAR_3 ar\en't )Tj
T*
(equal. Shortcuts like this that try to combine a few comparisons into on\e regularly go awry. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Not equal versus equal when there are three cases)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The three-case problem often comes up during maintenance programming. Th\e initial code )Tj
T*
(may have restricted VAR's values to 0 and 1, but later changes allow it \to be 2 as well. In the )Tj
T*
(original program, an IF statement for VAR = 0 was fine. The THEN clause \covered VAR = )Tj
T*
(0, and, since VAR could only be 0 or 1, the ELSE clause said what to do \when VAR = 1. )Tj
T*
(Now that VAR can also be 2, the ELSE clause is probably wrong. )Tj
0 -2.55714 TD
(It's risky to compare a variable to only one value \(like VAR = 0\), lea\ving all the others to the )Tj
0 -1.2 TD
(same ELSE clause. There are so many other possible values: some may aris\e as originally )Tj
T*
(unanticipated special cases. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Testing floating point values for equality)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Floating point calculations are subject to truncation and round off erro\rs. For example, rather )Tj
T*
(than being exactly zero, a variable's value might be 0.000000008 because\ of small )Tj
T*
(computational errors. This is close, but it wouldn't pass a test of equa\lity \(IF VAR = 0\). )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Confusing inclusive and exclusive OR)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Many IF statements test whether one of a group of conditions is true \(I\F A OR B is true, )Tj
T*
(THEN ...\) Unfortunately, "or" is ambiguous: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 150.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 150.57556 Tm
(inclusive or: satisfied if A is true, B is true or both A and B are true\ )Tj
/T1_2 1 Tf
7 0 0 7 68.313 133.77556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 133.77556 Tm
(exclusive or: satisfied if A is true or B is true, but not if A and B ar\e both true )Tj
/T1_1 1 Tf
-2.85715 -2.55714 Td
(Incorrectly negating a logical expression)Tj
/T1_0 1 Tf
( )Tj
T*
(IF statements sometimes take the form, IF A is NOT true, THEN. Programme\rs often carry )Tj
T*
(out the negation incorrectly or don't think through what the negation me\ans. For example, IF )Tj
T*
(NOT \(A or B\) THEN ... means IF A is false AND B is false, THEN.... The\ THEN clause )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(60\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj568 0 obj 3554endobj569 0 obj<</Length 568 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(will not be taken if A or B is true, even if the other is false. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Assignment-equal instead of test-equal)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(In the C language, if \(VAR = 5\) means SET VAR = 5, then test whether i\t's nonzero. )Tj
T*
(Programmers often write this instead of if \(VAR == 5\), which means wha\t some people )Tj
T*
(think if \(VAR = 5\) should mean. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Commands belong inside the THEN or ELSE clause)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Here's a simple example of this type of error: )Tj
/T1_2 1 Tf
0 -2.56195 TD
(        IF )Tj
0 -1.2 TD
(        VAR = VAR_2)Tj
T*
(                        THEN SET VAR_2 = 10)Tj
T*
(                        SET VAR_2 = 20)Tj
/T1_0 1 Tf
0 -2.55232 TD
(Clearly, SET VAR_2 = 20 belongs inside an ELSE clause. As it is now, VAR\_2 is always )Tj
0 -1.2 TD
(set to 20. Setting VAR_2 to 10 first, when VAR = VAR_2, has no effect. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Commands that don't belong inside either clause)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Sometimes the programmer will include a command inside a THEN or an ELSE\ clause that )Tj
T*
(should always be executed \(i.e., in both cases\). If he repeats the com\mand inside both )Tj
T*
(clauses, he wastes code space, but this usually doesn't matter. If he in\cludes it only inside )Tj
T*
(one clause, it will be missed whenever the other clause \(ELSE or THEN\)\ is executed. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to test a flag)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(For example, the program calls a subroutine, which is supposed to assign\ a value to a )Tj
T*
(variable. The subroutine fails, sets its error flag, and leaves the vari\able alone. The program )Tj
T*
(doesn't check the error flag. Instead, it does its usual IF test on the \variable. Whatever code )Tj
T*
(the program executes from here is wrong, or is right only by luck. The v\alue stored in the )Tj
T*
(variable is junk. That's what the subroutine means when it sets the flag\. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to clear a flag)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A subroutine set its error flag the last time it was called. The flag is\ still set. This time the )Tj
T*
(subroutine does its task and leaves the error flag alone. The error flag\ is still set. The )Tj
T*
(program will believe this error flag, ignore the subroutine's output, an\d do error recovery )Tj
T*
(instead. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(MULTIPLE CASES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(An IF statement considers only two cases: an expression is either true o\r false. Commands )Tj
T*
(like CASE, SWITCH, SELECT, and computed GOTO are used when a variable mi\ght have )Tj
T*
(many different values and the programmer wants to do one of many differe\nt things )Tj
T*
(depending on the value. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(61\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj570 0 obj 2963endobj571 0 obj<</Length 570 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 741.77551 Tm
(The typical command of this type is equivalent to this: )Tj
0 -2.55714 TD
(IF VAR is 1 do TASK-1)Tj
0 -1.2 TD
(IF VAR is 2 do TASK-2)Tj
T*
(IF VAR is 3 do TASK-3)Tj
T*
(IF VAR is anything else, do DEFAULT-TASK )Tj
0 -2.55714 TD
(If there is no default case, the program falls through to the commands f\ollowing this multiple-)Tj
0 -1.2 TD
(choice block. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Missing default)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A programmer who thinks VAR can only take on the values listed may not w\rite a default )Tj
T*
(case. Because of a bug or later modifications to the code, VAR can take \on other values. A )Tj
T*
(default case could catch these, and print any unexpected value of VAR. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong default)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose the programmer expects VAR to have only four possible values. He\ explicitly deals )Tj
T*
(with the first three possibilities, and buries the other one as the "def\ault." Will this default be )Tj
T*
(correct for VAR's unanticipated fifth and sixth values? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Missing cases)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(VAR can take on five possible values but the programmer forgot to write \a CASE statement )Tj
T*
(covering the fifth case. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Case should be subdivided)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some cases cover too much: perhaps one case covers all values of VAR bel\ow 30, but the )Tj
T*
(program should do one thing if VAR is below 15 and something else for la\rger values. The )Tj
T*
(most common example of this problem is the default case. The programmer \doesn't think it )Tj
T*
(matters what happens if VAR has certain values, so he covers them all wi\th the default. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Overlapping cases)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The CASE statements are equivalent to this: )Tj
0 -2.55714 TD
(IF VAR > 5 then do TASK_1)Tj
0 -1.2 TD
(IF VAR > 7 then do TASK_2)Tj
T*
(etc. )Tj
0 -2.55714 TD
(The first and second cases overlap. If VAR is 9, it fits in both cases. \Which should be )Tj
0 -1.2 TD
(executed? The first task is the usual choice. Sometimes both are. Someti\mes the second one )Tj
T*
(is the correct choice. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(62\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj572 0 obj 3489endobj573 0 obj<</Length 572 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(Invalid or impossible cases)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program executes TASK_16 only if VAR < 6 AND VAR > 18. TASK_16 can n\ever run )Tj
T*
(because VAR can't meet this condition. Similarly, the program might spec\ify a value that )Tj
T*
(VAR can't reach in practice, even though it's not an impossible number. \You won't see this )Tj
T*
(type of problem unless you look at the code, but it wastes code space an\d may reflect fuzzy )Tj
T*
(thinking.   )Tj
ET
0.5 0.5 0.5 rg
108.45 637.20001 m
108.45 639.20001 l
503.54999 639.20001 l
502.54999 638.20001 l
109.45 638.20001 l
109.45 638.20001 l
h
f
0.875 0.875 0.875 rg
503.54999 639.20001 m
503.54999 637.20001 l
108.45 637.20001 l
109.45 638.20001 l
502.54999 638.20001 l
502.54999 638.20001 l
h
f
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 599.17554 Tm
(ERRORS IN HANDLING OR INTERPRETING DATA)Tj
/T1_0 1 Tf
( )Tj
0 -2.55714 TD
(Data are passed from one part of a program to another, and from one prog\ram to another. In )Tj
0 -1.2 TD
(the process, the data might be misinterpreted or corrupted. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(PROBLEMS WHEN PASSING DATA BETWEEN ROUTINES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program calls a subroutine and passes it data, perhaps like so: )Tj
0 -2.55714 TD
(DO SUB\(VAR_1, VAR_2, VAR_3\) )Tj
T*
(The three variables, VAR_1, VAR_2, and VAR_3 are passed from the program\ to the )Tj
0 -1.2 TD
(subroutine. They are called the subroutine's parameters. The subroutine \itself might refer to )Tj
T*
(these variables by different names. The statement at the start of the su\broutine definition )Tj
T*
(might look like this: )Tj
0 -2.55714 TD
(SUB\(INPUT_1, INPUT_2, INPUT_3\) )Tj
T*
(The subroutine receives the first variable in the list passed by the pro\gram \(VAR_1\) and )Tj
0 -1.2 TD
(calls it INPUT_1. It calls the second variable in the list \(VAR_2\) INP\UT_2. INPUT_3 is its )Tj
T*
(name for the last variable \(VAR_3\). )Tj
0 -2.55714 TD
(The program's and subroutine's definitions of these variables must match\. If VAR_1 is an )Tj
0 -1.2 TD
(integer, INPUT_1 should be as well. If VAR_2 is a floating point value f\or someone's )Tj
T*
(temperature, that's what the subroutine had better expect to find in INP\UT_2. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Parameter list variables out of order or missing)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If the program says DO SUB\(VAR_2, VAR_1, VAR_3\), the subroutine will a\ssociate )Tj
T*
(INPUT_1 with VAR_2, and INPUT_2 with VAR_1. Programmers routinely type t\he )Tj
T*
(variable names in the wrong order in these lists. )Tj
0 -2.55714 TD
(Missing parameters are less common in many, but not all, languages becau\se their compilers )Tj
0 -1.2 TD
(catch this problem. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(63\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj574 0 obj 3991endobj575 0 obj<</Length 574 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 752.77551 Tm
(Data type errors)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose the program defines VAR_1 and VAR_2 as two-byte integers but the\ subroutine )Tj
T*
(defines INPUT_1 and INPUT_2 as one-byte integers. What happens is langua\ge dependent, )Tj
T*
(but it would be no surprise if INPUT_1 got the first byte of VAR_1 and I\NPUT_2 got the )Tj
T*
(second byte. )Tj
0 -2.55714 TD
(The data type specifies how the data are stored. Integers, floating poin\ts, and character )Tj
0 -1.2 TD
(strings are simple examples. Arrays, records \(like a record in a databa\se, with fields\363see )Tj
T*
(Chapter 12\) and arrays of records are common examples of slightly more \complex data )Tj
T*
(structures. There are also stacks, trees, linked lists, and others. \(Se\e Elson, 1975, for )Tj
T*
(descriptions of these.\) )Tj
0 -2.55714 TD
(Sometimes a mismatch between the structure of data in the calling and ca\lled routines is )Tj
0 -1.2 TD
(deliberate. The calling program might pass a three-dimensional array whi\ch the subroutine )Tj
T*
(treats as a bigger one-dimensional array. The calling routine might pass\ an array of )Tj
T*
(characters to a subroutine that treats them as an array of numbers. Some\ languages ban this, )Tj
T*
(but it is standard form in others. As you can imagine, it can lead to a \big mess, especially )Tj
T*
(when the variable\(s\) being reinterpreted are part of a larger list. If\ the calling and called )Tj
T*
(routines differ in the amount of memory they expect these mismatched var\iables to use, )Tj
T*
(anything that comes after these in the parameter list might be misread. \)Tj
/T1_1 1 Tf
0 -2.55714 TD
(Aliases and shifting interpretations of the same area of memory)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If two different names refer to the same area of memory at the same time\, they are aliases. If )Tj
T*
(VAR_1 and FOO are aliases for each other, then if the program says SET F\OO = 20, VAR_1 )Tj
T*
(becomes 20. Some aliases are trickier. Suppose VAR_1 and VAR_2 are both \one-byte )Tj
T*
(integers and FOOVAR is a two-byte integer whose first \(high order\) byt\e just happens to be )Tj
T*
(VAR_1 and whose second byte is VAR_2. In this case, SET FOOVAR = 20 sets\ VAR_2 to )Tj
T*
(20 and VAR_1 to 0. )Tj
0 -2.55714 TD
(It is easy to forget an alias. Expect maintenance programmers to miss it\. In either case, the )Tj
0 -1.2 TD
(programmer will freely change one variable without realizing the effect \on the "other." This )Tj
T*
(can cause all sorts of unexpected results, even more so when the aliasin\g is more complex )Tj
T*
(than two variables with the same name. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Misunderstood data values)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program passes temperature in centigrade to a subroutine which inter\prets the value as )Tj
T*
(fahrenheit. The subroutine puts a 1 into an error flag to indicate that \the flag is clear. It uses -)Tj
T*
(1 to indicate a set flag. The program expects 0 for a clear flag and any\ other value if the flag )Tj
T*
(is set. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Inadequate error information)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The subroutine fails to set an error flag \(maybe there is no error flag\\). Or it does signal an )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(64\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj576 0 obj 3992endobj577 0 obj<</Length 576 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(error but doesn't say enough else for the calling program to decide how \to handle it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to clean up data on exception-handling exit)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The subroutine detects an error or a special case and exits quickly. Bef\ore it detected the )Tj
T*
(problem, it changed the values of variables passed to it. If possible, i\t should reset these to )Tj
T*
(their original values before returning to the calling program. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Outdated copies of data)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Two processes may keep their own copies of the same data. Two routines w\ithin the same )Tj
T*
(process might do the same. When the data change, both \(all\) copies hav\e to be updated. It's )Tj
T*
(common to find one process or routine working with an outdated copy of t\he data, because )Tj
T*
(another changed the data without indicating that it did so. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Related variables get out of synch)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(One variable is usually a multiple of another, but one was changed and t\he other was not )Tj
T*
(updated. In contrast to the outdated copy problem just described, which \is more likely a )Tj
T*
(problem between processes, this one is common within the same routine. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Local setting of global data)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Global variables are defined in the main program. Any subroutine can use\ them \363read their )Tj
T*
(values or change them. Subroutines' changes of a global variable are oft\en accidental. The )Tj
T*
(programmer thought that a second variable, local to the subroutine, had \this name and that )Tj
T*
(the change would be to that local variable. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Global use of local variables)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A variable is local to a subroutine if only that subroutine can use it. \Most languages )Tj
T*
(distinguish between global and local variables, but not all. In many BAS\ICs, for example, all )Tj
T*
(variables are global. In these, variables are kept local only by usage: \they appear only in one )Tj
T*
(subroutine. Especially if the variables are not carefully named, the pro\grammer might )Tj
T*
(unintentionally refer to a local variable in other places in the program\. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong mask in bit field)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(To save a few bytes and microseconds, some processes pass data in bit fi\elds. Each byte )Tj
T*
(might hold eight variables, with one bit assigned to each. Or, the proce\sses might use the )Tj
T*
(first two bits for one variable, the next three for a second, leaving on\e bit each for third, )Tj
T*
(fourth, and fifth variables. A mask is a bit pattern that allows the pro\grammer to focus only )Tj
T*
(on the bits of interest. It has 0's in the other bit positions. The prog\ram refers to these to zero )Tj
T*
(out the irrelevant bits in the bit field. If the mask has the wrong bits\ set, the program looks at )Tj
T*
(the wrong "variable." )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wrong value from a table)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Data are often organized in tables \(arrays or records\). Pointer variab\les indicate where in the )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(65\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj578 0 obj 4201endobj579 0 obj<</Length 578 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(table a value should be stored or retrieved. The program might look in t\he wrong place \(bad )Tj
0 -1.2 TD
(pointer\) or it might look in the right place but find an incorrect valu\e. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DATA BOUNDARIES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program may use the wrong starting or ending address of a set of dat\a. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Unterminated null terminated strings)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(STRING_VAR is a string variable. It can hold the string Hello or the str\ing I am a string )Tj
T*
(variable or a much longer string. The number of characters stored by a s\tring variable isn't )Tj
T*
(fixed, so there must be a way to indicate the end of the string. One app\roach puts a null )Tj
T*
(character \(all bits zero\) after the last character. This is called the\ string terminator. In )Tj
T*
(languages which use null terminators, all string handling routines look \for the null. )Tj
T*
(Occasionally, the null character is forgotten, overwritten, or just not \copied with the rest of )Tj
T*
(the string. A routine that works with this unterminated string, perhaps \copying or printing it, )Tj
T*
(will include the string and everything past what should be the string's \end until it reaches a )Tj
T*
(null or the end of the computer's memory. In copying the string to anoth\er variable, the )Tj
T*
(routine might fill the new variable's data space plus hundreds of bytes \past it, overwriting )Tj
T*
(other variables or code. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Early end of string)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(STRING_VAR is supposed to hold I am a string variable but a routine that\ operates on )Tj
T*
(STRING_VAR \(perhaps copying or printing it\), behaves as if it held I a\m a str. Perhaps a )Tj
T*
(null character was copied into the middle of the string. If string lengt\h is kept in a separate )Tj
T*
(byte \(the length byte\), perhaps this value was miscalculated or overwr\itten. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Read/write past end of a data structure, or an element in it)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(An array is a good enough example of a data structure for this descripti\on. The program )Tj
T*
(might miscalculate the length of each element and so err when it tries t\o read the value of a )Tj
T*
(specific element. In doing so, it might read a memory location well past\ the end of the array. )Tj
T*
(The routine will probably also overshoot the end of the array if it expe\cts the array to have )Tj
T*
(more elements than it does. This kind of error usually happens when one \routine sends the )Tj
T*
(array to another, and their definitions of the data stored in it don't m\atch. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(READ OUTSIDE THE LIMITS OF A MESSAGE BUFFER)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A buffer is an area of memory used for temporary storage. Messages betwe\en processes )Tj
T*
(often include buffers: the message includes a pointer to the start of th\e buffer and, in effect, )Tj
T*
(says "for more details, read this. " When the process receiving the mess\age is done with it, it )Tj
T*
("releases" the buffer which becomes "free memory" again, ready for other\ uses as needed by )Tj
T*
(the operating system. )Tj
0 -2.55714 TD
(The receiving routine might get the address or the length of the message\ buffer wrong. It )Tj
0 -1.2 TD
(could start reading memory locations that precede the start of the buffe\r or it could keep )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(66\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj580 0 obj 4067endobj581 0 obj<</Length 580 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(reading data out of locations past the buffer's end. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Compiler padding to word boundaries)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Depending on the computer, a word might be 12 bits, 1, 2, 3, or 4 bytes \long, or some other )Tj
T*
(length. A word is a computer's most natural unit of storage. Some compil\ers "pad" all one-)Tj
T*
(byte variables to make them a word long. For example, a variable whose v\alue was 255 now )Tj
T*
(has the value 00255: the leading zeros are padding. The variable takes m\ore space but keeps )Tj
T*
(the same value. Such a compiler might pad individual variables, individu\al elements of )Tj
T*
(arrays, or the full array itself, to ensure that variables \(or the arra\y\) have their first byte at the )Tj
T*
(start of a word. Another compiler for the same language might not do thi\s type of padding. )Tj
T*
(Some routines calculate how many bytes a piece of data should be from th\e start of a data )Tj
T*
(structure \(perhaps the start of a message buffer\). Such routines will \fail when the )Tj
T*
(programmer switches from a compiler that uses one set of padding rules t\o another compiler )Tj
T*
(whose rules are different. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Value stack under/overflow)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Earlier in the Appendix \("Control flow errors"\) we described stack pro\blems as they relate to )Tj
T*
(subroutine calls. The programmer might also store data on the stack. A s\tack that holds data )Tj
T*
(only, no\363return addresses\363is a value stack. )Tj
0 -2.55714 TD
(Suppose a stack can hold 256 bytes and the programmer tries to store 300\ bytes on it. The )Tj
0 -1.2 TD
(stack overflows: the last 256 bytes stored are usually kept, and the fir\st 44 values lost, )Tj
T*
(overwritten by the others. When the program tries to retrieve these data\ from the stack, it can )Tj
T*
(only get the last 256. When it tries to pop the 257th value off the stac\k \(the 44th pushed onto )Tj
T*
(the stack\) there is an underflow condition\363the program is trying to \retrieve a value from a )Tj
T*
(stack that is now empty. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Trampling another process' code or data)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(This is especially common when processes share areas of memory, rather t\han passing data )Tj
T*
(back and forth using messages. One process loses a null terminator from \a string or )Tj
T*
(miscalculates the length of a data structure or just runs amok. It write\s junk into areas of )Tj
T*
(memory that it shares with another process, or it writes into areas it c\an reach even though )Tj
T*
(they should be private to that other process. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(MESSAGING PROBLEMS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The safest way for two processes to communicate is via messages. If they\ pass data through )Tj
T*
(shared memory areas instead, a bug in one process can trash data used by\ both, no matter )Tj
T*
(how defensively the other process was written. The most prevalent proble\ms arising out of )Tj
T*
(messaging architectures are race conditions, which are discussed in the \next section. There )Tj
T*
(are also errors in sending and receiving the data in a message. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Messages sent to wrong process or port)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(67\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj582 0 obj 4079endobj583 0 obj<</Length 582 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(A message can go to the wrong place. Even if it goes to the right proces\s, that process may )Tj
0 -1.2 TD
(expect messages from this one to arrive only at certain ports \(think of\ ports as virtual )Tj
T*
(receiving areas\). Even a message that goes to the right process and por\t may carry an invalid )Tj
T*
(ID \(such as the name of the communication protocol in use between the p\rocesses\). In any of )Tj
T*
(these cases, the message will be rejected. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to validate an incoming message)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A process must check messages that it receives to make sure that they ar\e intended for it, that )Tj
T*
(they contain the right identifiers, etc. The process that sent this mess\age may have sent it to )Tj
T*
(the wrong place or it may be running amok. It is up to the receiving pro\cess to ensure that it )Tj
T*
(accepts and acts on no garbage. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Lost or out of synch messages)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(One process may send many messages to another, in a predictable order. S\ometimes, )Tj
T*
(however, a process will send MESSAGE_2 before MESSAGE_1. It might send a\ request to )Tj
T*
(write something to a disk file before sending a message that names the f\ile and requests that )Tj
T*
(it be opened. Messages can get out of order for hundreds of reasons; not\ all of them are bugs. )Tj
T*
(The receiving program should be able to cope with this, perhaps by savin\g MESSAGE_2 )Tj
T*
(until it gets MESSAGE_1, or by telling the other process that it discard\ed MESSAGE_2 )Tj
T*
(because it came out of order. )Tj
0 -2.55714 TD
(Mismatching state information is a common symptom of a failure to cope w\ith badly ordered )Tj
0 -1.2 TD
(messages. In the state table of one process, the disk file is open, the \printer is initialized, the )Tj
T*
(phone is offhook, etc. According to the other process, the disk file has\ not been opened, the )Tj
T*
(printer is not ready, and the phone is on hook. It doesn't matter which \process is right. The )Tj
T*
(mismatch causes all sorts of confusion. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Message sent to only N of N+1 processes)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose that many \(N+1\) processes keep private copies of the same data\, and update their )Tj
T*
(local databases when they get a message instructing them to do so. Or su\ppose that many )Tj
T*
(people are at their terminals, a separate control and communications pro\cess is assigned to )Tj
T*
(each terminal, and an urgent message is sent out, to be printed on each \screen, saying that the )Tj
T*
(system will go down in three minutes. Sometimes, one of the processes do\esn't get the )Tj
T*
(message. This is usually the most recently activated process or the one \most recently coded. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DATA STORAGE CORRUPTION)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The data are stored on disk, tape, punch cards, whatever. The process co\rrupts stored data by )Tj
T*
(putting bad values into these files. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Overwritten changes)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Imagine two processes working with the same data. Both read the data fro\m disk at about the )Tj
T*
(same time. One saves some changes. The second doesn't know anything abou\t changes made )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(68\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj584 0 obj 4112endobj585 0 obj<</Length 584 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(by the first. When it saves its changes, it overwrites the data saved by\ the first process. Some )Tj
0 -1.2 TD
(programs use field, record, or file locking to prevent processes from ch\anging fields, records, )Tj
T*
(or files that another process is changing. These locks are not always pr\esent, and they don't )Tj
T*
(always work. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Data entry not saved)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program asks for data, which you enter. For some reason, maybe becau\se the file is )Tj
T*
(locked, it doesn't succeed in storing your entries on disk. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Too much data for receiving process to handle)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The receiving process might not be able to cope with messages beyond a c\ertain length, or )Tj
T*
(with more than so many messages per minute. It might discard the excess,\ crash, or print )Tj
T*
(error messages. What it won't do is process the excess messages successf\ully. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Overwriting a file after an error exit or user abort)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You enter data but try to stop the program before it saves them. It save\s the new \(bad\) data )Tj
T*
(first, then stops.   )Tj
ET
0.5 0.5 0.5 rg
108.45 445.80002 m
108.45 447.80002 l
503.54999 447.80002 l
502.54999 446.80002 l
109.45 446.80002 l
109.45 446.80002 l
h
f
0.875 0.875 0.875 rg
503.54999 447.80002 m
503.54999 445.80002 l
108.45 445.80002 l
109.45 446.80002 l
502.54999 446.80002 l
502.54999 446.80002 l
h
f
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 407.77554 Tm
(RACE CONDITIONS)Tj
/T1_0 1 Tf
( )Tj
T*
(In the classic race, there are two possible events, call them EVENT_A an\d EVENT_B. Both )Tj
T*
(events will happen. The issue is which comes first. EVENT_A almost alway\s precedes )Tj
T*
(EVENT_B. There are logical grounds for expecting EVENT_A to precede EVEN\T_B. )Tj
T*
(However, under rare and restricted conditions, EVENT_B can "win the race\," and occur just )Tj
T*
(before EVENT_A. We have a race condition whenever EVENT_B precedes EVENT\_A. We )Tj
T*
(have a race condition bug if the program fails when this happens. Usuall\y the program fails )Tj
T*
(because the programmer didn't anticipate the possibility of EVENT_B prec\eding EVENT_A, )Tj
T*
(so he didn't write any code to deal with it. )Tj
0 -2.55714 TD
(Few testers look for race conditions. If they find an "irreproducible" b\ug, few think about )Tj
0 -1.2 TD
(timing issues \(races\) when trying to reproduce it. Many people find ti\ming issues hard to )Tj
T*
(conceptualize or hard to understand. We provide more than our usual amou\nt of detail in the )Tj
T*
(examples below, hoping that this will make the overall concept easier to\ understand. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(RACES IN UPDATING DATA)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Imagine that one routine reads a credit card balance from the disk, adds\ the amount of the )Tj
T*
(card holder's latest purchase, and writes the new balance back to the di\sk. A second routine )Tj
T*
(reads the same balance, subtracts the latest payment, and saves the resu\lt to disk. A third )Tj
T*
(routine adds foreign currency transactions. Each of these routines can r\un concurrently. Each )Tj
T*
(runs quickly, and there are many different card holders, so the followin\g scenario is most )Tj
T*
(unlikely: )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(69\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj586 0 obj 4103endobj587 0 obj<</Length 586 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 744.77551 Tm
(A credit card has a balance of $1000. The card holder has just made a pu\rchase for $100 and )Tj
0 -1.2 TD
(a payment of $500. The correct balance is thus $600. However, the first \routine reads the )Tj
T*
($1000 balance from the disk. While it adds the $100 purchase, the second\ routine reads the )Tj
T*
(same card holder's balance \(still $1000\). Then the first routine store\s the new balance )Tj
T*
(\($1100\) to disk. The second routine subtracts the $500 payment amount \from the $1000 )Tj
T*
(balance that it read from the disk. It saves the new balance \($500\) to\ disk. The $100 addition )Tj
T*
(made by the first routine has been completely lost because the second ro\utine read the )Tj
T*
(balance before the first routine had finished updating it. )Tj
0 -2.55714 TD
(This is a race condition: it should almost never happen that the second \routine will read the )Tj
0 -1.2 TD
(balance after the first routine has started changing it but before the f\irst routine finishes. )Tj
T*
(However, it can happen and occasionally it will. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(ASSUMPTION THAT ONE EVENT OR TASK HAS FINISHED BEFORE )Tj
0 -1.2 TD
(ANOTHER BEGINS)Tj
/T1_0 1 Tf
( )Tj
T*
(The previous and the next sections provide examples of this type of prob\lem. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(ASSUMPTION THAT INPUT WON'T OCCUR DURING A BRIEF PROCESSING )Tj
0 -1.2 TD
(INTERVAL)Tj
/T1_0 1 Tf
( )Tj
T*
(You type a character. The editing program you're testing receives it, mo\ves other displayed )Tj
T*
(characters around on the screen so it can display this one at the cursor\ location, echoes the )Tj
T*
(received character, then looks for your next input. Naturally, since the\ computer is faster )Tj
T*
(than the finger, the program should get everything done and be ready for\ the next input long )Tj
T*
(before you're ready to type it. Accordingly, the program doesn't allow f\or the possibility that )Tj
T*
(other characters will arrive before it's done with this one. However, a \fast typist might enter )Tj
T*
(two, three, or more characters before the editor is ready for them. The \editor catches the last )Tj
T*
(one typed and misses the others, which were typed while it was in the mi\ddle of dealing with )Tj
T*
(the first one. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(ASSUMPTION THAT INTERRUPTS WON'T OCCUR DURING A BRIEF )Tj
0 -1.2 TD
(INTERVAL)Tj
/T1_0 1 Tf
( )Tj
T*
(The program is doing time-critical operations, such as: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 179.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 179.37555 Tm
(writing bits to the right place on a spinning disk or a moving cassette \tape )Tj
/T1_2 1 Tf
7 0 0 7 68.313 162.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 162.57556 Tm
(getting a pen to draw at the right place on a moving sheet of paper )Tj
/T1_2 1 Tf
7 0 0 7 68.313 145.77556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 145.77556 Tm
(responding to a message or acknowledging input within a short time perio\d )Tj
-2.85715 -2.55714 Td
(The programmer realizes that these operations take very little time. Sin\ce it's so unlikely for )Tj
T*
(an interrupt-triggering event to happen in this brief interval, why take\ the time to block )Tj
T*
(interrupts during it? Usually all goes well, but every now and again the\ program will be )Tj
T*
(interrupted. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(70\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj588 0 obj 4244endobj589 0 obj<</Length 588 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.77551 Tm
(Failure to block interrupts was raised earlier \("Program runs amok: Int\errupts"\). There the )Tj
0 -1.2 TD
(focus was on the problems of interrupts. Here the point is one of timing\. Even if part of a )Tj
T*
(program is brief, if it lasts long enough that an interrupt-triggering e\vent can happen during )Tj
T*
(this interval, then some day an interrupt-triggering event will happen d\uring the interval. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(RESOURCE RACES: THE RESOURCE HAS JUST BECOME UNAVAILABLE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Two processes both need the same printer. The one that takes control of \the printer first gets )Tj
T*
(it. The other has to wait. Even though there's a "race" here, this is no\t a race condition in )Tj
T*
(concurrent systems. Programs are, or should be, written to expect the pr\inter \(or other )Tj
T*
(sharable resources\) to be temporarily unavailable. )Tj
0 -2.55714 TD
(Suppose, though, that one process checks whether a printer is available.\ If the printer is busy, )Tj
0 -1.2 TD
(the program does something else. If the printer is available, the progra\m starts to use it. Since )Tj
T*
(the program knows the printer is available, it doesn't consider the poss\ibility that the printer )Tj
T*
(is unavailable. )Tj
0 -2.55714 TD
(Unfortunately, there is a short window of vulnerability between the time\ that a process )Tj
0 -1.2 TD
(checks whether the printer is available and the time it takes the printe\r over. It takes a little )Tj
T*
(time to examine the variable that says that the printer is free, call th\e right routine when the )Tj
T*
(printer is available,find the data it's supposed to print, etc. During t\his short period, a second )Tj
T*
(routine might take over the printer and start printing. )Tj
0 -2.55714 TD
(Some programmers would argue that this is a rare event. They're right. T\he window of )Tj
0 -1.2 TD
(vulnerability is so small that it is hard to set up a situation in which\ the second process can )Tj
T*
(snatch away the printer just before the first one gets back to it. Howev\er, these processes )Tj
T*
(maybe run by customers thousands or millions of times. Even unlikely rac\e conditions will )Tj
T*
(occur in use. If the consequences of a race condition bug are severe eno\ugh, it must be fixed )Tj
T*
(even it will only happen once per million times that the program is used\. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(ASSUMPTION THAT A PERSON, DEVICE, OR PROCESS WILL RESPOND )Tj
0 -1.2 TD
(QUICKLY)Tj
/T1_0 1 Tf
( )Tj
T*
(For example, the program puts a message on the screen and waits for a re\sponse for a few )Tj
T*
(seconds. If you don't respond during this time-out interval, the program\ decides that you )Tj
T*
(aren't there and halts. Similarly, another program trying to initialize \a printer will wait only )Tj
T*
(so long. The program will report that the printer is unavailable if it d\oesn't respond by the )Tj
T*
(end of the time-out interval. Programs also impose time-outs while waiti\ng for messages )Tj
T*
(from other processes. )Tj
0 -2.55714 TD
(Very short time-out intervals cause races. If you have to press a key wi\thin a few tenths of a )Tj
0 -1.2 TD
(second after a program displays its message, you will often lose the rac\e, the program will )Tj
T*
(decide that you aren't there, and stop. If it gives you a few seconds, y\ou will usually win the )Tj
T*
(race, but sometimes the time-out interval will end just as you notice an\d respond to the )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(71\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj590 0 obj 4164endobj591 0 obj<</Length 590 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(message. If the program gives you minutes to respond, it is probably saf\e to assume that you )Tj
0 -1.2 TD
(are not there or are not going to respond. The intervals are different f\or device, or process )Tj
T*
(responses, but the principle is the same. Some intervals are too short, \some are just a little )Tj
T*
(too short, and some are plenty long enough. )Tj
0 -2.55714 TD
(If the interval is too short, the programmer has probably anticipated th\at the program will )Tj
0 -1.2 TD
(time out before the person, device or process has had a chance to comple\te its response. )Tj
T*
(Since this isn't an unusual case, he probably has good recovery code to \deal with this. This )Tj
T*
(isn't a classical race condition. )Tj
0 -2.55714 TD
(If the interval is just a little too short, the risks are higher. The pr\ogrammer might believe )Tj
0 -1.2 TD
(that if the program doesn't receive a response within the specified peri\od, it will never )Tj
T*
(receive a response. What happens if the response arrives milliseconds af\ter the time-out )Tj
T*
(interval has ended? The program might interpret this as a response to so\me other message, or )Tj
T*
(it might just crash. This is a classic race because it is unlikely, but \not impossible, for the )Tj
T*
(response to occur after the time-out period is over. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(OPTIONS OUT OF SYNCH DURING A DISPLAY CHANGE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The computer displays a menu and waits for your response. Triggered by a\ time-out or by )Tj
T*
(another event \(a message or a device input\), the program switches to a\nother menu. You )Tj
T*
(press a key just as the program is writing the new menu. Here are two po\ssible errors: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 375.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 375.57556 Tm
(Even though it's displaying the new options, the program will interpret \your keypress )Tj
T*
(as selecting a choice from the old menu if it hasn't yet updated its lis\t of choices )Tj
T*
(associated with keystrokes. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 325.17554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 325.17554 Tm
(Even though it's displaying the old options, the program will interpret \your keypress )Tj
T*
(as selecting a choice from the new menu, because it updated its key-to-o\ption list )Tj
T*
(before displaying the new values onscreen. )Tj
-2.85715 -2.55714 Td
(This is a real-user problem. Experienced users of a program know when th\e menu will )Tj
T*
(change. Many make their responses as soon as possible, so they will freq\uently press a key )Tj
T*
(just as the screen is being repainted. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(TASK STARTS BEFORE ITS PREREQUISITES ARE MET)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program starts sending data to the printer just before the printer i\s ready, starts trying to )Tj
T*
(fill memory with data just before it's assigned a memory area to work wi\th, etc. Perhaps the )Tj
T*
(program is supposed to wait until it receives a specific message from an\other process before )Tj
T*
(starting the task. But based on other information \(such as other messag\es\), the programmer )Tj
T*
(knows that the trigger message will come soon. He starts this task early\, to improve )Tj
T*
(performance. The prerequisite tasks are usually completed in time, but o\ccasionally the )Tj
T*
(program is just barely ahead of them. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(72\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj592 0 obj 4034endobj593 0 obj<</Length 592 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(MESSAGES CROSS OR DON'T ARRIVE IN THE ORDER SENT)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose you have $1000 in a bank account, and you try to do three things\, in order: )Tj
0 -2.55714 TD
(\(a\) withdraw $1000)Tj
0 -1.2 TD
(\(b\) deposit $500)Tj
T*
(\(c\) withdraw $100)Tj
0 -2.55714 TD
(The first withdrawal goes through. The deposit is accepted, but when you\ try withdraw the )Tj
0 -1.2 TD
($100, you're told that your account's balance is zero, not $500. For som\e reason, your deposit )Tj
T*
(has taken longer to process than your request for a withdrawal. )Tj
0 -2.55714 TD
(Problems of this class are common in message-passing systems: some messa\ges are )Tj
0 -1.2 TD
(transmitted along circuitous routes, or their contents have to be verifi\ed, or for some other )Tj
T*
(reason they don't arrive at their target process or aren't read by it be\fore another message that )Tj
T*
(was sent later. As a result, until the system catches up, you aren't \(a\re\) able to do something )Tj
T*
(that you should \(shouldn't\) be able to do. )Tj
0 -2.55714 TD
(The most annoying version of this involves contradictory messages that c\ross each other's )Tj
0 -1.2 TD
(path. One process requests an action of another. The second process send\s a message )Tj
T*
(indicating that it can do that task \(e.g., gives a receipt for the $500\\), but then sends a )Tj
T*
(message saying that it can't \(your balance is zero\). The verification \message that you )Tj
T*
(deposited $500 reaches you and the central database at the same time, an\d just after your )Tj
T*
(request for $100 reaches the database. To the database, it seemed that y\ou asked for $100, )Tj
T*
(then deposited $500, but because you received early verification, it see\ms to you that the )Tj
T*
(database should have known about the $500 when it rejected the withdrawa\l.   )Tj
ET
0.5 0.5 0.5 rg
108.45 309.20001 m
108.45 311.20001 l
503.54999 311.20001 l
502.54999 310.20001 l
109.45 310.20001 l
109.45 310.20001 l
h
f
0.875 0.875 0.875 rg
503.54999 311.20001 m
503.54999 309.20001 l
108.45 309.20001 l
109.45 310.20001 l
502.54999 310.20001 l
502.54999 310.20001 l
h
f
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 271.17554 Tm
(LOAD CONDITIONS)Tj
/T1_0 1 Tf
( )Tj
T*
(Programs misbehave when overloaded. A program may fail when working unde\r high )Tj
T*
(volume \(lots of work over a long period\) or under stress \(maximum amo\unt of work all at )Tj
T*
(once\). It may fail when it runs out of memory, printers or other "resou\rces." It may fail )Tj
T*
(because it's required to do too much in too little time. All programs ha\ve limits. The issues )Tj
T*
(are whether a program can meet its stated limits and how horribly it fai\ls when those limits )Tj
T*
(are exceeded. )Tj
0 -2.55714 TD
(Also, some programs create their own load problems, or, in multi-process\ing situations, )Tj
0 -1.2 TD
(make problems for others. They hog computer time or resources or create \unnecessary extra )Tj
T*
(work to such an extent that other processes \(or themselves later\) can'\t do their tasks. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(REQUIRED RESOURCE NOT AVAILABLE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program tries to use a new device or store more data in memory, but \can't. Run separate )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(73\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj594 0 obj 4334endobj595 0 obj<</Length 594 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(tests run for the program's handling of each of the conditions below, an\d similar tests for any )Tj
0 -1.2 TD
(other device you use \(plotters, telephones, etc.\). The following condi\tions should be self-)Tj
T*
(explanatory: )Tj
/T1_1 1 Tf
7 0 0 7 68.313 684.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 684.57556 Tm
(Full disk )Tj
/T1_1 1 Tf
7 0 0 7 68.313 667.77551 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 667.77551 Tm
(Full disk directory )Tj
/T1_1 1 Tf
7 0 0 7 68.313 650.97552 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 650.97552 Tm
(Full memory area )Tj
/T1_1 1 Tf
7 0 0 7 68.313 634.17554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 634.17554 Tm
(Full print queue )Tj
/T1_1 1 Tf
7 0 0 7 68.313 617.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 617.37555 Tm
(Full message queue )Tj
/T1_1 1 Tf
7 0 0 7 68.313 600.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 600.57556 Tm
(Full stack )Tj
/T1_1 1 Tf
7 0 0 7 68.313 583.77557 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 583.77557 Tm
(Disk not in drive )Tj
/T1_1 1 Tf
7 0 0 7 68.313 566.97552 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 566.97552 Tm
(Disk drive out of service )Tj
/T1_1 1 Tf
7 0 0 7 68.313 550.17554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 550.17554 Tm
(No disk drive )Tj
/T1_1 1 Tf
7 0 0 7 68.313 533.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 533.37555 Tm
(Printer off line )Tj
/T1_1 1 Tf
7 0 0 7 68.313 516.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 516.57556 Tm
(Printer out of paper )Tj
/T1_1 1 Tf
7 0 0 7 68.313 499.77554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 499.77554 Tm
(Printer out of ribbon )Tj
/T1_1 1 Tf
7 0 0 7 68.313 482.97556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 482.97556 Tm
(No printer )Tj
/T1_1 1 Tf
7 0 0 7 68.313 466.17554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 466.17554 Tm
(Extended memory not present )Tj
/T1_2 1 Tf
-2.85715 -2.55714 Td
(DOESN'T RETURN A RESOURCE)Tj
/T1_0 1 Tf
( )Tj
T*
(Systems may run out of resources because one or a few processes hog them\ all. )Tj
T*
(Programmers are good at making sure that their programs get the resource\s they need. They )Tj
T*
(are not as conscientious about returning resources they no longer need. \Since the program )Tj
T*
(won't crash \(usually\) if it hangs on to the printer or a memory buffer\ for too long, this type of )Tj
T*
(problem seems less urgent. )Tj
0 -2.55714 TD
(The following sections are examples to consider when designing test case\s. )Tj
/T1_2 1 Tf
T*
(Doesn't indicate that it's done with a device)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(For example, a process uses the printer. All other processes have to wai\t until this one )Tj
T*
(signals that it's done. The process fails to send that signal, and so pr\events others from using )Tj
T*
(an unused device. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Doesn't erase old files from mass storage)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program doesn't erase outdated backups and internal-use temporary fi\les. There are )Tj
T*
(limits on how much erasure should be done automatically, but the process\ doesn't get rid of )Tj
T*
(files that obviously should go. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Doesn't return unused memory)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(In multi-processing systems, a memory management process can assign segm\ents of )Tj
T*
(memory to processes on a temporary basis \(such as data and message buff\ers\). The process )Tj
T*
(is supposed to signal the memory manager when done with a segment. The m\anager takes )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(74\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj596 0 obj 3931endobj597 0 obj<</Length 596 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(back control of the segment and assigns it for use by other processes as\ needed. Failure to )Tj
0 -1.2 TD
(return buffers, especially message buffers, is extremely common. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Wastes computer time)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The process checks for events that are no longer possible or does other \things that used to be )Tj
T*
(necessary but now aren't. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(NO AVAILABLE LARGE MEMORY AREAS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(In a message passing, multi-processing system, a pool of memory is avail\able to be assigned )Tj
T*
(as message buffers to any process. Some buffers are large, others just a\ few bytes. A large )Tj
T*
(block of memory might be divided into many small buffers. What happens w\hen the )Tj
T*
(program needs a larger block of memory than any of these small ones? )Tj
0 -2.55714 TD
(Some memory management programs don't attempt to merge used buffers into\ the memory )Tj
0 -1.2 TD
(pool. Instead, they reuse these old buffers whenever a buffer their size\ is needed. As a result, )Tj
T*
(there are few large areas of memory in the common pool. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(INPUT BUFFER OR QUEUE NOT DEEP ENOUGH)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The process loses keystrokes, messages, or other data because too much c\omes at once and )Tj
T*
(there's nowhere to put it all. When a process receives more individual d\ata items \(like )Tj
T*
(keystrokes\) than it can immediately handle, it usually stores the extra\s in an input buffer, )Tj
T*
(reading them from the buffer and dealing with them when it has time. Sim\ilarly, it might )Tj
T*
(store packets of information \(like messages\) in a queue, getting to th\em one at a time. )Tj
0 -2.55714 TD
(If the process' input buffer is 10 characters deep, what happens if you \type 11 \(or more\) )Tj
0 -1.2 TD
(characters quickly? Does it signal that the buffer is full? What if the \device sending input is a )Tj
T*
(computer, connected to a modem? Does the program tell the sending progra\m to stop for a )Tj
T*
(while? )Tj
0 -2.55714 TD
(If the process' message queue is 256 messages deep, what happens when 25\6 messages are )Tj
0 -1.2 TD
(waiting, one is being processed, and the 257th arrives? Is it discarded \or is it returned to the )Tj
T*
(sender with an error code signaling that the message queue is full? If a\ few messages are )Tj
T*
(discarded without notification, what is the most consequential message d\iscarded? What )Tj
T*
(important information has the receiving process lost that the sending pr\ocess will assume )Tj
T*
(was received? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DOESN'T CLEAR ITEMS FROM QUEUE, BUFFER, OR STACK)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Suppose the program receives messages, puts them in a queue, and reads t\hem from the )Tj
T*
(queue when it has time. It can store up to 256 messages in the queue. Wh\en it reads a )Tj
T*
(message, the process should remove it from the queue, making room for a \new one. )Tj
T*
(However, programmers may forget to remove debugging messages, so the que\ue fills as )Tj
T*
(soon as the program tries to use the queue for the 257th time. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(75\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj598 0 obj 4312endobj599 0 obj<</Length 598 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 743.97552 Tm
(In more subtle cases \(similarly for failures to return buffers\), messa\ges are usually but not )Tj
0 -1.2 TD
(always removed from the queue. In one special case, the program doesn't \discard old )Tj
T*
(messages. It fails on the 257th time that this bug is triggered. It's be\cause of these kinds of )Tj
T*
(errors that you should occasionally test a program for a long time witho\ut rebooting it. Make )Tj
T*
(sure that a minor problem, invisible over short periods, doesn't eventua\lly devastate the )Tj
T*
(system. A "long time" is defined in terms of your customers' needs. They\ will restart a word )Tj
T*
(processor much more often than a telephone system. You might test the wo\rd processor for )Tj
T*
(hours before rebooting, the telephones for weeks or months. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(LOST MESSAGES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The operating system might lose some messages \(presto, vanish\). Or the\ receiving process )Tj
T*
(might, if enough messages arrive at once. If a process is supposed to be\ able to handle a )Tj
T*
(queue of 256 messages, what happens to the message it's working on, the \message at the start )Tj
T*
(of the queue, and the one at the end, when the 256th message arrives? Wh\at happens with the )Tj
T*
(257th, 258th, and 259th messages? Are they returned to the sending proce\ss with a "send-me-)Tj
T*
(again-later" notification or are they just thrown away? Does the sending\ process need to )Tj
T*
(know that the process it sent a message to was too busy to read it? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(PERFORMANCE COSTS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(When the workload is high, everything slows down. Larger arrays have to \be searched, more )Tj
T*
(users or processes have to be served, etc. A program that must respond w\ithin a certain time )Tj
T*
(or process so many events per second might fail because it's running und\er too busy a multi-)Tj
T*
(processing system or because it's trying to juggle too many inputs itsel\f. Other programs, )Tj
T*
(expecting that this one will respond within a short interval, might also\ fail if this one )Tj
T*
(responds too slowly. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(RACE CONDITION WINDOWS EXPAND)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(As performance gets worse, race conditions become more likely. In the cl\assic race, two )Tj
T*
(events can happen. One almost always precedes the other but sometimes th\e second will \(or )Tj
T*
(will appear to\) precede the first by a tiny bit. As you slow the system\ down, it may take the )Tj
T*
(computer longer to generate or detect the first event. If the second eve\nt is an input )Tj
T*
(\(keystroke or modem input\), the person or machine that generates it ma\y not be affected by )Tj
T*
(the increased load. The second event will happen as quickly as usual eve\n though the )Tj
T*
(processing of the first has slowed. Thus there is more time for the seco\nd event to appear to )Tj
T*
(beat the first. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DOESN'T ABBREVIATE UNDER LOAD)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some processes make lots of output. Formatting all this information and \sending it to the )Tj
T*
(printer or screen takes lots of computer time. When the computer is oper\ating under heavy )Tj
T*
(load, an output-intensive process should try to send out less. It might \express error messages )Tj
T*
(more tersely, or abbreviate system log messages to short codes or send t\hem to a buffer or )Tj
T*
(disk file to be printed later. Only urgent messages should go to the pri\nter or screen )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(76\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj600 0 obj 3899endobj601 0 obj<</Length 600 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(immediately. )Tj
0 -2.55714 TD
(Use your judgment before criticizing a program that doesn't abbreviate o\r run at lower )Tj
0 -1.2 TD
(priority. A word processing program that is about to print the agenda fo\r a board meeting )Tj
T*
(that starts in three minutes should neither delete items from the agenda\ nor wait till )Tj
T*
(tomorrow before printing it. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DOESN'T RECOGNIZE THAT ANOTHER PROCESS ABBREVIATES OUTPUT )Tj
0 -1.2 TD
(UNDER LOAD)Tj
/T1_0 1 Tf
( )Tj
T*
(Imagine a multi-user system in which all programs log failures and other\ "interesting" events )Tj
T*
(to the system operator's console. Usually, the log messages include a fe\w numbers plus )Tj
T*
(English-language descriptions. Under heavy load, the messages are abbrev\iated to short )Tj
T*
(numeric codes. No one can understand the codes without looking them up i\n a book, but at )Tj
T*
(least the messages themselves don't further slow down the system. )Tj
0 -2.55714 TD
(Now suppose these logs are stored on disk. At the end of every day \(wee\k, month\), a )Tj
0 -1.2 TD
(maintenance program reads the files and analyzes the system's failures, \perhaps running )Tj
T*
(hardware diagnostics in response to some of the messages. This maintenan\ce program will )Tj
T*
(have to be able to cope with the short code abbreviation system, or it w\ill fail whenever it )Tj
T*
(has to read a message that was saved when the system was under heavy loa\d. A dismaying )Tj
T*
(number of analysis programs do not know how to deal with abbreviated out\put. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(LOW PRIORITY TASKS NOT PUT OFF)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Under heavy load, any task that doesn't have to be done immediately shou\ld be postponed. In )Tj
T*
(a multi-processing system, programs or people are assigned priorities. T\hose with higher )Tj
T*
(priorities should get a higher share of available machine time than thos\e with lower )Tj
T*
(priorities. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(LOW PRIORITY TASKS NEVER DONE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You can put off changing the oil in your car for a while, but eventually\ it must be done or )Tj
T*
(else. Many low priority tasks are like this: you don't have to do them r\ight away, but they )Tj
T*
(must be done eventually. High priority tasks cannot be allowed to use al\l of the computer's )Tj
T*
(time under prolonged periods of heavy load. Some time must be given to l\ower priority )Tj
T*
(tasks.   )Tj
ET
0.5 0.5 0.5 rg
108.45 155.8 m
108.45 157.8 l
503.54999 157.8 l
502.54999 156.8 l
109.45 156.8 l
109.45 156.8 l
h
f
0.875 0.875 0.875 rg
503.54999 157.8 m
503.54999 155.8 l
108.45 155.8 l
109.45 156.8 l
502.54999 156.8 l
502.54999 156.8 l
h
f
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 117.77556 Tm
(HARDWARE)Tj
/T1_0 1 Tf
( )Tj
T*
(Programs send bad data to devices, ignore error codes coming back, try t\o use devices that )Tj
T*
(aren't there, and so on. Even if the problem is truly due to a hardware \failure, there is also a )Tj
T*
(software error if the software doesn't recognize that the hardware is no\ longer working )Tj
T*
(correctly. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(77\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj602 0 obj 3709endobj603 0 obj<</Length 602 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 744.77551 Tm
(WRONG DEVICE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(For example, the program prints data on the screen instead of the printe\r. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(WRONG DEVICE ADDRESS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(In many systems, a program writes data to a device by writing them to on\e or a few )Tj
T*
(addresses in memory. The physical copying of data from these special mem\ory locations to )Tj
T*
(the devices themselves is taken care of by hardware. The program might w\rite the data to the )Tj
T*
(wrong memory location\(s\). )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DEVICE UNAVAILABLE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(See "Required resource not available" earlier in this Appendix. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DEVICE RETURNED TO WRONG TYPE OF POOL)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(For example, in a multi-processing system there might be many dot matrix\ printers and many )Tj
T*
(laser printers. A program uses a dot matrix printer, then signals that i\t's done with it. On )Tj
T*
(returning it to the pool of available devices, the resource manager erro\neously marks it as an )Tj
T*
(available laser printer. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DEVICE USE FORBIDDEN TO CALLER)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(For example, you might not be allowed to use this expensive or delicate \device. Programs )Tj
T*
(running under your user ID can't use the device and must be able to reco\ver from the refusal. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(SPECIFIES WRONG PRIVILEGE LEVEL FOR A DEVICE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(To use a device \(for example, to read a certain file or to place a long\ distance phone call\), the )Tj
T*
(program must supply a code that indicates its privilege level \(often th\e privilege level of the )Tj
T*
(person using the program.\) If its privilege level \(or priority\) is hi\gh enough, the program gets )Tj
T*
(the device. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(NOISY CHANNEL)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program starts using a device, such as a printer or a modem. A commu\nication channel )Tj
T*
(links the computer and the connected device. Electrical interference, ti\ming problems or )Tj
T*
(other oddities might cause imperfect transmission of information over th\e channel \(we.e., the )Tj
T*
(computer sends a 3 but the device receives a 1\). How does the program d\etect transmission )Tj
T*
(errors? What does it do to signal or correct them? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(CHANNEL GOES DOWN)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The computer is sending data through one modem across a telephone line t\o another )Tj
T*
(computer \(and modem\). One of the modems is unplugged halfway through t\he transmission. )Tj
T*
(How do the sending and receiving computers recognize that they are no lo\nger connected, )Tj
T*
(how long does it take them, and what do they do about it? Similarly, how\ does a computer )Tj
T*
(recognize that it's connected to a no-longer-printing printer, and what \does it do about it? )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(78\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj604 0 obj 3877endobj605 0 obj<</Length 604 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 751.57556 Tm
(TIME-OUT PROBLEMS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program sends a signal to a device and expects a response within a r\easonable time. If it )Tj
T*
(gets no response, eventually the program must give up, deciding perhaps \that the connected )Tj
T*
(device is broken. What if it just didn't wait long enough? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(WRONG STORAGE DEVICE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program looks for data or a code overlay on the wrong floppy disk, r\emovable hard disk, )Tj
T*
(cartridge, or tape reel. Some programs announce that the information isn\'t there, then ask you )Tj
T*
(to insert the right disk. Some look for the information on other drives \first, then ask. Others )Tj
T*
(just die. In one particularly feisty operating system, programs could de\stroy a floppy disk's )Tj
T*
(directory while looking for a file that wasn't there. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DOESN'T CHECK DIRECTORY OF CURRENT DISK)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Insert one disk \(hard disk pack, tape\), work with it, then remove it a\nd insert a different one )Tj
T*
(into the same drive. Some operating systems don't detect the swap. They \copy the directory )Tj
T*
(of a disk into memory and don't read it again from the disk unless you e\xplicitly tell them to. )Tj
T*
(If you don't force a reboot or a directory reread, they'll use the old d\irectory when trying to )Tj
T*
(read or write to the new disk, reading gibberish and destroying the new \disk's data when they )Tj
T*
(write. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DOESN'T CLOSE A FILE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(When the program finishes with a file \(especially if it's been writing \to the file\), it should )Tj
T*
(close the file. Otherwise, changes made to the file during this session \might not be saved on )Tj
T*
(disk, or further changes may be added inadvertently. Open files can be d\estroyed or )Tj
T*
(corrupted when you turn the machine off. Programs should close all open \files as part of )Tj
T*
(their exit procedures. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(UNEXPECTED END OF FILE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(While reading a file, the program reaches the end-of-file marker. Suppos\e the program )Tj
T*
(expects to find specific data later in the file. Does it ignore the end-\of-file and try to keep )Tj
T*
(reading? Does it crash? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DISK SECTOR BUGS AND OTHER LENGTH-DEPENDENT ERRORS)Tj
/T1_0 1 Tf
( )Tj
T*
(Disk storage is done in chunks \(sectors\) of perhaps 256 or 512 bytes. \Many other values, )Tj
0 -1.2 TD
(usually powers of 2, are common. Some programs fail when they try to sav\e or read a file )Tj
T*
(that is an exact multiple of a sector size. For example, if sectors are \1024 bytes, a program )Tj
T*
(might be unable to save files that are 1024, 2048, 3072, etc., bytes lon\g. \(Similarly, a )Tj
T*
(program that copies data to an output buffer of a fixed size might fail \if the number of bytes )Tj
T*
(to go is the same size as the buffer.\) )Tj
0 -2.55714 TD
(The last character of each sector, or only the last character of the fil\e, might be miscopied, )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(79\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj606 0 obj 2064endobj607 0 obj<</Length 606 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97556 Tm
(Up to a third of the fixes either won't work or will cause other problem\s. Further, some )Tj
0 -1.2 TD
(programmers only address the exact, reported symptoms. Instead of invest\igating the causes )Tj
T*
(of a problem, they write special-case code to handle the precise circums\tances reported. If )Tj
T*
(you skimp on regression testing, you will assuredly miss bugs. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to check for unresolved problems just before release)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Just before the product is released for use or sale, check for problems \that are neither fixed )Tj
T*
(nor deferred. It's good practice, which we recommend highly, to make sur\e that all Problem )Tj
T*
(Reports are resolved one way or another before the product is released. \At a minimum, make )Tj
T*
(sure no one's sitting on anything serious. This is your last chance to r\emind people of serious )Tj
T*
(bugs.   )Tj
0 -2.55714 TD
(  )Tj
ET
0 0 1 RG
0.7056 w 10 M 0 j 0 J []0 d 
42.60001 510.05876 m
116.492 510.05876 l
S
0 0 1 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 512.17555 Tm
(Return to top)Tj
0 0 0 rg
( )Tj
0 -2.7 TD
(Testing Computer Software)Tj
0 -1.2 TD
(Second Edition )Tj
0 -2.55714 TD
(APPENDIX: COMMON SOFTWARE ERRORS )Tj
0 -2.55714 TD
(  )Tj
0 -2.55714 TD
(  )Tj
T*
(  )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(89\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj608 0 obj 3796endobj609 0 obj<</Length 608 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(copied twice, or dropped. In more extreme cases, the program corrupts th\e entire file or )Tj
0 -1.2 TD
(overwrites the next file on disk. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(WRONG OPERATION OR INSTRUCTION CODES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program sends a command to the terminal that is supposed to repositi\on the cursor )Tj
T*
(onscreen but it turns on inverse video display mode instead. The program\ sends a command )Tj
T*
(to the printer to do a form feed, but the printer line feeds instead. )Tj
0 -2.55714 TD
(Devices are not standardized. Two printers probably require two differen\t commands to do )Tj
0 -1.2 TD
(the same thing. Similarly for terminals, plotters, and A/D converters. T\he program must )Tj
T*
(issue the right command for this device to get the right task done. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(MISUNDERSTOOD STATUS OR RETURN CODE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program sends a command to the printer telling it to turn on boldfac\ing. The printer may )Tj
T*
(respond, saying it can or can't do this. It may indicate why it can't ca\rry out the command \(e.)Tj
T*
(g., no paper, no ribbon, no such command, option module not installed.\)\. Many programs )Tj
T*
(ignore these codes, or compare them against a list of codes written for \the wrong machine or )Tj
T*
(compiled years ago. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(DEVICE PROTOCOL ERROR)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The communication protocol between the computer and a device or between \two computers )Tj
T*
(specifies such things as when the computer can send data, at what speed,\ and with what )Tj
T*
(characteristics \(parity, stop bits, etc.\). It also specifies whether a\nd how the receiving device )Tj
T*
(will signal that it got the data, that it's ready for more, or that it c\an't take any more until it )Tj
T*
(clears some of the buffer that it's working with. )Tj
0 -2.55714 TD
(A device might send data or respond out of turn, or it might send the da\ta in the wrong )Tj
0 -1.2 TD
(format. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(UNDERUTILIZES DEVICE INTELLIGENCE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(As a simple example, if the printer can print boldface text directly, wh\y try to simulate )Tj
T*
(boldface by printing on top of the same character three or four times? O\ne possible answer is )Tj
T*
(that the program was designed with less capable printers in mind, and ha\s not been updated )Tj
T*
(to take advantage of this printer's features. )Tj
0 -2.55714 TD
(A connected device might be able to define its own fonts, detect its own\ error states, etc., but )Tj
0 -1.2 TD
(the program using the device must recognize this or it won't make any us\e of these advanced )Tj
T*
(capabilities. )Tj
0 -2.55714 TD
(This can be a touchy issue. Printers' control codes differ by so much th\at it is very expensive )Tj
0 -1.2 TD
(to try to support all the built-in features of every printer. Some print\er manufacturers have )Tj
T*
(made this problem even more complex by including certain control codes i\n one ROM )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(80\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj610 0 obj 3906endobj611 0 obj<</Length 610 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(version for a printer, but including different codes in other ROMS, plug\ged into the same )Tj
0 -1.2 TD
(\(from appearance and model number\) printer. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(PAGING MECHANISM IGNORED OR MISUNDERSTOOD)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(This is a memory storage issue. Memory might be divided into sections ca\lled pages. A )Tj
T*
(program might not be able to read from all pages at once or switch pages\ \(or memory banks\) )Tj
T*
(correctly. )Tj
0 -2.55714 TD
(Larger computers use disk storage as virtual memory. The program refers \to data without )Tj
0 -1.2 TD
(knowing whether they reside in memory or on disk. If the program referen\ces a nonresident )Tj
T*
(set of data or code, a page fault has occurred. The computer fetches the\ page containing this )Tj
T*
(information from disk automatically, overwriting data that were resident\. The operating )Tj
T*
(system usually takes care of paging \(swapping data and code between mai\n memory and a )Tj
T*
(disk\), but a few programs try to do it themselves. A program might over\write a memory area )Tj
T*
(without first saving new data that were stored there. )Tj
0 -2.55714 TD
(A program that thrashes is constantly generating page faults: the comput\er spends more time )Tj
0 -1.2 TD
(moving data in and out of main memory than it does executing the program\. With a little )Tj
T*
(reorganization of the code or the data, many programs can avoid thrashin\g. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(IGNORES CHANNEL THROUGHPUT LIMITS)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Examples: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 356.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 356.57556 Tm
(The program tries to send 100 characters per second across a connection \that only )Tj
T*
(supports transmission of up to 10 characters per second. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 322.97556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 322.97556 Tm
(The program can send data at a fast rate until the connected device's in\put buffer is )Tj
T*
(full. Then it has to stop until the device makes more room in its input \buffer. Some )Tj
T*
(programs don't recognize signals that the device is no longer ready to r\eceive more )Tj
T*
(data. )Tj
/T1_1 1 Tf
-2.85715 -2.55714 Td
(ASSUMES DEVICE IS OR ISN'T, OR SHOULD BE OR SHOULDN'T BE )Tj
T*
(INITIALIZED)Tj
/T1_0 1 Tf
( )Tj
T*
(Before sending text to the printer, a word processing program sends an i\nitialization message )Tj
T*
(telling the printer to print ten characters per inch in a certain font, \without making them bold )Tj
T*
(or italicized. Should it have sent this message? This wastes time if the\ printer was already )Tj
T*
(initialized. It is irritating if you deliberately initialized the printe\r to a different setting before )Tj
T*
(trying to print the file. On the other hand, if the printer is set to an\ unsuitable font, the )Tj
T*
(printout will be unsatisfactory and the failure to initialize will have \wasted time and paper. )Tj
T*
(Which error is more serious? )Tj
/T1_1 1 Tf
0 -2.55714 TD
(ASSUMES PROGRAMMABLE FUNCTION KEYS ARE PROGRAMMED )Tj
0 -1.2 TD
(CORRECTLY)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(81\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj612 0 obj 4062endobj613 0 obj<</Length 612 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(A programmable function key might be able to generate any code or any re\asonably short )Tj
0 -1.2 TD
(sequence of codes when pressed. The program might expect these keys to g\enerate specific )Tj
T*
(codes, but if you can reprogram the keys, the program might be wrong. Fo\r example, )Tj
T*
(suppose that function key normally generates . A program says Press PF-1\ to Print. It )Tj
T*
(switches to its Print Menu when it receives . What if you reprogram so t\hat it generates )Tj
T*
(instead? Press PF-1 to Print is no longer true. )Tj
0 -2.55714 TD
(If the program relies on the assignment of special values to programmabl\e function keys, )Tj
0 -1.2 TD
(when it starts it has to make sure that those keys have been assigned th\ose values.   )Tj
ET
0.5 0.5 0.5 rg
108.45 584.59998 m
108.45 586.59998 l
503.54999 586.59998 l
502.54999 585.59998 l
109.45 585.59998 l
109.45 585.59998 l
h
f
0.875 0.875 0.875 rg
503.54999 586.59998 m
503.54999 584.59998 l
108.45 584.59998 l
109.45 585.59998 l
502.54999 585.59998 l
502.54999 585.59998 l
h
f
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 546.57556 Tm
(SOURCE, VERSION, AND ID CONTROL)Tj
/T1_0 1 Tf
( )Tj
T*
(If you're supposed to have Version 2.43 of the program, but some of the \pieces you have are )Tj
T*
(from 2.42 and others are advance bits of 2.44, you have a mess. You must\ know what you )Tj
T*
(have, you must be able to tell from the code what you have, and what you\ have must be what )Tj
T*
(you're supposed to have. If not, report a bug. )Tj
0 -2.55714 TD
(Some people calls these Bureaucracy Bugs because they reflect failures o\f labeling and )Tj
0 -1.2 TD
(procedure rather than operational failures. Only bureaucrats would worry\ about such things, )Tj
T*
(right? Wrong. Or maybe right, but so what? They must be worried about\363\otherwise the )Tj
T*
(products shipped to customers will not be what you think. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(OLD BUGS MYSTERIOUSLY REAPPEAR)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Old problems can reappear simply because the programmer linked an old ve\rsion of one )Tj
T*
(subroutine with the latest version of the rest of the program. Many prog\rams are split across )Tj
T*
(dozens or hundreds of files: Programmers who don't purge old files frequ\ently link old code )Tj
T*
(with new by accident. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(FAILURE TO UPDATE MULTIPLE COPIES OF DATA OR PROGRAM FILES)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some programmers repeat the same code in many different program modules.\ When they )Tj
T*
(have to change this code, they may update 20 of the 25 copies of it, for\getting the others. As )Tj
T*
(a result, they might fix the same error 20 times, but you might still fi\nd 5 more just like it the )Tj
T*
(next time you test. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(NO TITLE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should identify itself when it starts. You should know right\ away that you are )Tj
T*
(now running Joe Blow's Super Spreadsheet, not Jane Doe's Deluxe Database\. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(NO VERSION ID)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should display its version identification when it starts or \when you give it a )Tj
0 -1.20001 TD
(display version command. Customers should be able to find this ID easily\, so they can tell it )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(82\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj614 0 obj 3913endobj615 0 obj<</Length 614 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(to you when they call to complain about the program. You should be able \to find the ID )Tj
0 -1.2 TD
(easily so that you can tell it to the programmer when you find bugs. )Tj
0 -2.55714 TD
(If the program is made of many independently developed pieces, it pays t\o be able to identify )Tj
0 -1.2 TD
(the version of each piece. These IDs may not display automatically\363yo\u may have to use a )Tj
T*
(debugger or a special editor to find them. They are useful if they exist\ and if they are kept up )Tj
T*
(to date by the programmers. However, unless you have firm management bac\king, do not )Tj
T*
(insist that programmers compile separate version IDs for each module. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(WRONG VERSION NUMBER ON THE TITLE SCREEN)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Programs usually display a version number on the title screen or in an A\bout dialog box. )Tj
T*
(Usually, the programmer can change the code much faster than she can kee\p the correct )Tj
T*
(version number updated on the title screen. The result is you might be u\sing software version )Tj
T*
(2.1 but the title screen still shows 2.0. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(NO COPYRIGHT MESSAGE OR A BAD ONE)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The program should display a copyright message as soon as it starts. The\ message should )Tj
T*
(include the copyright symbol \(it is common to use \(C\)\), the year\(s\)\ that the program was )Tj
T*
(developed, copyrighted or shipped, your company's name and address, and \the words )Tj
/T1_2 1 Tf
(All )Tj
T*
(Rights Reserved)Tj
/T1_0 1 Tf
(. We use the following form: )Tj
11.40628 -2.55714 Td
(Copyright \251 1979, 1983, 1987, 1993)Tj
-1.32549 -1.2 Td
(Cem Kaner, Human Interface Technologies)Tj
-1.53151 -1.2 Td
(801 Foster City Blvd. #101, Foster City, CA 94404)Tj
6.2095 -1.2 Td
(All Rights Reserved)Tj
-14.75879 -2.55714 Td
(If an earlier version of the program showed a copyright year of 1979, yo\u should still say )Tj
T*
(1979 in this notice, along with this year's date. For more details, ask \your company's )Tj
T*
(attorney. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(ARCHIVED SOURCE DOESN'T COMPILE INTO A MATCH FOR SHIPPING )Tj
0 -1.2 TD
(CODE)Tj
/T1_0 1 Tf
( )Tj
T*
(Before releasing a product to any customer, archive the source code. If \the customer finds a )Tj
T*
(bug, your company must be able to recompile this code and regenerate the\ product that the )Tj
T*
(customer has. Without this starting point, you will have major problems \addressing that )Tj
T*
(customer's difficulties. This should be obvious, but it seems not to be.\ I've been amazed at )Tj
T*
(how many companies can't recreate products they sell. They may have arch\ival copies of )Tj
T*
(source code, but the code in their vaults is a bit different from the co\de in the product they )Tj
T*
(shipped. This is begging for a disaster. If you report that archives are\ not up to date with )Tj
T*
(code that is about to be shipped, and are rebuffed, take it to a higher \level. The president and )Tj
T*
(the company lawyer might be much more concerned by this problem than mid\-level )Tj
T*
(engineering or marketing managers. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(83\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj616 0 obj 4328endobj617 0 obj<</Length 616 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 746.17554 Tm
(MANUFACTURED DISKS DON'T WORK OR CONTAIN WRONG CODE OR )Tj
0 -1.2 TD
(DATA)Tj
/T1_0 1 Tf
( )Tj
T*
(When the disks have been duplicated and the product is ready to ship, ch\eck a few disks. We )Tj
T*
(are not suggesting that you take over the role of manufacturing QA. We a\re suggesting that )Tj
T*
(any error that occurs in all manufactured copies of the product is an er\ror you should find. )Tj
0 -2.55714 TD
(Disk duplicators might crank out blank disks instead of the copies you e\xpected them to )Tj
0 -1.2 TD
(make. It is embarrassing when you ship blanks as the product, and expens\ive to send )Tj
T*
(customers replacement disks. This does happen. Over the last two years, \I've received blank )Tj
T*
(disks as a customer three times \(three different companies\). Similarly\, the manufacturing )Tj
T*
(group might duplicate the wrong version \(Version 1.0 again instead of 2\.0\) or the wrong )Tj
T*
(program \(buy a database, get a spreadsheet instead\), sometimes because\ you gave them the )Tj
T*
(wrong disks to duplicate.   )Tj
ET
0.5 0.5 0.5 rg
108.45 509.60001 m
108.45 511.60001 l
503.54999 511.60001 l
502.54999 510.60001 l
109.45 510.60001 l
109.45 510.60001 l
h
f
0.875 0.875 0.875 rg
503.54999 511.60001 m
503.54999 509.60001 l
108.45 509.60001 l
109.45 510.60001 l
502.54999 510.60001 l
502.54999 510.60001 l
h
f
0 0 0 rg
BT
/T1_1 1 Tf
14 0 0 14 42.60001 471.57556 Tm
(TESTING ERRORS)Tj
/T1_0 1 Tf
( )Tj
0 -2.55714 TD
(This section deals with technical, procedural, and reporting errors made\ by testers and )Tj
0 -1.2 TD
(Testing Groups. Even though these aren't problems in the programs per se\, you'll run into )Tj
T*
(them when testing programs. Our focus is on suggestions for dealing with\ these problems, )Tj
T*
(since they're under your control. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(MISSING BUGS IN THE PROGRAM)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You will always miss bugs because you can't execute all possible tests. \However, you'll )Tj
T*
(probably miss more bugs than you have to. When a bug is discovered in th\e field or late in )Tj
T*
(testing, ask why. Not to assign blame but to look for ways to strengthen\ your test procedures. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to notice a problem)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You may miss a bug that a test exposes because: )Tj
/T1_2 1 Tf
7 0 0 7 68.313 210.77556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 210.77556 Tm
(You don't know what the correct test results are. Whenever possible, inc\lude expected )Tj
T*
(results in the test notes. In automated tests, display them beside test \results on the )Tj
T*
(screen and on printouts. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 160.37555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 160.37555 Tm
(The error is buried in a massive printout. People scan long outputs quic\kly. Keep )Tj
T*
(printouts as short as you can, and make errors obvious at a glance. Patt\erned outputs )Tj
T*
(are good. If possible, redirect long outputs to a disk file; have the co\mputer check this )Tj
T*
(against a known good file. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 93.17555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 93.17555 Tm
(You don't expect to see it exposed by this test. While a test may be des\igned to focus )Tj
T*
(on one small part of a program it can still reveal other, unexpected, bu\gs. Beware of )Tj
T*
(tunnel vision. )Tj
/T1_2 1 Tf
7 0 0 7 68.313 42.77556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 42.77556 Tm
(You are bored or inattentive. Rotate tasks across testers. Try not to ha\ve the same )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(84\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj618 0 obj 4334endobj619 0 obj<</Length 618 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 82.60001 753.97552 Tm
(person run the same test more than three times. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 737.17554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 737.17554 Tm
(The mechanics of running the test are so complicated that you pay more a\ttention to )Tj
0 -1.2 TD
(them than to the test outputs. You will be distracted by files or printo\uts with )Tj
T*
(erroneous comparison data, poorly organized checklists, procedures that \require you )Tj
T*
(to swap disks or tapes frequently, and tasks that you have to redo from \the start if you )Tj
T*
(make an entry error. )Tj
/T1_2 1 Tf
-2.85715 -2.55714 Td
(Misreading the screen)Tj
/T1_0 1 Tf
( )Tj
T*
(You can easily miss errors like spelling mistakes, missing menu items, a\nd misaligned text. )Tj
T*
(Reserve some time exclusively for scrutinizing the screen. It's just lik\e proofreading )Tj
T*
(manuscripts: unless you're consciously looking for spelling and layout e\rrors, you'll see what )Tj
T*
(you expect to see, filling in gaps and correctly spelling mistakes uncon\sciously. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Failure to report a problem)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You may find a problem and not report it because: )Tj
/T1_1 1 Tf
7 0 0 7 68.313 478.57556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 478.57556 Tm
(You keep poor notes )Tj
/T1_1 1 Tf
7 0 0 7 68.313 461.77554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 461.77554 Tm
(You're not sure if it's a bug and are afraid to look silly )Tj
/T1_1 1 Tf
7 0 0 7 68.313 444.97556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 444.97556 Tm
(You think it's too minor or you don't think it will be fixed )Tj
/T1_1 1 Tf
7 0 0 7 68.313 428.17554 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 428.17554 Tm
(You're told not to report bugs like this any more )Tj
-2.85715 -2.55714 Td
(These are not acceptable reasons. If you're not sure whether something i\s a problem, say so )Tj
T*
(in the report. Appeal to higher management to relieve criticism for repo\rting minor or )Tj
T*
(politically inconvenient bugs. It is your responsibility to report every\ problem you find. )Tj
T*
(Deliberate suppression of bug reports leads to confusion, poorer tester \morale, and a poorer )Tj
T*
(product. It can also bring you into the middle of nasty office politics,\ possibly as a scapegoat. )Tj
/T1_2 1 Tf
0 -2.55714 TD
(Failure to execute a planned test)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You may not execute a planned test because: )Tj
/T1_1 1 Tf
7 0 0 7 68.313 236.77556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 236.77556 Tm
(Your test materials or notes are disorganized. You've lost track of what\ has been )Tj
T*
(tested. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 203.17555 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 203.17555 Tm
(You are bored. The test series is repetitive. You take shortcuts by skip\ping tests that )Tj
T*
(are similar to others. To reduce this, rotate tasks among testers. Reduc\e repetition by )Tj
T*
(combining cases, cutting some out, or running some tests only on every s\econd or )Tj
T*
(third cycle of testing. )Tj
/T1_1 1 Tf
7 0 0 7 68.313 135.97556 Tm
(l)Tj
/T1_0 1 Tf
(     )Tj
14 0 0 14 82.60001 135.97556 Tm
(You have combined too much into one test. If one test is buried inside a\nother, or )Tj
T*
(depends on another, then if that other test fails, this test probably wo\n't be executed. )Tj
T*
(Overly complex combinations of test cases can lead to missed tests becau\se they )Tj
T*
(confuse you. )Tj
/T1_2 1 Tf
-2.85715 -2.55714 Td
(Failure to use the most "promising" test cases)Tj
/T1_0 1 Tf
( )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(85\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj620 0 obj 3934endobj621 0 obj<</Length 620 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(If two test cases cover essentially the same code, you should use the on\e most likely to )Tj
0 -1.2 TD
(reveal an error \(see Chapter 6\). )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Ignoring programmers' suggestions)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(The programmer knows better than anyone else which areas of the program \he tested least, )Tj
T*
(and which ones proved least stable under his testing. He knows which are\as he coded )Tj
T*
(quickly. He knows which special types of tests have exposed bugs so far.\ Rigid test plans )Tj
T*
(and bad politics are problems in their own right, but they are not excus\es for ignoring )Tj
T*
(programmers' tips. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(FINDING "BUGS" THAT AREN'T IN THE PROGRAM)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You report an error. Eventually, the problem is traced to a flaw in your\ test procedure, a )Tj
T*
(misunderstanding of the program, or to something else that you did. This\ wastes time and )Tj
T*
(does your credibility no good. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Errors in testing programs)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(When you automate tests, you write programs to drive test cases. Your te\st programs will )Tj
T*
(have bugs. Some will abort your tests, or skip them. Others will make th\e program appear to )Tj
T*
(fail tests that it can actually pass. It is common to compare test data \against incorrect "known )Tj
T*
(good" results. Your disk files and printed constants are no more likely \correct than the )Tj
T*
(program's output. )Tj
0 -2.55714 TD
(You should manually reproduce any automated tests that reveal errors. Th\is doesn't take all )Tj
0 -1.2 TD
(that much time because you only redo tests that the program fails. Unles\s the program is in )Tj
T*
(disastrously bad shape, it won't fail many tests. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Corrupted data file)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Some apparent bugs are due to a bad data file that you're using while te\sting. Programs will )Tj
T*
(trash input, output, and comparison files. Your files may be corrupted a\t any time, even by )Tj
T*
(program segments that, if they were error-free, wouldn't read or write t\hese files. When a )Tj
T*
(program is in testing, it doesn't matter that it isn't supposed to touch\ a file. If the program )Tj
T*
(worked the way it was supposed to, you wouldn't have to test it. It is w\ise to keep three )Tj
T*
(backup copies of test files on separate disks or tapes. Before reporting\ an error, check your )Tj
T*
(working copies of the input and comparison files against the backups. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Misinterpreted specifications or documentation)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You think the program works incorrectly because you've misunderstood the\ documentation. )Tj
T*
(This is unavoidable. Specifications are outdated, and early versions of \the documentation are )Tj
T*
(rough. You rarely have much time to read before starting to test the pro\gram. )Tj
0 -2.55714 TD
(When you find an error, unless you're sure you understand what's happeni\ng in this part of )Tj
0 -1.2 TD
(the program, reread the relevant sections of the documentation and speci\fications. If you're )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(86\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj622 0 obj 4009endobj623 0 obj<</Length 622 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(not sure whether what you've got is an error, write your report as a Que\ry. If the manual's )Tj
0 -1.2 TD
(unclear, file a Problem Report on that part of the manual too. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(POOR REPORTING)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It's not enough to find a bug. You have to communicate it to someone who\ can fix it, in a )Tj
T*
(way that makes it as easy as possible for that person to figure out what\ went wrong and what )Tj
T*
(to do about it. How well you describe the problem will directly affect h\ow easily it is )Tj
T*
(resolved. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Illegible reports)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If the programmer finds it hard to read a report, he will ignore it for \as long as possible. )Tj
T*
(Many reports are hard to read because you pack too much information into\ them. Put )Tj
T*
(separable problems on separate report forms. If a single problem require\s a long description, )Tj
T*
(type it on a separate page and attach it to the Problem Report. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to make it clear how to reproduce the problem)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You report a problem without outlining, step by step, what the programme\r must do to see it. )Tj
T*
(This is the most common error in problem reporting. It saves time to ski\p the details, but )Tj
T*
(realize that the first thing that the programmer is going to do with you\r report is sit at the )Tj
T*
(machine and try to see the problem himself. If he can't reproduce the pr\oblem, he won't fix it. )Tj
0 -2.55714 TD
(For anything complicated, attach a copy of any data files you were using\, a keystroke by )Tj
0 -1.2 TD
(keystroke list of things you did, a printed dump of the screen if your o\perating system )Tj
T*
(supports this, or any other comments or materials that will make the pro\grammer's job easier. )Tj
T*
(The nearer you are to the development deadline, the more important this \is. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to say that you can't reproduce a problem)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If you can't consistently reproduce the problem, say so. This tips off t\he conscientious )Tj
T*
(programmer that he should try variations on the conditions you describe.\ A non-)Tj
T*
(conscientious programmer might ignore your report as soon as she sees th\at you can't )Tj
T*
(replicate it, but she'd toss away the report anyway after trying exactly\ what you say you did )Tj
T*
(and, like you, failing to see the bug. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to check your report)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(After writing a report, but before submitting it, follow it step by step\ to reproduce the )Tj
T*
(problem. This costs a few moments but it catches transcription and other\ reporting errors that )Tj
T*
(you make. It is all too easy to omit or misdescribe important details, e\specially if you're )Tj
T*
(writing the report from notes or memory, long after seeing the bug. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to report timing dependencies)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You might not notice that to reproduce a bug you have to press two keys \within milliseconds )Tj
T*
(of each other, or that you have to wait at least 5 minutes between keyst\rokes. Sometimes you )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(87\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj624 0 obj 3766endobj625 0 obj<</Length 624 0 R>>stream
/Artifact <</Type /Pagination /BBox [18 778 582 787 ]/Attached [/Top ]>>BDC 
0 0 0 rg
0 i 
BT
/T1_0 1 Tf
0 Tc 0 Tw 0  Ts 100  Tz 0 Tr 9 0 0 9 18 780.17 Tm
(Appendix : Common Software Errors)Tj
ET
EMC 
/WebCaptureBG BMC 
/WebCaptureFN <</L 0 >>BDC 
q
0 18 612 756 re
W* n
/Artifact <</Type /Pagination /BBox [0 18 612 774 ]/Attached [/Top /Bottom /Left /Right ]>>BDC 
Q
0.96078 0.96078 0.96078 rg
0 18 612 756 re
f
EMC 
EMC 
EMC 
/Article <</MCID 0 >>BDC 
q
0 18 612 756 re
W* n
0 0 0 rg
BT
/T1_0 1 Tf
14 0 0 14 42.60001 753.97552 Tm
(will just not realize that you're dealing with a race condition or other\ time-dependent bug. If )Tj
0 -1.2 TD
(you do notice a time dependence, say so. Clock it as well as you can. If\ you didn't notice a )Tj
T*
(time dependence, look for one when a report comes back to you as irrepro\ducible. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to simplify conditions)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(You will often use complex test cases, combining many different tests in\to one, for speed of )Tj
T*
(testing. If all goes well, you've gotten through many tests quickly. Whe\n a bug does show )Tj
T*
(up, spend time looking for the simplest series of steps possible to repr\oduce it. Try not to lay )Tj
T*
(out a long and complicated series that includes irrelevancies. Complex r\eports are )Tj
T*
(disheartening to read and tempting to ignore. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Concentration on trivia)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Don't make big issues over small problems. Don't get too far drawn into \long arguments over )Tj
T*
(wording, or style of presentation. Don't exaggerate the severity of bugs\. Be wary of getting a )Tj
T*
(reputation as a nitpicker. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Abusive language)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If you refer to work as "unprofessional," "sloppy," or "incompetent," ex\pect the programmer )Tj
T*
(who did it to get angry. Don't bet that he'll fix the bug, even if it's \serious. It can be useful to )Tj
T*
(shock a programmer occasionally, but be conscious of what you're doing. \Do it rarely \(once )Tj
T*
(a year\). )Tj
/T1_1 1 Tf
0 -2.55714 TD
(POOR TRACKING OR FOLLOW-UP)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(It's not enough to just report a bug. You've got to make sure that it's \noticed and not )Tj
T*
(forgotten. Otherwise, bugs will "slip through the cracks" and make it in\to the shipping )Tj
T*
(product. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to provide summary reports)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(Don't assume that just because you gave it to a programmer, it's being d\ealt with. Some )Tj
T*
(programmers lose reports. Others use them to make paper airplanes or wra\p fish. Some also )Tj
T*
(hide reports from their managers. Every week or two, you should circulat\e a brief description )Tj
T*
(of unfixed bugs. Make this a standard procedure, for all bugs, to keep i\t impersonal and )Tj
T*
(uncontroversial. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to re-report serious bugs)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(If the bug is serious, don't automatically accept a response of Deferred\ or Works to Spec. )Tj
T*
(Figure out a way to make it look a little worse and report it again. If \it's an ugly, horrible )Tj
T*
(bug, make it sound that way the second time. If that doesn't work, send \a copy of the third )Tj
T*
(report to a more senior manager. )Tj
/T1_1 1 Tf
0 -2.55714 TD
(Failure to verify fixes)Tj
/T1_0 1 Tf
( )Tj
0 -1.2 TD
(A programmer reports that he fixed a problem. Don't take his word for it\ without retesting. )Tj
ET
EMC 
/Artifact <</Type /Pagination /BBox [18 5 582 14 ]/Attached [/Bottom ]>>BDC 
Q
0 0 0 rg
BT
/T1_0 1 Tf
9 0 0 9 18 7.17 Tm
(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html \(88\ of 89\)7/28/2005 9:44:26 AM)Tj
ET
EMC 

endstreamendobj626 0 obj(Appendix : Common Software Errors)endobj627 0 obj<</C 631 0 R/V 1.25>>endobj628 0 obj<</S 629 0 R/URL(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html)>>endobj629 0 obj<</G 630 0 R>>endobj630 0 obj<</PS[792.0 612.0]/M[10.080002 10.080002 26.0 36.0]/S 0/AS 1/PO 0/AT 70/AH 0/AL 0/CB 0/SU 1>>endobj631 0 obj[628 0 R]endobj632 0 obj(file:///E|/LogiGear/2004_Website_Update/Articles/common_errors.html)endobj633 0 obj(NPnSc~qC€æZßËë÷)endobj634 0 obj<</ID 633 0 R/O[7 0 R 23 0 R 25 0 R 29 0 R 31 0 R 33 0 R 35 0 R 40 0 R 45 0 R 49 0 R 53 0 R 66 0 R 74 0 R 80 0 R 89 0 R 98 0 R 103 0 R 107 0 R 111 0 R 115 0 R 119 0 R 124 0 R 128 0 R 133 0 R 137 0 R 141 0 R 146 0 R 150 0 R 154 0 R 158 0 R 162 0 R 167 0 R 171 0 R 175 0 R 179 0 R 183 0 R 188 0 R 192 0 R 197 0 R 201 0 R 205 0 R 211 0 R 215 0 R 219 0 R 224 0 R 228 0 R 233 0 R 238 0 R 242 0 R 246 0 R 250 0 R 256 0 R 262 0 R 268 0 R 272 0 R 276 0 R 281 0 R 285 0 R 289 0 R 293 0 R 297 0 R 302 0 R 306 0 R 311 0 R 315 0 R 321 0 R 326 0 R 330 0 R 334 0 R 339 0 R 343 0 R 348 0 R 352 0 R 357 0 R 361 0 R 365 0 R 370 0 R 376 0 R 380 0 R 384 0 R 388 0 R 393 0 R 398 0 R 402 0 R 407 0 R 411 0 R 416 0 R 420 0 R 424 0 R]/S/SPS/T 626 0 R/CT(text/html)/SI 635 0 R/TID 636 0 R/TS(D:20050728234426)>>endobj635 0 obj<</AU 632 0 R/TS(D:20050728234426)>>endobj636 0 obj(íQ¡QÜ7Q‘B…éSÆ)endobj637 0 obj<</Names[633 0 R 634 0 R]>>endobj638 0 obj<</Names[632 0 R 634 0 R]>>endobj639 0 obj<</Count 1/Parent 6 0 R/First 640 0 R/Last 640 0 R/Title(Local Disk)>>endobj640 0 obj<</Parent 639 0 R/Dest[7 0 R/XYZ 0 792 null]/Title(Appendix : Common Software Errors)/SE 14 0 R>>endobj641 0 obj<</Length 3255/Type/Metadata/Subtype/XML>>stream
<?xpacket begin='Ôªø' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:7ade4e98-e374-42c5-ab70-ddeede04216a' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Web Capture 6.0'></rdf:Description>
<rdf:Description rdf:about='uuid:7ade4e98-e374-42c5-ab70-ddeede04216a' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:ModifyDate='2005-07-28T16:44:26-07:00' xap:CreateDate='2005-07-28T16:44:14Z' xap:MetadataDate='2005-07-28T16:44:26-07:00'></rdf:Description>
<rdf:Description rdf:about='uuid:7ade4e98-e374-42c5-ab70-ddeede04216a' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:4ce6a681-0ad6-41b8-a2a1-fd32e6424d70'/>
<rdf:Description rdf:about='uuid:7ade4e98-e374-42c5-ab70-ddeede04216a' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Appendix : Common Software Errors</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end='w'?>
endstreamendobjxref
0 642
0000000004 65535 f
0000000016 00000 n
0000000161 00000 n
0000000230 00000 n
0000000060 00001 f
0000000389 00000 n
0000000409 00000 n
0000000477 00000 n
0000000698 00000 n
0000000754 00000 n
0000001403 00000 n
0000001448 00000 n
0000001552 00000 n
0000001597 00000 n
0000001646 00000 n
0000004422 00000 n
0000004606 00000 n
0000004730 00000 n
0000004806 00000 n
0000004895 00000 n
0000006086 00000 n
0000006110 00000 n
0000006152 00000 n
0000006176 00000 n
0000006372 00000 n
0000006396 00000 n
0000006606 00000 n
0000006630 00000 n
0000006874 00000 n
0000006898 00000 n
0000007082 00000 n
0000007106 00000 n
0000007290 00000 n
0000007314 00000 n
0000007498 00000 n
0000007522 00000 n
0000007720 00000 n
0000007744 00000 n
0000007993 00000 n
0000008024 00000 n
0000008272 00000 n
0000008470 00000 n
0000008494 00000 n
0000008743 00000 n
0000008774 00000 n
0000009023 00000 n
0000009221 00000 n
0000009470 00000 n
0000009494 00000 n
0000009518 00000 n
0000009716 00000 n
0000009740 00000 n
0000009994 00000 n
0000010018 00000 n
0000010217 00000 n
0000010312 00000 n
0000010406 00000 n
0000010496 00000 n
0000010589 00000 n
0000010678 00000 n
0000000061 00001 f
0000000067 00001 f
0000010773 00000 n
0000010797 00000 n
0000011048 00000 n
0000011079 00000 n
0000011330 00000 n
0000000068 00001 f
0000000076 00001 f
0000011529 00000 n
0000011780 00000 n
0000011818 00000 n
0000011842 00000 n
0000012096 00000 n
0000012342 00000 n
0000012552 00000 n
0000000077 00001 f
0000000081 00001 f
0000012640 00000 n
0000012664 00000 n
0000012710 00000 n
0000000082 00001 f
0000000090 00001 f
0000012908 00000 n
0000012932 00000 n
0000012973 00000 n
0000013019 00000 n
0000013065 00000 n
0000013111 00000 n
0000013156 00000 n
0000000091 00001 f
0000000100 00001 f
0000013341 00000 n
0000013365 00000 n
0000013411 00000 n
0000013457 00000 n
0000013503 00000 n
0000013549 00000 n
0000013595 00000 n
0000013794 00000 n
0000000101 00001 f
0000000104 00001 f
0000013889 00000 n
0000013914 00000 n
0000000105 00001 f
0000000108 00001 f
0000014101 00000 n
0000014126 00000 n
0000000109 00001 f
0000000112 00001 f
0000014313 00000 n
0000014338 00000 n
0000000113 00001 f
0000000116 00001 f
0000014525 00000 n
0000014550 00000 n
0000000117 00001 f
0000000121 00001 f
0000014737 00000 n
0000014762 00000 n
0000014962 00000 n
0000000122 00001 f
0000000125 00001 f
0000015062 00000 n
0000015087 00000 n
0000000126 00001 f
0000000130 00001 f
0000015287 00000 n
0000015312 00000 n
0000015499 00000 n
0000000131 00001 f
0000000134 00001 f
0000015566 00000 n
0000015591 00000 n
0000000135 00001 f
0000000138 00001 f
0000015791 00000 n
0000015816 00000 n
0000000139 00001 f
0000000143 00001 f
0000016003 00000 n
0000016028 00000 n
0000016215 00000 n
0000000144 00001 f
0000000147 00001 f
0000016316 00000 n
0000016341 00000 n
0000000148 00001 f
0000000151 00001 f
0000016528 00000 n
0000016553 00000 n
0000000152 00001 f
0000000155 00001 f
0000016740 00000 n
0000016765 00000 n
0000000156 00001 f
0000000159 00001 f
0000016952 00000 n
0000016977 00000 n
0000000160 00001 f
0000000164 00001 f
0000017164 00000 n
0000017189 00000 n
0000017376 00000 n
0000000165 00001 f
0000000168 00001 f
0000017477 00000 n
0000017502 00000 n
0000000169 00001 f
0000000172 00001 f
0000017689 00000 n
0000017714 00000 n
0000000173 00001 f
0000000176 00001 f
0000017914 00000 n
0000017939 00000 n
0000000177 00001 f
0000000180 00001 f
0000018126 00000 n
0000018151 00000 n
0000000181 00001 f
0000000185 00001 f
0000018351 00000 n
0000018376 00000 n
0000018563 00000 n
0000000186 00001 f
0000000189 00001 f
0000018664 00000 n
0000018689 00000 n
0000000190 00001 f
0000000193 00001 f
0000018876 00000 n
0000018901 00000 n
0000000194 00001 f
0000000198 00001 f
0000019088 00000 n
0000019113 00000 n
0000019161 00000 n
0000000199 00001 f
0000000202 00001 f
0000019348 00000 n
0000019373 00000 n
0000000203 00001 f
0000000207 00001 f
0000019560 00000 n
0000019585 00000 n
0000019772 00000 n
0000000208 00001 f
0000000212 00001 f
0000019873 00000 n
0000019898 00000 n
0000019945 00000 n
0000000213 00001 f
0000000216 00001 f
0000020145 00000 n
0000020170 00000 n
0000000217 00001 f
0000000220 00001 f
0000020383 00000 n
0000020408 00000 n
0000000221 00001 f
0000000225 00001 f
0000020608 00000 n
0000020633 00000 n
0000020681 00000 n
0000000226 00001 f
0000000230 00001 f
0000020868 00000 n
0000020893 00000 n
0000021080 00000 n
0000000231 00001 f
0000000234 00001 f
0000021181 00000 n
0000021206 00000 n
0000000235 00001 f
0000000239 00001 f
0000021393 00000 n
0000021418 00000 n
0000021466 00000 n
0000000240 00001 f
0000000243 00001 f
0000021666 00000 n
0000021691 00000 n
0000000244 00001 f
0000000247 00001 f
0000021878 00000 n
0000021903 00000 n
0000000248 00001 f
0000000252 00001 f
0000022090 00000 n
0000022115 00000 n
0000022315 00000 n
0000000253 00001 f
0000000259 00001 f
0000022416 00000 n
0000022441 00000 n
0000022489 00000 n
0000022689 00000 n
0000022789 00000 n
0000000260 00001 f
0000000265 00001 f
0000022886 00000 n
0000022911 00000 n
0000023111 00000 n
0000023203 00000 n
0000000266 00001 f
0000000269 00001 f
0000023290 00000 n
0000023315 00000 n
0000000270 00001 f
0000000273 00001 f
0000023502 00000 n
0000023527 00000 n
0000000274 00001 f
0000000278 00001 f
0000023714 00000 n
0000023739 00000 n
0000023926 00000 n
0000000279 00001 f
0000000282 00001 f
0000024027 00000 n
0000024052 00000 n
0000000283 00001 f
0000000286 00001 f
0000024252 00000 n
0000024277 00000 n
0000000287 00001 f
0000000290 00001 f
0000024477 00000 n
0000024502 00000 n
0000000291 00001 f
0000000294 00001 f
0000024702 00000 n
0000024727 00000 n
0000000295 00001 f
0000000299 00001 f
0000024927 00000 n
0000024952 00000 n
0000025152 00000 n
0000000300 00001 f
0000000303 00001 f
0000025253 00000 n
0000025278 00000 n
0000000304 00001 f
0000000307 00001 f
0000025465 00000 n
0000025490 00000 n
0000000308 00001 f
0000000312 00001 f
0000025677 00000 n
0000025702 00000 n
0000025750 00000 n
0000000313 00001 f
0000000316 00001 f
0000025937 00000 n
0000025962 00000 n
0000000317 00001 f
0000000323 00001 f
0000026149 00000 n
0000026174 00000 n
0000026541 00000 n
0000027209 00000 n
0000027396 00000 n
0000000324 00001 f
0000000327 00001 f
0000027497 00000 n
0000027522 00000 n
0000000328 00001 f
0000000331 00001 f
0000027709 00000 n
0000027734 00000 n
0000000332 00001 f
0000000335 00001 f
0000027921 00000 n
0000027946 00000 n
0000000336 00001 f
0000000340 00001 f
0000028133 00000 n
0000028158 00000 n
0000028206 00000 n
0000000341 00001 f
0000000345 00001 f
0000028406 00000 n
0000028431 00000 n
0000028618 00000 n
0000000346 00001 f
0000000349 00001 f
0000028719 00000 n
0000028744 00000 n
0000000350 00001 f
0000000353 00001 f
0000028944 00000 n
0000028969 00000 n
0000000354 00001 f
0000000358 00001 f
0000029156 00000 n
0000029181 00000 n
0000029229 00000 n
0000000359 00001 f
0000000362 00001 f
0000029429 00000 n
0000029454 00000 n
0000000363 00001 f
0000000367 00001 f
0000029641 00000 n
0000029666 00000 n
0000029853 00000 n
0000000368 00001 f
0000000372 00001 f
0000029954 00000 n
0000029979 00000 n
0000030166 00000 n
0000000373 00001 f
0000000377 00001 f
0000030282 00000 n
0000030307 00000 n
0000030355 00000 n
0000000378 00001 f
0000000381 00001 f
0000030542 00000 n
0000030567 00000 n
0000000382 00001 f
0000000385 00001 f
0000030754 00000 n
0000030779 00000 n
0000000386 00001 f
0000000390 00001 f
0000030966 00000 n
0000030991 00000 n
0000031191 00000 n
0000000391 00001 f
0000000394 00001 f
0000031292 00000 n
0000031317 00000 n
0000000395 00001 f
0000000399 00001 f
0000031504 00000 n
0000031529 00000 n
0000031577 00000 n
0000000400 00001 f
0000000403 00001 f
0000031777 00000 n
0000031802 00000 n
0000000404 00001 f
0000000408 00001 f
0000032002 00000 n
0000032027 00000 n
0000032075 00000 n
0000000409 00001 f
0000000413 00001 f
0000032275 00000 n
0000032300 00000 n
0000032487 00000 n
0000000414 00001 f
0000000417 00001 f
0000032620 00000 n
0000032645 00000 n
0000000418 00001 f
0000000421 00001 f
0000032832 00000 n
0000032857 00000 n
0000000422 00001 f
0000000425 00001 f
0000033044 00000 n
0000033069 00000 n
0000000426 00001 f
0000000430 00001 f
0000033271 00000 n
0000033296 00000 n
0000033546 00000 n
0000000431 00001 f
0000000432 00001 f
0000000433 00001 f
0000000434 00001 f
0000000435 00001 f
0000000436 00001 f
0000000437 00001 f
0000000438 00001 f
0000000439 00001 f
0000000440 00001 f
0000000441 00001 f
0000000442 00001 f
0000000443 00001 f
0000000444 00001 f
0000000445 00001 f
0000000446 00001 f
0000000447 00001 f
0000000000 00001 f
0000033572 00000 n
0000033594 00000 n
0000037686 00000 n
0000037708 00000 n
0000041922 00000 n
0000041944 00000 n
0000044875 00000 n
0000044897 00000 n
0000047375 00000 n
0000047397 00000 n
0000049890 00000 n
0000049912 00000 n
0000052482 00000 n
0000052504 00000 n
0000055040 00000 n
0000055062 00000 n
0000057587 00000 n
0000057609 00000 n
0000060261 00000 n
0000060283 00000 n
0000062943 00000 n
0000062965 00000 n
0000065697 00000 n
0000065719 00000 n
0000068295 00000 n
0000068317 00000 n
0000071557 00000 n
0000071579 00000 n
0000075329 00000 n
0000075351 00000 n
0000078974 00000 n
0000078996 00000 n
0000083235 00000 n
0000083257 00000 n
0000087062 00000 n
0000087084 00000 n
0000091087 00000 n
0000091109 00000 n
0000094916 00000 n
0000094938 00000 n
0000098926 00000 n
0000098948 00000 n
0000103161 00000 n
0000103183 00000 n
0000107399 00000 n
0000107421 00000 n
0000111303 00000 n
0000111325 00000 n
0000115290 00000 n
0000115312 00000 n
0000119075 00000 n
0000119097 00000 n
0000122953 00000 n
0000122975 00000 n
0000126736 00000 n
0000126758 00000 n
0000130303 00000 n
0000130325 00000 n
0000133786 00000 n
0000133808 00000 n
0000137597 00000 n
0000137619 00000 n
0000141369 00000 n
0000141391 00000 n
0000145095 00000 n
0000145117 00000 n
0000149284 00000 n
0000149306 00000 n
0000153159 00000 n
0000153181 00000 n
0000157342 00000 n
0000157364 00000 n
0000161178 00000 n
0000161200 00000 n
0000164602 00000 n
0000164624 00000 n
0000168527 00000 n
0000168549 00000 n
0000172353 00000 n
0000172375 00000 n
0000176189 00000 n
0000176211 00000 n
0000180043 00000 n
0000180065 00000 n
0000183977 00000 n
0000183999 00000 n
0000187942 00000 n
0000187964 00000 n
0000192251 00000 n
0000192273 00000 n
0000196077 00000 n
0000196099 00000 n
0000200315 00000 n
0000200337 00000 n
0000204663 00000 n
0000204685 00000 n
0000209085 00000 n
0000209107 00000 n
0000213379 00000 n
0000213401 00000 n
0000217659 00000 n
0000217681 00000 n
0000221683 00000 n
0000221705 00000 n
0000226356 00000 n
0000226378 00000 n
0000230878 00000 n
0000230900 00000 n
0000235262 00000 n
0000235284 00000 n
0000239266 00000 n
0000239288 00000 n
0000243229 00000 n
0000243251 00000 n
0000247425 00000 n
0000247447 00000 n
0000250852 00000 n
0000250874 00000 n
0000254131 00000 n
0000254153 00000 n
0000258281 00000 n
0000258303 00000 n
0000261912 00000 n
0000261934 00000 n
0000264952 00000 n
0000264974 00000 n
0000268518 00000 n
0000268540 00000 n
0000272586 00000 n
0000272608 00000 n
0000276655 00000 n
0000276677 00000 n
0000280933 00000 n
0000280955 00000 n
0000285077 00000 n
0000285099 00000 n
0000289233 00000 n
0000289255 00000 n
0000293422 00000 n
0000293444 00000 n
0000297602 00000 n
0000297624 00000 n
0000301923 00000 n
0000301945 00000 n
0000306164 00000 n
0000306186 00000 n
0000310275 00000 n
0000310297 00000 n
0000314686 00000 n
0000314708 00000 n
0000318694 00000 n
0000318716 00000 n
0000323083 00000 n
0000323105 00000 n
0000327059 00000 n
0000327081 00000 n
0000330845 00000 n
0000330867 00000 n
0000334799 00000 n
0000334821 00000 n
0000336940 00000 n
0000336962 00000 n
0000340813 00000 n
0000340835 00000 n
0000344796 00000 n
0000344818 00000 n
0000348935 00000 n
0000348957 00000 n
0000352925 00000 n
0000352947 00000 n
0000357330 00000 n
0000357352 00000 n
0000361741 00000 n
0000361763 00000 n
0000365752 00000 n
0000365774 00000 n
0000369838 00000 n
0000369860 00000 n
0000373681 00000 n
0000373733 00000 n
0000373771 00000 n
0000373875 00000 n
0000373906 00000 n
0000374016 00000 n
0000374042 00000 n
0000374128 00000 n
0000374163 00000 n
0000374967 00000 n
0000375020 00000 n
0000375055 00000 n
0000375099 00000 n
0000375143 00000 n
0000375230 00000 n
0000375344 00000 n
trailer
<</Size 642/Root 1 0 R/Info 3 0 R/ID[<90aea038e9656045aa681f03a7530790><6f684c73ea951642ae322151492d26da>]>>
startxref
378677
%%EOF
